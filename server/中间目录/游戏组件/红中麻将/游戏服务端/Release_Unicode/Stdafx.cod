; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.24215.1 

	TITLE	D:\qijianban\laok\服务端\游戏组件\老K子游戏\红中麻将\服务器组件\Stdafx.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	___@@_PchSym_@00@UjrqrzmyzmUozlpUKltKqnKrmKluKrpKpyKlsKpoKpkUKlvKorKpmKlqKqsKovKlsKqoKplKluKomKquUKltKorKorKltKrrKrkKlsKooKrvKlvKooKotUKlsKopKpxKlvKorKpmKlqKopKooKluKozKrtUKltKorKorKltKrrKrkKltKqnKrmKluKrpKpyKlsKpoKpkUivovzhvPfmrxlwvUhgwzucOlyq@D48CCF38ADA3155B
PUBLIC	?chDirSep@ATL@@3_WB				; ATL::chDirSep
PUBLIC	?chRightBracket@ATL@@3_WB			; ATL::chRightBracket
PUBLIC	?chLeftBracket@ATL@@3_WB			; ATL::chLeftBracket
PUBLIC	?chQuote@ATL@@3_WB				; ATL::chQuote
PUBLIC	?chEquals@ATL@@3_WB				; ATL::chEquals
PUBLIC	?szStringVal@ATL@@3QB_WB			; ATL::szStringVal
PUBLIC	?multiszStringVal@ATL@@3QB_WB			; ATL::multiszStringVal
PUBLIC	?szDwordVal@ATL@@3QB_WB				; ATL::szDwordVal
PUBLIC	?szBinaryVal@ATL@@3QB_WB			; ATL::szBinaryVal
PUBLIC	?szValToken@ATL@@3QB_WB				; ATL::szValToken
PUBLIC	?szForceRemove@ATL@@3QB_WB			; ATL::szForceRemove
PUBLIC	?szNoRemove@ATL@@3QB_WB				; ATL::szNoRemove
PUBLIC	__pAtlLocaleNameToIndexTable
PUBLIC	?szDelete@ATL@@3QB_WB				; ATL::szDelete
PUBLIC	_IID_IAxWinHostWindow
PUBLIC	?CLSID_ImageOle@@3U_GUID@@A			; CLSID_ImageOle
PUBLIC	?IID_IImageOle@@3U_GUID@@A			; IID_IImageOle
PUBLIC	?IID_IRichEditOleCallback2@@3U_GUID@@A		; IID_IRichEditOleCallback2
PUBLIC	?CLSID_WinFormsControl@@3U_GUID@@B		; CLSID_WinFormsControl
PUBLIC	?_pAtlAutoThreadModule@ATL@@3PAUIAtlAutoThreadModule@1@A ; ATL::_pAtlAutoThreadModule
PUBLIC	_IID_IAxWinHostWindowLic
PUBLIC	_IID_IAxWinAmbientDispatch
PUBLIC	?_pAtlModule@ATL@@3PAVCAtlModule@1@A		; ATL::_pAtlModule
PUBLIC	__pIncludeInitManaged
PUBLIC	_IID_IAxWinAmbientDispatchEx
PUBLIC	_IID_IInternalConnection
PUBLIC	_LIBID_ShockwaveFlashObjects
PUBLIC	_IID_IShockwaveFlash
PUBLIC	_DIID__IShockwaveFlashEvents
PUBLIC	_CLSID_ShockwaveFlash
PUBLIC	?szInvalidDateTime@ATL@@3QB_WB			; ATL::szInvalidDateTime
PUBLIC	_IID_IFlashFactory
PUBLIC	_IID_IDispatchEx
PUBLIC	?szInvalidDateTimeSpan@ATL@@3QB_WB		; ATL::szInvalidDateTimeSpan
PUBLIC	_IID_IFlashObjectInterface
PUBLIC	_CLSID_FlashObjectInterface
PUBLIC	_LIBID_ATLLib
PUBLIC	_CLSID_Registrar
PUBLIC	?_pModule@ATL@@3PAVCComModule@1@A		; ATL::_pModule
PUBLIC	_IID_IRegistrar
PUBLIC	___pobjMapEntryFirst
PUBLIC	___pobjMapEntryLast
PUBLIC	__pAtlLcidToLocaleNameTable
PUBLIC	?_AfxInitManaged@@YAHXZ				; _AfxInitManaged
PUBLIC	?_pPerfRegFunc@ATL@@3P6AJPAUHINSTANCE__@@@ZA	; ATL::_pPerfRegFunc
PUBLIC	?_pPerfUnRegFunc@ATL@@3P6AJXZA			; ATL::_pPerfUnRegFunc
PUBLIC	?_AtlRegisterPerUser@ATL@@3_NA			; ATL::_AtlRegisterPerUser
PUBLIC	_IID_IDocHostUIHandlerDispatch
;	COMDAT ___@@_PchSym_@00@UjrqrzmyzmUozlpUKltKqnKrmKluKrpKpyKlsKpoKpkUKlvKorKpmKlqKqsKovKlsKqoKplKluKomKquUKltKorKorKltKrrKrkKlsKooKrvKlvKooKotUKlsKopKpxKlvKorKpmKlqKopKooKluKozKrtUKltKorKorKltKrrKrkKltKqnKrmKluKrpKpyKlsKpoKpkUivovzhvPfmrxlwvUhgwzucOlyq@D48CCF38ADA3155B
_BSS	SEGMENT
___@@_PchSym_@00@UjrqrzmyzmUozlpUKltKqnKrmKluKrpKpyKlsKpoKpkUKlvKorKpmKlqKqsKovKlsKqoKplKluKomKquUKltKorKorKltKrrKrkKlsKooKrvKlvKooKotUKlsKopKpxKlvKorKpmKlqKopKooKluKozKrtUKltKorKorKltKrrKrkKltKqnKrmKluKrpKpyKlsKpoKpkUivovzhvPfmrxlwvUhgwzucOlyq@D48CCF38ADA3155B DD 01H DUP (?)
_BSS	ENDS
_BSS	SEGMENT
?GenericSansSerifFontFamily@Gdiplus@@3PAVFontFamily@1@A DD 01H DUP (?) ; Gdiplus::GenericSansSerifFontFamily
?GenericSerifFontFamily@Gdiplus@@3PAVFontFamily@1@A DD 01H DUP (?) ; Gdiplus::GenericSerifFontFamily
?GenericMonospaceFontFamily@Gdiplus@@3PAVFontFamily@1@A DD 01H DUP (?) ; Gdiplus::GenericMonospaceFontFamily
?GenericSansSerifFontFamilyBuffer@Gdiplus@@3PAEA DB 08H DUP (?) ; Gdiplus::GenericSansSerifFontFamilyBuffer
?GenericSerifFontFamilyBuffer@Gdiplus@@3PAEA DB 08H DUP (?) ; Gdiplus::GenericSerifFontFamilyBuffer
?GenericMonospaceFontFamilyBuffer@Gdiplus@@3PAEA DB 08H DUP (?) ; Gdiplus::GenericMonospaceFontFamilyBuffer
_BSS	ENDS
;	COMDAT ?_pAtlAutoThreadModule@ATL@@3PAUIAtlAutoThreadModule@1@A
_BSS	SEGMENT
?_pAtlAutoThreadModule@ATL@@3PAUIAtlAutoThreadModule@1@A DD 01H DUP (?) ; ATL::_pAtlAutoThreadModule
_BSS	ENDS
_BSS	SEGMENT
?GenericTypographicStringFormatBuffer@Gdiplus@@3PAEA DB 08H DUP (?) ; Gdiplus::GenericTypographicStringFormatBuffer
?GenericDefaultStringFormatBuffer@Gdiplus@@3PAEA DB 08H DUP (?) ; Gdiplus::GenericDefaultStringFormatBuffer
_BSS	ENDS
;	COMDAT ?_pAtlModule@ATL@@3PAVCAtlModule@1@A
_BSS	SEGMENT
?_pAtlModule@ATL@@3PAVCAtlModule@1@A DD 01H DUP (?)	; ATL::_pAtlModule
_BSS	ENDS
;	COMDAT ?_pModule@ATL@@3PAVCComModule@1@A
_BSS	SEGMENT
?_pModule@ATL@@3PAVCComModule@1@A DD 01H DUP (?)	; ATL::_pModule
_BSS	ENDS
;	COMDAT ?_pPerfRegFunc@ATL@@3P6AJPAUHINSTANCE__@@@ZA
_BSS	SEGMENT
?_pPerfRegFunc@ATL@@3P6AJPAUHINSTANCE__@@@ZA DD 01H DUP (?) ; ATL::_pPerfRegFunc
_BSS	ENDS
;	COMDAT ?_pPerfUnRegFunc@ATL@@3P6AJXZA
_BSS	SEGMENT
?_pPerfUnRegFunc@ATL@@3P6AJXZA DD 01H DUP (?)		; ATL::_pPerfUnRegFunc
_BSS	ENDS
;	COMDAT ?_AtlRegisterPerUser@ATL@@3_NA
_BSS	SEGMENT
?_AtlRegisterPerUser@ATL@@3_NA DB 01H DUP (?)		; ATL::_AtlRegisterPerUser
_BSS	ENDS
;	COMDAT _IID_IDocHostUIHandlerDispatch
CONST	SEGMENT
_IID_IDocHostUIHandlerDispatch DD 0425b5af0H
	DW	065f1H
	DW	011d1H
	DB	096H
	DB	011H
	DB	00H
	DB	00H
	DB	0f8H
	DB	01eH
	DB	0dH
	DB	0dH
CONST	ENDS
;	COMDAT __pAtlLcidToLocaleNameTable
CONST	SEGMENT
__pAtlLcidToLocaleNameTable DD 01H
	DD	FLAT:$SG61325
	DD	02H
	DD	FLAT:$SG61326
	DD	03H
	DD	FLAT:$SG61327
	DD	04H
	DD	FLAT:$SG61328
	DD	05H
	DD	FLAT:$SG61329
	DD	06H
	DD	FLAT:$SG61330
	DD	07H
	DD	FLAT:$SG61331
	DD	08H
	DD	FLAT:$SG61332
	DD	09H
	DD	FLAT:$SG61333
	DD	0aH
	DD	FLAT:$SG61334
	DD	0bH
	DD	FLAT:$SG61335
	DD	0cH
	DD	FLAT:$SG61336
	DD	0dH
	DD	FLAT:$SG61337
	DD	0eH
	DD	FLAT:$SG61338
	DD	0fH
	DD	FLAT:$SG61339
	DD	010H
	DD	FLAT:$SG61340
	DD	011H
	DD	FLAT:$SG61341
	DD	012H
	DD	FLAT:$SG61342
	DD	013H
	DD	FLAT:$SG61343
	DD	014H
	DD	FLAT:$SG61344
	DD	015H
	DD	FLAT:$SG61345
	DD	016H
	DD	FLAT:$SG61346
	DD	018H
	DD	FLAT:$SG61347
	DD	019H
	DD	FLAT:$SG61348
	DD	01aH
	DD	FLAT:$SG61349
	DD	01bH
	DD	FLAT:$SG61350
	DD	01cH
	DD	FLAT:$SG61351
	DD	01dH
	DD	FLAT:$SG61352
	DD	01eH
	DD	FLAT:$SG61353
	DD	01fH
	DD	FLAT:$SG61354
	DD	020H
	DD	FLAT:$SG61355
	DD	021H
	DD	FLAT:$SG61356
	DD	022H
	DD	FLAT:$SG61357
	DD	023H
	DD	FLAT:$SG61358
	DD	024H
	DD	FLAT:$SG61359
	DD	025H
	DD	FLAT:$SG61360
	DD	026H
	DD	FLAT:$SG61361
	DD	027H
	DD	FLAT:$SG61362
	DD	029H
	DD	FLAT:$SG61363
	DD	02aH
	DD	FLAT:$SG61364
	DD	02bH
	DD	FLAT:$SG61365
	DD	02cH
	DD	FLAT:$SG61366
	DD	02dH
	DD	FLAT:$SG61367
	DD	02fH
	DD	FLAT:$SG61368
	DD	036H
	DD	FLAT:$SG61369
	DD	037H
	DD	FLAT:$SG61370
	DD	038H
	DD	FLAT:$SG61371
	DD	039H
	DD	FLAT:$SG61372
	DD	03eH
	DD	FLAT:$SG61373
	DD	03fH
	DD	FLAT:$SG61374
	DD	040H
	DD	FLAT:$SG61375
	DD	041H
	DD	FLAT:$SG61376
	DD	043H
	DD	FLAT:$SG61377
	DD	044H
	DD	FLAT:$SG61378
	DD	046H
	DD	FLAT:$SG61379
	DD	047H
	DD	FLAT:$SG61380
	DD	049H
	DD	FLAT:$SG61381
	DD	04aH
	DD	FLAT:$SG61382
	DD	04bH
	DD	FLAT:$SG61383
	DD	04eH
	DD	FLAT:$SG61384
	DD	04fH
	DD	FLAT:$SG61385
	DD	050H
	DD	FLAT:$SG61386
	DD	056H
	DD	FLAT:$SG61387
	DD	057H
	DD	FLAT:$SG61388
	DD	05aH
	DD	FLAT:$SG61389
	DD	065H
	DD	FLAT:$SG61390
	DD	07fH
	DD	FLAT:$SG61391
	DD	0401H
	DD	FLAT:$SG61392
	DD	0402H
	DD	FLAT:$SG61393
	DD	0403H
	DD	FLAT:$SG61394
	DD	0404H
	DD	FLAT:$SG61395
	DD	0405H
	DD	FLAT:$SG61396
	DD	0406H
	DD	FLAT:$SG61397
	DD	0407H
	DD	FLAT:$SG61398
	DD	0408H
	DD	FLAT:$SG61399
	DD	0409H
	DD	FLAT:$SG61400
	DD	040bH
	DD	FLAT:$SG61401
	DD	040cH
	DD	FLAT:$SG61402
	DD	040dH
	DD	FLAT:$SG61403
	DD	040eH
	DD	FLAT:$SG61404
	DD	040fH
	DD	FLAT:$SG61405
	DD	0410H
	DD	FLAT:$SG61406
	DD	0411H
	DD	FLAT:$SG61407
	DD	0412H
	DD	FLAT:$SG61408
	DD	0413H
	DD	FLAT:$SG61409
	DD	0414H
	DD	FLAT:$SG61410
	DD	0415H
	DD	FLAT:$SG61411
	DD	0416H
	DD	FLAT:$SG61412
	DD	0418H
	DD	FLAT:$SG61413
	DD	0419H
	DD	FLAT:$SG61414
	DD	041aH
	DD	FLAT:$SG61415
	DD	041bH
	DD	FLAT:$SG61416
	DD	041cH
	DD	FLAT:$SG61417
	DD	041dH
	DD	FLAT:$SG61418
	DD	041eH
	DD	FLAT:$SG61419
	DD	041fH
	DD	FLAT:$SG61420
	DD	0420H
	DD	FLAT:$SG61421
	DD	0421H
	DD	FLAT:$SG61422
	DD	0422H
	DD	FLAT:$SG61423
	DD	0423H
	DD	FLAT:$SG61424
	DD	0424H
	DD	FLAT:$SG61425
	DD	0425H
	DD	FLAT:$SG61426
	DD	0426H
	DD	FLAT:$SG61427
	DD	0427H
	DD	FLAT:$SG61428
	DD	0429H
	DD	FLAT:$SG61429
	DD	042aH
	DD	FLAT:$SG61430
	DD	042bH
	DD	FLAT:$SG61431
	DD	042cH
	DD	FLAT:$SG61432
	DD	042dH
	DD	FLAT:$SG61433
	DD	042fH
	DD	FLAT:$SG61434
	DD	0432H
	DD	FLAT:$SG61435
	DD	0434H
	DD	FLAT:$SG61436
	DD	0435H
	DD	FLAT:$SG61437
	DD	0436H
	DD	FLAT:$SG61438
	DD	0437H
	DD	FLAT:$SG61439
	DD	0438H
	DD	FLAT:$SG61440
	DD	0439H
	DD	FLAT:$SG61441
	DD	043aH
	DD	FLAT:$SG61442
	DD	043bH
	DD	FLAT:$SG61443
	DD	043eH
	DD	FLAT:$SG61444
	DD	043fH
	DD	FLAT:$SG61445
	DD	0440H
	DD	FLAT:$SG61446
	DD	0441H
	DD	FLAT:$SG61447
	DD	0443H
	DD	FLAT:$SG61448
	DD	0444H
	DD	FLAT:$SG61449
	DD	0445H
	DD	FLAT:$SG61450
	DD	0446H
	DD	FLAT:$SG61451
	DD	0447H
	DD	FLAT:$SG61452
	DD	0449H
	DD	FLAT:$SG61453
	DD	044aH
	DD	FLAT:$SG61454
	DD	044bH
	DD	FLAT:$SG61455
	DD	044cH
	DD	FLAT:$SG61456
	DD	044eH
	DD	FLAT:$SG61457
	DD	044fH
	DD	FLAT:$SG61458
	DD	0450H
	DD	FLAT:$SG61459
	DD	0452H
	DD	FLAT:$SG61460
	DD	0456H
	DD	FLAT:$SG61461
	DD	0457H
	DD	FLAT:$SG61462
	DD	045aH
	DD	FLAT:$SG61463
	DD	0465H
	DD	FLAT:$SG61464
	DD	046bH
	DD	FLAT:$SG61465
	DD	046cH
	DD	FLAT:$SG61466
	DD	0481H
	DD	FLAT:$SG61467
	DD	0801H
	DD	FLAT:$SG61468
	DD	0804H
	DD	FLAT:$SG61469
	DD	0807H
	DD	FLAT:$SG61470
	DD	0809H
	DD	FLAT:$SG61471
	DD	080aH
	DD	FLAT:$SG61472
	DD	080cH
	DD	FLAT:$SG61473
	DD	0810H
	DD	FLAT:$SG61474
	DD	0813H
	DD	FLAT:$SG61475
	DD	0814H
	DD	FLAT:$SG61476
	DD	0816H
	DD	FLAT:$SG61477
	DD	081aH
	DD	FLAT:$SG61478
	DD	081dH
	DD	FLAT:$SG61479
	DD	082cH
	DD	FLAT:$SG61480
	DD	083bH
	DD	FLAT:$SG61481
	DD	083eH
	DD	FLAT:$SG61482
	DD	0843H
	DD	FLAT:$SG61483
	DD	086bH
	DD	FLAT:$SG61484
	DD	0c01H
	DD	FLAT:$SG61485
	DD	0c04H
	DD	FLAT:$SG61486
	DD	0c07H
	DD	FLAT:$SG61487
	DD	0c09H
	DD	FLAT:$SG61488
	DD	0c0aH
	DD	FLAT:$SG61489
	DD	0c0cH
	DD	FLAT:$SG61490
	DD	0c1aH
	DD	FLAT:$SG61491
	DD	0c3bH
	DD	FLAT:$SG61492
	DD	0c6bH
	DD	FLAT:$SG61493
	DD	01001H
	DD	FLAT:$SG61494
	DD	01004H
	DD	FLAT:$SG61495
	DD	01007H
	DD	FLAT:$SG61496
	DD	01009H
	DD	FLAT:$SG61497
	DD	0100aH
	DD	FLAT:$SG61498
	DD	0100cH
	DD	FLAT:$SG61499
	DD	0101aH
	DD	FLAT:$SG61500
	DD	0103bH
	DD	FLAT:$SG61501
	DD	01401H
	DD	FLAT:$SG61502
	DD	01404H
	DD	FLAT:$SG61503
	DD	01407H
	DD	FLAT:$SG61504
	DD	01409H
	DD	FLAT:$SG61505
	DD	0140aH
	DD	FLAT:$SG61506
	DD	0140cH
	DD	FLAT:$SG61507
	DD	0141aH
	DD	FLAT:$SG61508
	DD	0143bH
	DD	FLAT:$SG61509
	DD	01801H
	DD	FLAT:$SG61510
	DD	01809H
	DD	FLAT:$SG61511
	DD	0180aH
	DD	FLAT:$SG61512
	DD	0180cH
	DD	FLAT:$SG61513
	DD	0181aH
	DD	FLAT:$SG61514
	DD	0183bH
	DD	FLAT:$SG61515
	DD	01c01H
	DD	FLAT:$SG61516
	DD	01c09H
	DD	FLAT:$SG61517
	DD	01c0aH
	DD	FLAT:$SG61518
	DD	01c1aH
	DD	FLAT:$SG61519
	DD	01c3bH
	DD	FLAT:$SG61520
	DD	02001H
	DD	FLAT:$SG61521
	DD	02009H
	DD	FLAT:$SG61522
	DD	0200aH
	DD	FLAT:$SG61523
	DD	0203bH
	DD	FLAT:$SG61524
	DD	02401H
	DD	FLAT:$SG61525
	DD	02409H
	DD	FLAT:$SG61526
	DD	0240aH
	DD	FLAT:$SG61527
	DD	0243bH
	DD	FLAT:$SG61528
	DD	02801H
	DD	FLAT:$SG61529
	DD	02809H
	DD	FLAT:$SG61530
	DD	0280aH
	DD	FLAT:$SG61531
	DD	02c01H
	DD	FLAT:$SG61532
	DD	02c09H
	DD	FLAT:$SG61533
	DD	02c0aH
	DD	FLAT:$SG61534
	DD	03001H
	DD	FLAT:$SG61535
	DD	03009H
	DD	FLAT:$SG61536
	DD	0300aH
	DD	FLAT:$SG61537
	DD	03401H
	DD	FLAT:$SG61538
	DD	03409H
	DD	FLAT:$SG61539
	DD	0340aH
	DD	FLAT:$SG61540
	DD	03801H
	DD	FLAT:$SG61541
	DD	0380aH
	DD	FLAT:$SG61542
	DD	03c01H
	DD	FLAT:$SG61543
	DD	03c0aH
	DD	FLAT:$SG61544
	DD	04001H
	DD	FLAT:$SG61545
	DD	0400aH
	DD	FLAT:$SG61546
	DD	0440aH
	DD	FLAT:$SG61547
	DD	0480aH
	DD	FLAT:$SG61548
	DD	04c0aH
	DD	FLAT:$SG61549
	DD	0500aH
	DD	FLAT:$SG61550
	DD	07c04H
	DD	FLAT:$SG61551
	DD	07c1aH
	DD	FLAT:$SG61552
CONST	ENDS
;	COMDAT ___pobjMapEntryLast
ATL$__z	SEGMENT
___pobjMapEntryLast DD 00H
ATL$__z	ENDS
;	COMDAT ___pobjMapEntryFirst
ATL$__a	SEGMENT
___pobjMapEntryFirst DD 00H
ATL$__a	ENDS
;	COMDAT _IID_IRegistrar
CONST	SEGMENT
_IID_IRegistrar DD 044ec053bH
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT _CLSID_Registrar
CONST	SEGMENT
_CLSID_Registrar DD 044ec053aH
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT _LIBID_ATLLib
CONST	SEGMENT
_LIBID_ATLLib DD 044ec0535H
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT _CLSID_FlashObjectInterface
CONST	SEGMENT
_CLSID_FlashObjectInterface DD 0d27cdb71H
	DW	0ae6dH
	DW	011cfH
	DB	096H
	DB	0b8H
	DB	044H
	DB	045H
	DB	053H
	DB	054H
	DB	00H
	DB	00H
CONST	ENDS
;	COMDAT _IID_IFlashObjectInterface
CONST	SEGMENT
_IID_IFlashObjectInterface DD 0d27cdb72H
	DW	0ae6dH
	DW	011cfH
	DB	096H
	DB	0b8H
	DB	044H
	DB	045H
	DB	053H
	DB	054H
	DB	00H
	DB	00H
CONST	ENDS
;	COMDAT ?szInvalidDateTimeSpan@ATL@@3QB_WB
CONST	SEGMENT
?szInvalidDateTimeSpan@ATL@@3QB_WB DD FLAT:$SG82627	; ATL::szInvalidDateTimeSpan
CONST	ENDS
;	COMDAT _IID_IDispatchEx
CONST	SEGMENT
_IID_IDispatchEx DD 0a6ef9860H
	DW	0c720H
	DW	011d0H
	DB	093H
	DB	037H
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	0dH
	DB	0caH
	DB	0a9H
CONST	ENDS
;	COMDAT _IID_IFlashFactory
CONST	SEGMENT
_IID_IFlashFactory DD 0d27cdb70H
	DW	0ae6dH
	DW	011cfH
	DB	096H
	DB	0b8H
	DB	044H
	DB	045H
	DB	053H
	DB	054H
	DB	00H
	DB	00H
CONST	ENDS
;	COMDAT ?szInvalidDateTime@ATL@@3QB_WB
CONST	SEGMENT
?szInvalidDateTime@ATL@@3QB_WB DD FLAT:$SG82625		; ATL::szInvalidDateTime
CONST	ENDS
;	COMDAT _CLSID_ShockwaveFlash
CONST	SEGMENT
_CLSID_ShockwaveFlash DD 0d27cdb6eH
	DW	0ae6dH
	DW	011cfH
	DB	096H
	DB	0b8H
	DB	044H
	DB	045H
	DB	053H
	DB	054H
	DB	00H
	DB	00H
CONST	ENDS
;	COMDAT _DIID__IShockwaveFlashEvents
CONST	SEGMENT
_DIID__IShockwaveFlashEvents DD 0d27cdb6dH
	DW	0ae6dH
	DW	011cfH
	DB	096H
	DB	0b8H
	DB	044H
	DB	045H
	DB	053H
	DB	054H
	DB	00H
	DB	00H
CONST	ENDS
;	COMDAT _IID_IShockwaveFlash
CONST	SEGMENT
_IID_IShockwaveFlash DD 0d27cdb6cH
	DW	0ae6dH
	DW	011cfH
	DB	096H
	DB	0b8H
	DB	044H
	DB	045H
	DB	053H
	DB	054H
	DB	00H
	DB	00H
CONST	ENDS
;	COMDAT _LIBID_ShockwaveFlashObjects
CONST	SEGMENT
_LIBID_ShockwaveFlashObjects DD 0d27cdb6bH
	DW	0ae6dH
	DW	011cfH
	DB	096H
	DB	0b8H
	DB	044H
	DB	045H
	DB	053H
	DB	054H
	DB	00H
	DB	00H
CONST	ENDS
;	COMDAT _IID_IInternalConnection
CONST	SEGMENT
_IID_IInternalConnection DD 072ad0770H
	DW	06a9fH
	DW	011d1H
	DB	0bcH
	DB	0ecH
	DB	00H
	DB	060H
	DB	08H
	DB	08fH
	DB	044H
	DB	04eH
CONST	ENDS
;	COMDAT _IID_IAxWinAmbientDispatchEx
CONST	SEGMENT
_IID_IAxWinAmbientDispatchEx DD 0b2d0778bH
	DW	0ac99H
	DW	04c58H
	DB	0a5H
	DB	0c8H
	DB	0e7H
	DB	072H
	DB	04eH
	DB	053H
	DB	016H
	DB	0b5H
CONST	ENDS
;	COMDAT __pIncludeInitManaged
_DATA	SEGMENT
__pIncludeInitManaged DD FLAT:?_AfxInitManaged@@YAHXZ
_DATA	ENDS
;	COMDAT _IID_IAxWinAmbientDispatch
CONST	SEGMENT
_IID_IAxWinAmbientDispatch DD 0b6ea2051H
	DW	048aH
	DW	011d1H
	DB	082H
	DB	0b9H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0b9H
	DB	094H
	DB	02eH
CONST	ENDS
;	COMDAT _IID_IAxWinHostWindowLic
CONST	SEGMENT
_IID_IAxWinHostWindowLic DD 03935bda8H
	DW	04ed9H
	DW	0495cH
	DB	086H
	DB	050H
	DB	0e0H
	DB	01fH
	DB	0c1H
	DB	0e3H
	DB	08aH
	DB	04bH
CONST	ENDS
_DATA	SEGMENT
?PADDING@@3PAEA DB 080H					; PADDING
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
_DATA	ENDS
;	COMDAT ?CLSID_WinFormsControl@@3U_GUID@@B
CONST	SEGMENT
?CLSID_WinFormsControl@@3U_GUID@@B DD 0b7e7a666H	; CLSID_WinFormsControl
	DW	0d623H
	DW	0457fH
	DB	0a3H
	DB	0aH
	DB	06aH
	DB	049H
	DB	0a3H
	DB	0e5H
	DB	0b4H
	DB	070H
CONST	ENDS
;	COMDAT ?IID_IRichEditOleCallback2@@3U_GUID@@A
_DATA	SEGMENT
?IID_IRichEditOleCallback2@@3U_GUID@@A DD 089fc1386H	; IID_IRichEditOleCallback2
	DW	091e5H
	DW	0415fH
	DB	0adH
	DB	08fH
	DB	04H
	DB	041H
	DB	05cH
	DB	015H
	DB	0f8H
	DB	0f5H
_DATA	ENDS
;	COMDAT ?IID_IImageOle@@3U_GUID@@A
_DATA	SEGMENT
?IID_IImageOle@@3U_GUID@@A DD 0e41fe3bbH		; IID_IImageOle
	DW	07218H
	DW	0423dH
	DB	095H
	DB	02eH
	DB	096H
	DB	0e5H
	DB	056H
	DB	0aeH
	DB	0e3H
	DB	0fH
_DATA	ENDS
;	COMDAT ?CLSID_ImageOle@@3U_GUID@@A
_DATA	SEGMENT
?CLSID_ImageOle@@3U_GUID@@A DD 0c5b3a481H		; CLSID_ImageOle
	DW	021e3H
	DW	04cabH
	DB	08aH
	DB	0bdH
	DB	03cH
	DB	06aH
	DB	085H
	DB	089H
	DB	02aH
	DB	0d2H
_DATA	ENDS
;	COMDAT _IID_IAxWinHostWindow
CONST	SEGMENT
_IID_IAxWinHostWindow DD 0b6ea2050H
	DW	048aH
	DW	011d1H
	DB	082H
	DB	0b9H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0b9H
	DB	094H
	DB	02eH
CONST	ENDS
;	COMDAT ?szDelete@ATL@@3QB_WB
CONST	SEGMENT
?szDelete@ATL@@3QB_WB DD FLAT:$SG109683			; ATL::szDelete
CONST	ENDS
;	COMDAT __pAtlLocaleNameToIndexTable
CONST	SEGMENT
__pAtlLocaleNameToIndexTable DD FLAT:$SG61554
	DD	042H
	DD	FLAT:$SG61555
	DD	02cH
	DD	FLAT:$SG61556
	DD	071H
	DD	FLAT:$SG61557
	DD	00H
	DD	FLAT:$SG61558
	DD	0d8H
	DD	FLAT:$SG61559
	DD	0daH
	DD	FLAT:$SG61560
	DD	0b1H
	DD	FLAT:$SG61561
	DD	0a0H
	DD	FLAT:$SG61562
	DD	08fH
	DD	FLAT:$SG61563
	DD	0cfH
	DD	FLAT:$SG61564
	DD	0d5H
	DD	FLAT:$SG61565
	DD	0d2H
	DD	FLAT:$SG61566
	DD	0a9H
	DD	FLAT:$SG61567
	DD	0b9H
	DD	FLAT:$SG61568
	DD	0c4H
	DD	FLAT:$SG61569
	DD	0dcH
	DD	FLAT:$SG61570
	DD	043H
	DD	FLAT:$SG61571
	DD	0ccH
	DD	FLAT:$SG61572
	DD	0bfH
	DD	FLAT:$SG61573
	DD	0c8H
	DD	FLAT:$SG61574
	DD	029H
	DD	FLAT:$SG61575
	DD	09bH
	DD	FLAT:$SG61576
	DD	06bH
	DD	FLAT:$SG61577
	DD	021H
	DD	FLAT:$SG61578
	DD	063H
	DD	FLAT:$SG61579
	DD	01H
	DD	FLAT:$SG61580
	DD	044H
	DD	FLAT:$SG61581
	DD	07dH
	DD	FLAT:$SG61582
	DD	0b7H
	DD	FLAT:$SG61583
	DD	02H
	DD	FLAT:$SG61584
	DD	045H
	DD	FLAT:$SG61585
	DD	04H
	DD	FLAT:$SG61586
	DD	047H
	DD	FLAT:$SG61587
	DD	087H
	DD	FLAT:$SG61588
	DD	05H
	DD	FLAT:$SG61589
	DD	048H
	DD	FLAT:$SG61590
	DD	06H
	DD	FLAT:$SG61591
	DD	0a2H
	DD	FLAT:$SG61592
	DD	091H
	DD	FLAT:$SG61593
	DD	049H
	DD	FLAT:$SG61594
	DD	0b3H
	DD	FLAT:$SG61595
	DD	0abH
	DD	FLAT:$SG61596
	DD	041H
	DD	FLAT:$SG61597
	DD	08bH
	DD	FLAT:$SG61598
	DD	07H
	DD	FLAT:$SG61599
	DD	04aH
	DD	FLAT:$SG61600
	DD	08H
	DD	FLAT:$SG61601
	DD	0a3H
	DD	FLAT:$SG61602
	DD	0cdH
	DD	FLAT:$SG61603
	DD	0acH
	DD	FLAT:$SG61604
	DD	0c9H
	DD	FLAT:$SG61605
	DD	092H
	DD	FLAT:$SG61606
	DD	0baH
	DD	FLAT:$SG61607
	DD	0c5H
	DD	FLAT:$SG61608
	DD	0b4H
	DD	FLAT:$SG61609
	DD	0d6H
	DD	FLAT:$SG61610
	DD	0d0H
	DD	FLAT:$SG61611
	DD	04bH
	DD	FLAT:$SG61612
	DD	0c0H
	DD	FLAT:$SG61613
	DD	0d3H
	DD	FLAT:$SG61614
	DD	09H
	DD	FLAT:$SG61615
	DD	0d1H
	DD	FLAT:$SG61616
	DD	0ddH
	DD	FLAT:$SG61617
	DD	0d7H
	DD	FLAT:$SG61618
	DD	0caH
	DD	FLAT:$SG61619
	DD	0b5H
	DD	FLAT:$SG61620
	DD	0c1H
	DD	FLAT:$SG61621
	DD	0d4H
	DD	FLAT:$SG61622
	DD	0a4H
	DD	FLAT:$SG61623
	DD	0adH
	DD	FLAT:$SG61624
	DD	0dfH
	DD	FLAT:$SG61625
	DD	093H
	DD	FLAT:$SG61626
	DD	0e0H
	DD	FLAT:$SG61627
	DD	0bbH
	DD	FLAT:$SG61628
	DD	0ceH
	DD	FLAT:$SG61629
	DD	0e1H
	DD	FLAT:$SG61630
	DD	0dbH
	DD	FLAT:$SG61631
	DD	0deH
	DD	FLAT:$SG61632
	DD	0d9H
	DD	FLAT:$SG61633
	DD	0c6H
	DD	FLAT:$SG61634
	DD	023H
	DD	FLAT:$SG61635
	DD	065H
	DD	FLAT:$SG61636
	DD	02aH
	DD	FLAT:$SG61637
	DD	06cH
	DD	FLAT:$SG61638
	DD	026H
	DD	FLAT:$SG61639
	DD	068H
	DD	FLAT:$SG61640
	DD	0aH
	DD	FLAT:$SG61641
	DD	04cH
	DD	FLAT:$SG61642
	DD	02eH
	DD	FLAT:$SG61643
	DD	073H
	DD	FLAT:$SG61644
	DD	0bH
	DD	FLAT:$SG61645
	DD	094H
	DD	FLAT:$SG61646
	DD	0a5H
	DD	FLAT:$SG61647
	DD	0aeH
	DD	FLAT:$SG61648
	DD	04dH
	DD	FLAT:$SG61649
	DD	0b6H
	DD	FLAT:$SG61650
	DD	0bcH
	DD	FLAT:$SG61651
	DD	03eH
	DD	FLAT:$SG61652
	DD	088H
	DD	FLAT:$SG61653
	DD	037H
	DD	FLAT:$SG61654
	DD	07fH
	DD	FLAT:$SG61655
	DD	0cH
	DD	FLAT:$SG61656
	DD	04eH
	DD	FLAT:$SG61657
	DD	02fH
	DD	FLAT:$SG61658
	DD	074H
	DD	FLAT:$SG61659
	DD	018H
	DD	FLAT:$SG61660
	DD	0afH
	DD	FLAT:$SG61661
	DD	05aH
	DD	FLAT:$SG61662
	DD	0dH
	DD	FLAT:$SG61663
	DD	04fH
	DD	FLAT:$SG61664
	DD	028H
	DD	FLAT:$SG61665
	DD	06aH
	DD	FLAT:$SG61666
	DD	01fH
	DD	FLAT:$SG61667
	DD	061H
	DD	FLAT:$SG61668
	DD	0eH
	DD	FLAT:$SG61669
	DD	050H
	DD	FLAT:$SG61670
	DD	0fH
	DD	FLAT:$SG61671
	DD	095H
	DD	FLAT:$SG61672
	DD	051H
	DD	FLAT:$SG61673
	DD	010H
	DD	FLAT:$SG61674
	DD	052H
	DD	FLAT:$SG61675
	DD	02dH
	DD	FLAT:$SG61676
	DD	072H
	DD	FLAT:$SG61677
	DD	031H
	DD	FLAT:$SG61678
	DD	078H
	DD	FLAT:$SG61679
	DD	03aH
	DD	FLAT:$SG61680
	DD	082H
	DD	FLAT:$SG61681
	DD	011H
	DD	FLAT:$SG61682
	DD	03fH
	DD	FLAT:$SG61683
	DD	089H
	DD	FLAT:$SG61684
	DD	053H
	DD	FLAT:$SG61685
	DD	032H
	DD	FLAT:$SG61686
	DD	079H
	DD	FLAT:$SG61687
	DD	025H
	DD	FLAT:$SG61688
	DD	067H
	DD	FLAT:$SG61689
	DD	024H
	DD	FLAT:$SG61690
	DD	066H
	DD	FLAT:$SG61691
	DD	08eH
	DD	FLAT:$SG61692
	DD	02bH
	DD	FLAT:$SG61693
	DD	06dH
	DD	FLAT:$SG61694
	DD	083H
	DD	FLAT:$SG61695
	DD	03dH
	DD	FLAT:$SG61696
	DD	086H
	DD	FLAT:$SG61697
	DD	03bH
	DD	FLAT:$SG61698
	DD	084H
	DD	FLAT:$SG61699
	DD	030H
	DD	FLAT:$SG61700
	DD	09dH
	DD	FLAT:$SG61701
	DD	077H
	DD	FLAT:$SG61702
	DD	075H
	DD	FLAT:$SG61703
	DD	055H
	DD	FLAT:$SG61704
	DD	012H
	DD	FLAT:$SG61705
	DD	096H
	DD	FLAT:$SG61706
	DD	054H
	DD	FLAT:$SG61707
	DD	097H
	DD	FLAT:$SG61708
	DD	013H
	DD	FLAT:$SG61709
	DD	08dH
	DD	FLAT:$SG61710
	DD	036H
	DD	FLAT:$SG61711
	DD	07eH
	DD	FLAT:$SG61712
	DD	014H
	DD	FLAT:$SG61713
	DD	056H
	DD	FLAT:$SG61714
	DD	015H
	DD	FLAT:$SG61715
	DD	057H
	DD	FLAT:$SG61716
	DD	098H
	DD	FLAT:$SG61717
	DD	08cH
	DD	FLAT:$SG61718
	DD	09fH
	DD	FLAT:$SG61719
	DD	0a8H
	DD	FLAT:$SG61720
	DD	016H
	DD	FLAT:$SG61721
	DD	058H
	DD	FLAT:$SG61722
	DD	017H
	DD	FLAT:$SG61723
	DD	059H
	DD	FLAT:$SG61724
	DD	03cH
	DD	FLAT:$SG61725
	DD	085H
	DD	FLAT:$SG61726
	DD	0a7H
	DD	FLAT:$SG61727
	DD	076H
	DD	FLAT:$SG61728
	DD	09cH
	DD	FLAT:$SG61729
	DD	019H
	DD	FLAT:$SG61730
	DD	05bH
	DD	FLAT:$SG61731
	DD	022H
	DD	FLAT:$SG61732
	DD	064H
	DD	FLAT:$SG61733
	DD	0beH
	DD	FLAT:$SG61734
	DD	0c3H
	DD	FLAT:$SG61735
	DD	0b0H
	DD	FLAT:$SG61736
	DD	0b8H
	DD	FLAT:$SG61737
	DD	0cbH
	DD	FLAT:$SG61738
	DD	0c7H
	DD	FLAT:$SG61739
	DD	01aH
	DD	FLAT:$SG61740
	DD	05cH
	DD	FLAT:$SG61741
	DD	0e3H
	DD	FLAT:$SG61742
	DD	0c2H
	DD	FLAT:$SG61743
	DD	0bdH
	DD	FLAT:$SG61744
	DD	0a6H
	DD	FLAT:$SG61745
	DD	099H
	DD	FLAT:$SG61746
	DD	01bH
	DD	FLAT:$SG61747
	DD	09aH
	DD	FLAT:$SG61748
	DD	05dH
	DD	FLAT:$SG61749
	DD	033H
	DD	FLAT:$SG61750
	DD	07aH
	DD	FLAT:$SG61751
	DD	040H
	DD	FLAT:$SG61752
	DD	08aH
	DD	FLAT:$SG61753
	DD	038H
	DD	FLAT:$SG61754
	DD	080H
	DD	FLAT:$SG61755
	DD	039H
	DD	FLAT:$SG61756
	DD	081H
	DD	FLAT:$SG61757
	DD	01cH
	DD	FLAT:$SG61758
	DD	05eH
	DD	FLAT:$SG61759
	DD	06eH
	DD	FLAT:$SG61760
	DD	01dH
	DD	FLAT:$SG61761
	DD	05fH
	DD	FLAT:$SG61762
	DD	035H
	DD	FLAT:$SG61763
	DD	07cH
	DD	FLAT:$SG61764
	DD	020H
	DD	FLAT:$SG61765
	DD	062H
	DD	FLAT:$SG61766
	DD	01eH
	DD	FLAT:$SG61767
	DD	060H
	DD	FLAT:$SG61768
	DD	034H
	DD	FLAT:$SG61769
	DD	09eH
	DD	FLAT:$SG61770
	DD	07bH
	DD	FLAT:$SG61771
	DD	027H
	DD	FLAT:$SG61772
	DD	069H
	DD	FLAT:$SG61773
	DD	06fH
	DD	FLAT:$SG61774
	DD	03H
	DD	FLAT:$SG61775
	DD	0e2H
	DD	FLAT:$SG61776
	DD	090H
	DD	FLAT:$SG61777
	DD	0a1H
	DD	FLAT:$SG61778
	DD	0b2H
	DD	FLAT:$SG61779
	DD	0aaH
	DD	FLAT:$SG61780
	DD	046H
	DD	FLAT:$SG61781
	DD	070H
CONST	ENDS
;	COMDAT ?szNoRemove@ATL@@3QB_WB
CONST	SEGMENT
?szNoRemove@ATL@@3QB_WB DD FLAT:$SG109681		; ATL::szNoRemove
CONST	ENDS
;	COMDAT ?szForceRemove@ATL@@3QB_WB
CONST	SEGMENT
?szForceRemove@ATL@@3QB_WB DD FLAT:$SG109679		; ATL::szForceRemove
CONST	ENDS
;	COMDAT ?szValToken@ATL@@3QB_WB
CONST	SEGMENT
?szValToken@ATL@@3QB_WB DD FLAT:$SG109677		; ATL::szValToken
CONST	ENDS
;	COMDAT ?szBinaryVal@ATL@@3QB_WB
CONST	SEGMENT
?szBinaryVal@ATL@@3QB_WB DD FLAT:$SG109675		; ATL::szBinaryVal
CONST	ENDS
;	COMDAT ?szDwordVal@ATL@@3QB_WB
CONST	SEGMENT
?szDwordVal@ATL@@3QB_WB DD FLAT:$SG109673		; ATL::szDwordVal
CONST	ENDS
;	COMDAT ?multiszStringVal@ATL@@3QB_WB
CONST	SEGMENT
?multiszStringVal@ATL@@3QB_WB DD FLAT:$SG109671		; ATL::multiszStringVal
CONST	ENDS
;	COMDAT ?szStringVal@ATL@@3QB_WB
CONST	SEGMENT
?szStringVal@ATL@@3QB_WB DD FLAT:$SG109669		; ATL::szStringVal
CONST	ENDS
;	COMDAT ?chEquals@ATL@@3_WB
CONST	SEGMENT
?chEquals@ATL@@3_WB DW 03dH				; ATL::chEquals
CONST	ENDS
;	COMDAT ?chQuote@ATL@@3_WB
CONST	SEGMENT
?chQuote@ATL@@3_WB DW 027H				; ATL::chQuote
CONST	ENDS
;	COMDAT ?chLeftBracket@ATL@@3_WB
CONST	SEGMENT
?chLeftBracket@ATL@@3_WB DW 07bH			; ATL::chLeftBracket
CONST	ENDS
;	COMDAT ?chRightBracket@ATL@@3_WB
CONST	SEGMENT
?chRightBracket@ATL@@3_WB DW 07dH			; ATL::chRightBracket
CONST	ENDS
;	COMDAT ?chDirSep@ATL@@3_WB
CONST	SEGMENT
?chDirSep@ATL@@3_WB DW 05cH				; ATL::chDirSep
CONST	ENDS
CONST	SEGMENT
$SG61440 DB	'f', 00H, 'o', 00H, '-', 00H, 'F', 00H, 'O', 00H, 00H, 00H
$SG61441 DB	'h', 00H, 'i', 00H, '-', 00H, 'I', 00H, 'N', 00H, 00H, 00H
$SG61442 DB	'm', 00H, 't', 00H, '-', 00H, 'M', 00H, 'T', 00H, 00H, 00H
$SG61443 DB	's', 00H, 'e', 00H, '-', 00H, 'N', 00H, 'O', 00H, 00H, 00H
$SG61444 DB	'm', 00H, 's', 00H, '-', 00H, 'M', 00H, 'Y', 00H, 00H, 00H
$SG61445 DB	'k', 00H, 'k', 00H, '-', 00H, 'K', 00H, 'Z', 00H, 00H, 00H
$SG61446 DB	'k', 00H, 'y', 00H, '-', 00H, 'K', 00H, 'G', 00H, 00H, 00H
$SG61447 DB	's', 00H, 'w', 00H, '-', 00H, 'K', 00H, 'E', 00H, 00H, 00H
$SG61448 DB	'u', 00H, 'z', 00H, '-', 00H, 'U', 00H, 'Z', 00H, '-', 00H
	DB	'L', 00H, 'a', 00H, 't', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG61449 DB	't', 00H, 't', 00H, '-', 00H, 'R', 00H, 'U', 00H, 00H, 00H
$SG61450 DB	'b', 00H, 'n', 00H, '-', 00H, 'I', 00H, 'N', 00H, 00H, 00H
$SG61451 DB	'p', 00H, 'a', 00H, '-', 00H, 'I', 00H, 'N', 00H, 00H, 00H
$SG61452 DB	'g', 00H, 'u', 00H, '-', 00H, 'I', 00H, 'N', 00H, 00H, 00H
$SG61453 DB	't', 00H, 'a', 00H, '-', 00H, 'I', 00H, 'N', 00H, 00H, 00H
$SG61454 DB	't', 00H, 'e', 00H, '-', 00H, 'I', 00H, 'N', 00H, 00H, 00H
$SG61455 DB	'k', 00H, 'n', 00H, '-', 00H, 'I', 00H, 'N', 00H, 00H, 00H
$SG61456 DB	'm', 00H, 'l', 00H, '-', 00H, 'I', 00H, 'N', 00H, 00H, 00H
?IID_IDataBase@@3U_GUID@@B DD 07fbbbffaH		; IID_IDataBase
	DW	0edf4H
	DW	043d2H
	DB	08aH
	DB	0b7H
	DB	028H
	DB	087H
	DB	03bH
	DB	0d0H
	DB	0f5H
	DB	03fH
$SG61457 DB	'm', 00H, 'r', 00H, '-', 00H, 'I', 00H, 'N', 00H, 00H, 00H
$SG61458 DB	's', 00H, 'a', 00H, '-', 00H, 'I', 00H, 'N', 00H, 00H, 00H
$SG61459 DB	'm', 00H, 'n', 00H, '-', 00H, 'M', 00H, 'N', 00H, 00H, 00H
$SG61460 DB	'c', 00H, 'y', 00H, '-', 00H, 'G', 00H, 'B', 00H, 00H, 00H
$SG61461 DB	'g', 00H, 'l', 00H, '-', 00H, 'E', 00H, 'S', 00H, 00H, 00H
$SG61462 DB	'k', 00H, 'o', 00H, 'k', 00H, '-', 00H, 'I', 00H, 'N', 00H
	DB	00H, 00H
	ORG $+2
$SG61463 DB	's', 00H, 'y', 00H, 'r', 00H, '-', 00H, 'S', 00H, 'Y', 00H
	DB	00H, 00H
	ORG $+2
$SG61464 DB	'd', 00H, 'i', 00H, 'v', 00H, '-', 00H, 'M', 00H, 'V', 00H
	DB	00H, 00H
	ORG $+2
$SG61465 DB	'q', 00H, 'u', 00H, 'z', 00H, '-', 00H, 'B', 00H, 'O', 00H
	DB	00H, 00H
	ORG $+2
$SG61466 DB	'n', 00H, 's', 00H, '-', 00H, 'Z', 00H, 'A', 00H, 00H, 00H
$SG61467 DB	'm', 00H, 'i', 00H, '-', 00H, 'N', 00H, 'Z', 00H, 00H, 00H
$SG61468 DB	'a', 00H, 'r', 00H, '-', 00H, 'I', 00H, 'Q', 00H, 00H, 00H
$SG61469 DB	'z', 00H, 'h', 00H, '-', 00H, 'C', 00H, 'N', 00H, 00H, 00H
$SG61470 DB	'd', 00H, 'e', 00H, '-', 00H, 'C', 00H, 'H', 00H, 00H, 00H
$SG61471 DB	'e', 00H, 'n', 00H, '-', 00H, 'G', 00H, 'B', 00H, 00H, 00H
$SG61472 DB	'e', 00H, 's', 00H, '-', 00H, 'M', 00H, 'X', 00H, 00H, 00H
$SG61473 DB	'f', 00H, 'r', 00H, '-', 00H, 'B', 00H, 'E', 00H, 00H, 00H
$SG61474 DB	'i', 00H, 't', 00H, '-', 00H, 'C', 00H, 'H', 00H, 00H, 00H
$SG61475 DB	'n', 00H, 'l', 00H, '-', 00H, 'B', 00H, 'E', 00H, 00H, 00H
$SG61476 DB	'n', 00H, 'n', 00H, '-', 00H, 'N', 00H, 'O', 00H, 00H, 00H
$SG61477 DB	'p', 00H, 't', 00H, '-', 00H, 'P', 00H, 'T', 00H, 00H, 00H
$SG61478 DB	's', 00H, 'r', 00H, '-', 00H, 'S', 00H, 'P', 00H, '-', 00H
	DB	'L', 00H, 'a', 00H, 't', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG61479 DB	's', 00H, 'v', 00H, '-', 00H, 'F', 00H, 'I', 00H, 00H, 00H
$SG61480 DB	'a', 00H, 'z', 00H, '-', 00H, 'A', 00H, 'Z', 00H, '-', 00H
	DB	'C', 00H, 'y', 00H, 'r', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG61481 DB	's', 00H, 'e', 00H, '-', 00H, 'S', 00H, 'E', 00H, 00H, 00H
$SG61482 DB	'm', 00H, 's', 00H, '-', 00H, 'B', 00H, 'N', 00H, 00H, 00H
$SG61483 DB	'u', 00H, 'z', 00H, '-', 00H, 'U', 00H, 'Z', 00H, '-', 00H
	DB	'C', 00H, 'y', 00H, 'r', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG61484 DB	'q', 00H, 'u', 00H, 'z', 00H, '-', 00H, 'E', 00H, 'C', 00H
	DB	00H, 00H
	ORG $+2
$SG60460 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'A', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG61485 DB	'a', 00H, 'r', 00H, '-', 00H, 'E', 00H, 'G', 00H, 00H, 00H
$SG61486 DB	'z', 00H, 'h', 00H, '-', 00H, 'H', 00H, 'K', 00H, 00H, 00H
$SG61487 DB	'd', 00H, 'e', 00H, '-', 00H, 'A', 00H, 'T', 00H, 00H, 00H
$SG61488 DB	'e', 00H, 'n', 00H, '-', 00H, 'A', 00H, 'U', 00H, 00H, 00H
$SG61489 DB	'e', 00H, 's', 00H, '-', 00H, 'E', 00H, 'S', 00H, 00H, 00H
$SG61490 DB	'f', 00H, 'r', 00H, '-', 00H, 'C', 00H, 'A', 00H, 00H, 00H
$SG61491 DB	's', 00H, 'r', 00H, '-', 00H, 'S', 00H, 'P', 00H, '-', 00H
	DB	'C', 00H, 'y', 00H, 'r', 00H, 'l', 00H, 00H, 00H
	ORG $+2
?IID_IPlatformResource@@3U_GUID@@B DD 0bcd7ff05H	; IID_IPlatformResource
	DW	0a79H
	DW	04482H
	DB	09bH
	DB	0a6H
	DB	079H
	DB	0dfH
	DB	04bH
	DB	0d9H
	DB	080H
	DB	016H
$SG61492 DB	's', 00H, 'e', 00H, '-', 00H, 'F', 00H, 'I', 00H, 00H, 00H
$SG61493 DB	'q', 00H, 'u', 00H, 'z', 00H, '-', 00H, 'P', 00H, 'E', 00H
	DB	00H, 00H
	ORG $+2
$SG61494 DB	'a', 00H, 'r', 00H, '-', 00H, 'L', 00H, 'Y', 00H, 00H, 00H
$SG61495 DB	'z', 00H, 'h', 00H, '-', 00H, 'S', 00H, 'G', 00H, 00H, 00H
$SG61496 DB	'd', 00H, 'e', 00H, '-', 00H, 'L', 00H, 'U', 00H, 00H, 00H
$SG61497 DB	'e', 00H, 'n', 00H, '-', 00H, 'C', 00H, 'A', 00H, 00H, 00H
$SG61498 DB	'e', 00H, 's', 00H, '-', 00H, 'G', 00H, 'T', 00H, 00H, 00H
$SG61499 DB	'f', 00H, 'r', 00H, '-', 00H, 'C', 00H, 'H', 00H, 00H, 00H
$SG61500 DB	'h', 00H, 'r', 00H, '-', 00H, 'B', 00H, 'A', 00H, 00H, 00H
$SG61501 DB	's', 00H, 'm', 00H, 'j', 00H, '-', 00H, 'N', 00H, 'O', 00H
	DB	00H, 00H
	ORG $+2
$SG61502 DB	'a', 00H, 'r', 00H, '-', 00H, 'D', 00H, 'Z', 00H, 00H, 00H
$SG61503 DB	'z', 00H, 'h', 00H, '-', 00H, 'M', 00H, 'O', 00H, 00H, 00H
$SG61504 DB	'd', 00H, 'e', 00H, '-', 00H, 'L', 00H, 'I', 00H, 00H, 00H
$SG61505 DB	'e', 00H, 'n', 00H, '-', 00H, 'N', 00H, 'Z', 00H, 00H, 00H
$SG61506 DB	'e', 00H, 's', 00H, '-', 00H, 'C', 00H, 'R', 00H, 00H, 00H
$SG61507 DB	'f', 00H, 'r', 00H, '-', 00H, 'L', 00H, 'U', 00H, 00H, 00H
$SG61508 DB	'b', 00H, 's', 00H, '-', 00H, 'B', 00H, 'A', 00H, '-', 00H
	DB	'L', 00H, 'a', 00H, 't', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG61509 DB	's', 00H, 'm', 00H, 'j', 00H, '-', 00H, 'S', 00H, 'E', 00H
	DB	00H, 00H
	ORG $+2
$SG61510 DB	'a', 00H, 'r', 00H, '-', 00H, 'M', 00H, 'A', 00H, 00H, 00H
$SG61511 DB	'e', 00H, 'n', 00H, '-', 00H, 'I', 00H, 'E', 00H, 00H, 00H
$SG61512 DB	'e', 00H, 's', 00H, '-', 00H, 'P', 00H, 'A', 00H, 00H, 00H
?IID_IDataBaseEngine@@3U_GUID@@B DD 03c56956dH		; IID_IDataBaseEngine
	DW	01690H
	DW	04c22H
	DB	088H
	DB	034H
	DB	09eH
	DB	0b9H
	DB	0d0H
	DB	093H
	DB	066H
	DB	04cH
$SG61513 DB	'f', 00H, 'r', 00H, '-', 00H, 'M', 00H, 'C', 00H, 00H, 00H
$SG61514 DB	's', 00H, 'r', 00H, '-', 00H, 'B', 00H, 'A', 00H, '-', 00H
	DB	'L', 00H, 'a', 00H, 't', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG61515 DB	's', 00H, 'm', 00H, 'a', 00H, '-', 00H, 'N', 00H, 'O', 00H
	DB	00H, 00H
	ORG $+2
$SG61516 DB	'a', 00H, 'r', 00H, '-', 00H, 'T', 00H, 'N', 00H, 00H, 00H
$SG61517 DB	'e', 00H, 'n', 00H, '-', 00H, 'Z', 00H, 'A', 00H, 00H, 00H
$SG61518 DB	'e', 00H, 's', 00H, '-', 00H, 'D', 00H, 'O', 00H, 00H, 00H
$SG61519 DB	's', 00H, 'r', 00H, '-', 00H, 'B', 00H, 'A', 00H, '-', 00H
	DB	'C', 00H, 'y', 00H, 'r', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG61520 DB	's', 00H, 'm', 00H, 'a', 00H, '-', 00H, 'S', 00H, 'E', 00H
	DB	00H, 00H
	ORG $+2
$SG61521 DB	'a', 00H, 'r', 00H, '-', 00H, 'O', 00H, 'M', 00H, 00H, 00H
$SG61522 DB	'e', 00H, 'n', 00H, '-', 00H, 'J', 00H, 'M', 00H, 00H, 00H
$SG61523 DB	'e', 00H, 's', 00H, '-', 00H, 'V', 00H, 'E', 00H, 00H, 00H
$SG61524 DB	's', 00H, 'm', 00H, 's', 00H, '-', 00H, 'F', 00H, 'I', 00H
	DB	00H, 00H
	ORG $+2
$SG61525 DB	'a', 00H, 'r', 00H, '-', 00H, 'Y', 00H, 'E', 00H, 00H, 00H
$SG61526 DB	'e', 00H, 'n', 00H, '-', 00H, 'C', 00H, 'B', 00H, 00H, 00H
$SG61527 DB	'e', 00H, 's', 00H, '-', 00H, 'C', 00H, 'O', 00H, 00H, 00H
$SG61528 DB	's', 00H, 'm', 00H, 'n', 00H, '-', 00H, 'F', 00H, 'I', 00H
	DB	00H, 00H
	ORG $+2
$SG61529 DB	'a', 00H, 'r', 00H, '-', 00H, 'S', 00H, 'Y', 00H, 00H, 00H
$SG61530 DB	'e', 00H, 'n', 00H, '-', 00H, 'B', 00H, 'Z', 00H, 00H, 00H
$SG61531 DB	'e', 00H, 's', 00H, '-', 00H, 'P', 00H, 'E', 00H, 00H, 00H
$SG60507 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'E', 00H, 'x', 00H, 'c', 00H, 'e', 00H, 'p'
	DB	00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 00H, 00H
$SG61532 DB	'a', 00H, 'r', 00H, '-', 00H, 'J', 00H, 'O', 00H, 00H, 00H
$SG61533 DB	'e', 00H, 'n', 00H, '-', 00H, 'T', 00H, 'T', 00H, 00H, 00H
$SG61534 DB	'e', 00H, 's', 00H, '-', 00H, 'A', 00H, 'R', 00H, 00H, 00H
$SG61535 DB	'a', 00H, 'r', 00H, '-', 00H, 'L', 00H, 'B', 00H, 00H, 00H
$SG61536 DB	'e', 00H, 'n', 00H, '-', 00H, 'Z', 00H, 'W', 00H, 00H, 00H
$SG61537 DB	'e', 00H, 's', 00H, '-', 00H, 'E', 00H, 'C', 00H, 00H, 00H
$SG61538 DB	'a', 00H, 'r', 00H, '-', 00H, 'K', 00H, 'W', 00H, 00H, 00H
$SG61539 DB	'e', 00H, 'n', 00H, '-', 00H, 'P', 00H, 'H', 00H, 00H, 00H
$SG61540 DB	'e', 00H, 's', 00H, '-', 00H, 'C', 00H, 'L', 00H, 00H, 00H
$SG109669 DB	'S', 00H, 00H, 00H
$SG61541 DB	'a', 00H, 'r', 00H, '-', 00H, 'A', 00H, 'E', 00H, 00H, 00H
$SG61542 DB	'e', 00H, 's', 00H, '-', 00H, 'U', 00H, 'Y', 00H, 00H, 00H
$SG109671 DB	'M', 00H, 00H, 00H
$SG61543 DB	'a', 00H, 'r', 00H, '-', 00H, 'B', 00H, 'H', 00H, 00H, 00H
$SG61544 DB	'e', 00H, 's', 00H, '-', 00H, 'P', 00H, 'Y', 00H, 00H, 00H
$SG109673 DB	'D', 00H, 00H, 00H
$SG61545 DB	'a', 00H, 'r', 00H, '-', 00H, 'Q', 00H, 'A', 00H, 00H, 00H
$SG61546 DB	'e', 00H, 's', 00H, '-', 00H, 'B', 00H, 'O', 00H, 00H, 00H
$SG109675 DB	'B', 00H, 00H, 00H
$SG61547 DB	'e', 00H, 's', 00H, '-', 00H, 'S', 00H, 'V', 00H, 00H, 00H
$SG61548 DB	'e', 00H, 's', 00H, '-', 00H, 'H', 00H, 'N', 00H, 00H, 00H
$SG109677 DB	'V', 00H, 'a', 00H, 'l', 00H, 00H, 00H
$SG61549 DB	'e', 00H, 's', 00H, '-', 00H, 'N', 00H, 'I', 00H, 00H, 00H
$SG61550 DB	'e', 00H, 's', 00H, '-', 00H, 'P', 00H, 'R', 00H, 00H, 00H
$SG109679 DB	'F', 00H, 'o', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 'R', 00H
	DB	'e', 00H, 'm', 00H, 'o', 00H, 'v', 00H, 'e', 00H, 00H, 00H
$SG61551 DB	'z', 00H, 'h', 00H, '-', 00H, 'C', 00H, 'H', 00H, 'T', 00H
	DB	00H, 00H
	ORG $+2
$SG61552 DB	's', 00H, 'r', 00H, 00H, 00H
	ORG $+2
$SG109681 DB	'N', 00H, 'o', 00H, 'R', 00H, 'e', 00H, 'm', 00H, 'o', 00H
	DB	'v', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG61554 DB	00H, 00H
	ORG $+2
$SG109683 DB	'D', 00H, 'e', 00H, 'l', 00H, 'e', 00H, 't', 00H, 'e', 00H
	DB	00H, 00H
	ORG $+2
$SG61555 DB	'a', 00H, 'f', 00H, 00H, 00H
	ORG $+2
$SG61556 DB	'a', 00H, 'f', 00H, '-', 00H, 'z', 00H, 'a', 00H, 00H, 00H
$SG61557 DB	'a', 00H, 'r', 00H, 00H, 00H
	ORG $+2
$SG61558 DB	'a', 00H, 'r', 00H, '-', 00H, 'a', 00H, 'e', 00H, 00H, 00H
$SG61559 DB	'a', 00H, 'r', 00H, '-', 00H, 'b', 00H, 'h', 00H, 00H, 00H
$SG61560 DB	'a', 00H, 'r', 00H, '-', 00H, 'd', 00H, 'z', 00H, 00H, 00H
$SG61561 DB	'a', 00H, 'r', 00H, '-', 00H, 'e', 00H, 'g', 00H, 00H, 00H
$SG61562 DB	'a', 00H, 'r', 00H, '-', 00H, 'i', 00H, 'q', 00H, 00H, 00H
$SG61563 DB	'a', 00H, 'r', 00H, '-', 00H, 'j', 00H, 'o', 00H, 00H, 00H
$SG61564 DB	'a', 00H, 'r', 00H, '-', 00H, 'k', 00H, 'w', 00H, 00H, 00H
$SG61565 DB	'a', 00H, 'r', 00H, '-', 00H, 'l', 00H, 'b', 00H, 00H, 00H
$SG61566 DB	'a', 00H, 'r', 00H, '-', 00H, 'l', 00H, 'y', 00H, 00H, 00H
$SG61567 DB	'a', 00H, 'r', 00H, '-', 00H, 'm', 00H, 'a', 00H, 00H, 00H
$SG61568 DB	'a', 00H, 'r', 00H, '-', 00H, 'o', 00H, 'm', 00H, 00H, 00H
$SG61569 DB	'a', 00H, 'r', 00H, '-', 00H, 'q', 00H, 'a', 00H, 00H, 00H
$SG61570 DB	'a', 00H, 'r', 00H, '-', 00H, 's', 00H, 'a', 00H, 00H, 00H
$SG61571 DB	'a', 00H, 'r', 00H, '-', 00H, 's', 00H, 'y', 00H, 00H, 00H
$SG61572 DB	'a', 00H, 'r', 00H, '-', 00H, 't', 00H, 'n', 00H, 00H, 00H
$SG61573 DB	'a', 00H, 'r', 00H, '-', 00H, 'y', 00H, 'e', 00H, 00H, 00H
$SG61574 DB	'a', 00H, 'z', 00H, 00H, 00H
	ORG $+2
$SG61575 DB	'a', 00H, 'z', 00H, '-', 00H, 'a', 00H, 'z', 00H, '-', 00H
	DB	'c', 00H, 'y', 00H, 'r', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG61576 DB	'a', 00H, 'z', 00H, '-', 00H, 'a', 00H, 'z', 00H, '-', 00H
	DB	'l', 00H, 'a', 00H, 't', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG61577 DB	'b', 00H, 'e', 00H, 00H, 00H
	ORG $+2
?IID_IUDPNetworkEngine@@3U_GUID@@B DD 0bbbd895aH	; IID_IUDPNetworkEngine
	DW	0a97H
	DW	04faeH
	DB	08eH
	DB	038H
	DB	010H
	DB	076H
	DB	0a7H
	DB	0c7H
	DB	04dH
	DB	07fH
$SG61578 DB	'b', 00H, 'e', 00H, '-', 00H, 'b', 00H, 'y', 00H, 00H, 00H
$SG60554 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'T', 00H, 'i', 00H, 'm', 00H, 'e', 00H, 00H
	DB	00H
	ORG $+2
$SG61579 DB	'b', 00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG61580 DB	'b', 00H, 'g', 00H, '-', 00H, 'b', 00H, 'g', 00H, 00H, 00H
$SG61581 DB	'b', 00H, 'n', 00H, '-', 00H, 'i', 00H, 'n', 00H, 00H, 00H
$SG61582 DB	'b', 00H, 's', 00H, '-', 00H, 'b', 00H, 'a', 00H, '-', 00H
	DB	'l', 00H, 'a', 00H, 't', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG61583 DB	'c', 00H, 'a', 00H, 00H, 00H
	ORG $+2
$SG61584 DB	'c', 00H, 'a', 00H, '-', 00H, 'e', 00H, 's', 00H, 00H, 00H
$SG61585 DB	'c', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG61586 DB	'c', 00H, 's', 00H, '-', 00H, 'c', 00H, 'z', 00H, 00H, 00H
$SG61587 DB	'c', 00H, 'y', 00H, '-', 00H, 'g', 00H, 'b', 00H, 00H, 00H
$SG61588 DB	'd', 00H, 'a', 00H, 00H, 00H
	ORG $+2
$SG61589 DB	'd', 00H, 'a', 00H, '-', 00H, 'd', 00H, 'k', 00H, 00H, 00H
$SG61590 DB	'd', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG61591 DB	'd', 00H, 'e', 00H, '-', 00H, 'a', 00H, 't', 00H, 00H, 00H
$SG61592 DB	'd', 00H, 'e', 00H, '-', 00H, 'c', 00H, 'h', 00H, 00H, 00H
$SG61593 DB	'd', 00H, 'e', 00H, '-', 00H, 'd', 00H, 'e', 00H, 00H, 00H
$SG61594 DB	'd', 00H, 'e', 00H, '-', 00H, 'l', 00H, 'i', 00H, 00H, 00H
$SG61595 DB	'd', 00H, 'e', 00H, '-', 00H, 'l', 00H, 'u', 00H, 00H, 00H
$SG61596 DB	'd', 00H, 'i', 00H, 'v', 00H, 00H, 00H
$SG61597 DB	'd', 00H, 'i', 00H, 'v', 00H, '-', 00H, 'm', 00H, 'v', 00H
	DB	00H, 00H
	ORG $+2
$SG61598 DB	'e', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG61599 DB	'e', 00H, 'l', 00H, '-', 00H, 'g', 00H, 'r', 00H, 00H, 00H
$SG61600 DB	'e', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG61601 DB	'e', 00H, 'n', 00H, '-', 00H, 'a', 00H, 'u', 00H, 00H, 00H
$SG61602 DB	'e', 00H, 'n', 00H, '-', 00H, 'b', 00H, 'z', 00H, 00H, 00H
$SG61603 DB	'e', 00H, 'n', 00H, '-', 00H, 'c', 00H, 'a', 00H, 00H, 00H
$SG61604 DB	'e', 00H, 'n', 00H, '-', 00H, 'c', 00H, 'b', 00H, 00H, 00H
$SG61605 DB	'e', 00H, 'n', 00H, '-', 00H, 'g', 00H, 'b', 00H, 00H, 00H
$SG61606 DB	'e', 00H, 'n', 00H, '-', 00H, 'i', 00H, 'e', 00H, 00H, 00H
$SG61607 DB	'e', 00H, 'n', 00H, '-', 00H, 'j', 00H, 'm', 00H, 00H, 00H
$SG61608 DB	'e', 00H, 'n', 00H, '-', 00H, 'n', 00H, 'z', 00H, 00H, 00H
$SG61609 DB	'e', 00H, 'n', 00H, '-', 00H, 'p', 00H, 'h', 00H, 00H, 00H
$SG61610 DB	'e', 00H, 'n', 00H, '-', 00H, 't', 00H, 't', 00H, 00H, 00H
$SG61611 DB	'e', 00H, 'n', 00H, '-', 00H, 'u', 00H, 's', 00H, 00H, 00H
$SG61612 DB	'e', 00H, 'n', 00H, '-', 00H, 'z', 00H, 'a', 00H, 00H, 00H
?IID_ITCPNetworkEngine@@3U_GUID@@B DD 09aa6931fH	; IID_ITCPNetworkEngine
	DW	0417fH
	DW	043a7H
	DB	086H
	DB	0abH
	DB	056H
	DB	010H
	DB	0e4H
	DB	034H
	DB	01cH
	DB	017H
$SG61613 DB	'e', 00H, 'n', 00H, '-', 00H, 'z', 00H, 'w', 00H, 00H, 00H
$SG61614 DB	'e', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG61615 DB	'e', 00H, 's', 00H, '-', 00H, 'a', 00H, 'r', 00H, 00H, 00H
$SG61616 DB	'e', 00H, 's', 00H, '-', 00H, 'b', 00H, 'o', 00H, 00H, 00H
$SG61617 DB	'e', 00H, 's', 00H, '-', 00H, 'c', 00H, 'l', 00H, 00H, 00H
$SG61618 DB	'e', 00H, 's', 00H, '-', 00H, 'c', 00H, 'o', 00H, 00H, 00H
$SG61619 DB	'e', 00H, 's', 00H, '-', 00H, 'c', 00H, 'r', 00H, 00H, 00H
$SG61620 DB	'e', 00H, 's', 00H, '-', 00H, 'd', 00H, 'o', 00H, 00H, 00H
$SG61621 DB	'e', 00H, 's', 00H, '-', 00H, 'e', 00H, 'c', 00H, 00H, 00H
$SG61622 DB	'e', 00H, 's', 00H, '-', 00H, 'e', 00H, 's', 00H, 00H, 00H
$SG61623 DB	'e', 00H, 's', 00H, '-', 00H, 'g', 00H, 't', 00H, 00H, 00H
$SG61624 DB	'e', 00H, 's', 00H, '-', 00H, 'h', 00H, 'n', 00H, 00H, 00H
$SG61625 DB	'e', 00H, 's', 00H, '-', 00H, 'm', 00H, 'x', 00H, 00H, 00H
$SG60601 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'C', 00H, 'a', 00H, 'c', 00H, 'h', 00H, 'e'
	DB	00H, 00H, 00H
$SG61626 DB	'e', 00H, 's', 00H, '-', 00H, 'n', 00H, 'i', 00H, 00H, 00H
$SG61627 DB	'e', 00H, 's', 00H, '-', 00H, 'p', 00H, 'a', 00H, 00H, 00H
$SG61628 DB	'e', 00H, 's', 00H, '-', 00H, 'p', 00H, 'e', 00H, 00H, 00H
$SG61629 DB	'e', 00H, 's', 00H, '-', 00H, 'p', 00H, 'r', 00H, 00H, 00H
$SG61630 DB	'e', 00H, 's', 00H, '-', 00H, 'p', 00H, 'y', 00H, 00H, 00H
$SG61631 DB	'e', 00H, 's', 00H, '-', 00H, 's', 00H, 'v', 00H, 00H, 00H
$SG61632 DB	'e', 00H, 's', 00H, '-', 00H, 'u', 00H, 'y', 00H, 00H, 00H
$SG61633 DB	'e', 00H, 's', 00H, '-', 00H, 'v', 00H, 'e', 00H, 00H, 00H
$SG61634 DB	'e', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG61635 DB	'e', 00H, 't', 00H, '-', 00H, 'e', 00H, 'e', 00H, 00H, 00H
$SG61636 DB	'e', 00H, 'u', 00H, 00H, 00H
	ORG $+2
$SG61637 DB	'e', 00H, 'u', 00H, '-', 00H, 'e', 00H, 's', 00H, 00H, 00H
$SG61638 DB	'f', 00H, 'a', 00H, 00H, 00H
	ORG $+2
$SG61639 DB	'f', 00H, 'a', 00H, '-', 00H, 'i', 00H, 'r', 00H, 00H, 00H
$SG61640 DB	'f', 00H, 'i', 00H, 00H, 00H
	ORG $+2
$SG61641 DB	'f', 00H, 'i', 00H, '-', 00H, 'f', 00H, 'i', 00H, 00H, 00H
$SG61642 DB	'f', 00H, 'o', 00H, 00H, 00H
	ORG $+2
$SG61643 DB	'f', 00H, 'o', 00H, '-', 00H, 'f', 00H, 'o', 00H, 00H, 00H
$SG61644 DB	'f', 00H, 'r', 00H, 00H, 00H
	ORG $+2
$SG61645 DB	'f', 00H, 'r', 00H, '-', 00H, 'b', 00H, 'e', 00H, 00H, 00H
$SG61646 DB	'f', 00H, 'r', 00H, '-', 00H, 'c', 00H, 'a', 00H, 00H, 00H
$SG61647 DB	'f', 00H, 'r', 00H, '-', 00H, 'c', 00H, 'h', 00H, 00H, 00H
$SG61648 DB	'f', 00H, 'r', 00H, '-', 00H, 'f', 00H, 'r', 00H, 00H, 00H
$SG61649 DB	'f', 00H, 'r', 00H, '-', 00H, 'l', 00H, 'u', 00H, 00H, 00H
$SG61650 DB	'f', 00H, 'r', 00H, '-', 00H, 'm', 00H, 'c', 00H, 00H, 00H
$SG61651 DB	'g', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG61652 DB	'g', 00H, 'l', 00H, '-', 00H, 'e', 00H, 's', 00H, 00H, 00H
$SG61653 DB	'g', 00H, 'u', 00H, 00H, 00H
	ORG $+2
$SG61654 DB	'g', 00H, 'u', 00H, '-', 00H, 'i', 00H, 'n', 00H, 00H, 00H
$SG61655 DB	'h', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG61656 DB	'h', 00H, 'e', 00H, '-', 00H, 'i', 00H, 'l', 00H, 00H, 00H
$SG61657 DB	'h', 00H, 'i', 00H, 00H, 00H
	ORG $+2
$SG61658 DB	'h', 00H, 'i', 00H, '-', 00H, 'i', 00H, 'n', 00H, 00H, 00H
?IID_ITCPSocketService@@3U_GUID@@B DD 0f8a5c14H		; IID_ITCPSocketService
	DW	0ab92H
	DW	0467cH
	DB	0b6H
	DB	07bH
	DB	06dH
	DB	08aH
	DB	0cfH
	DB	064H
	DB	052H
	DB	0d7H
$SG61659 DB	'h', 00H, 'r', 00H, 00H, 00H
	ORG $+2
$SG61660 DB	'h', 00H, 'r', 00H, '-', 00H, 'b', 00H, 'a', 00H, 00H, 00H
$SG61661 DB	'h', 00H, 'r', 00H, '-', 00H, 'h', 00H, 'r', 00H, 00H, 00H
$SG61662 DB	'h', 00H, 'u', 00H, 00H, 00H
	ORG $+2
$SG61663 DB	'h', 00H, 'u', 00H, '-', 00H, 'h', 00H, 'u', 00H, 00H, 00H
$SG61664 DB	'h', 00H, 'y', 00H, 00H, 00H
	ORG $+2
$SG61665 DB	'h', 00H, 'y', 00H, '-', 00H, 'a', 00H, 'm', 00H, 00H, 00H
$SG61666 DB	'i', 00H, 'd', 00H, 00H, 00H
	ORG $+2
$SG61667 DB	'i', 00H, 'd', 00H, '-', 00H, 'i', 00H, 'd', 00H, 00H, 00H
$SG61668 DB	'i', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG61669 DB	'i', 00H, 's', 00H, '-', 00H, 'i', 00H, 's', 00H, 00H, 00H
$SG61670 DB	'i', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG61671 DB	'i', 00H, 't', 00H, '-', 00H, 'c', 00H, 'h', 00H, 00H, 00H
$SG61672 DB	'i', 00H, 't', 00H, '-', 00H, 'i', 00H, 't', 00H, 00H, 00H
$SG60648 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'S', 00H, 't', 00H, 'e', 00H, 'n', 00H, 'c'
	DB	00H, 'i', 00H, 'l', 00H, 00H, 00H
$SG61673 DB	'j', 00H, 'a', 00H, 00H, 00H
	ORG $+2
$SG61674 DB	'j', 00H, 'a', 00H, '-', 00H, 'j', 00H, 'p', 00H, 00H, 00H
$SG61675 DB	'k', 00H, 'a', 00H, 00H, 00H
	ORG $+2
$SG61676 DB	'k', 00H, 'a', 00H, '-', 00H, 'g', 00H, 'e', 00H, 00H, 00H
$SG61677 DB	'k', 00H, 'k', 00H, 00H, 00H
	ORG $+2
$SG61678 DB	'k', 00H, 'k', 00H, '-', 00H, 'k', 00H, 'z', 00H, 00H, 00H
$SG61679 DB	'k', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG61680 DB	'k', 00H, 'n', 00H, '-', 00H, 'i', 00H, 'n', 00H, 00H, 00H
$SG61681 DB	'k', 00H, 'o', 00H, 00H, 00H
	ORG $+2
$SG61682 DB	'k', 00H, 'o', 00H, 'k', 00H, 00H, 00H
$SG61683 DB	'k', 00H, 'o', 00H, 'k', 00H, '-', 00H, 'i', 00H, 'n', 00H
	DB	00H, 00H
	ORG $+2
$SG61684 DB	'k', 00H, 'o', 00H, '-', 00H, 'k', 00H, 'r', 00H, 00H, 00H
$SG61685 DB	'k', 00H, 'y', 00H, 00H, 00H
	ORG $+2
$SG61686 DB	'k', 00H, 'y', 00H, '-', 00H, 'k', 00H, 'g', 00H, 00H, 00H
$SG61687 DB	'l', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG61688 DB	'l', 00H, 't', 00H, '-', 00H, 'l', 00H, 't', 00H, 00H, 00H
$SG61689 DB	'l', 00H, 'v', 00H, 00H, 00H
	ORG $+2
$SG61690 DB	'l', 00H, 'v', 00H, '-', 00H, 'l', 00H, 'v', 00H, 00H, 00H
$SG61691 DB	'm', 00H, 'i', 00H, '-', 00H, 'n', 00H, 'z', 00H, 00H, 00H
?IID_IWEBSocketService@@3U_GUID@@B DD 05502d590H	; IID_IWEBSocketService
	DW	0c446H
	DW	0440dH
	DB	0a1H
	DB	095H
	DB	03eH
	DB	0daH
	DB	011H
	DB	0f8H
	DB	0dH
	DB	064H
$SG61692 DB	'm', 00H, 'k', 00H, 00H, 00H
	ORG $+2
$SG61693 DB	'm', 00H, 'k', 00H, '-', 00H, 'm', 00H, 'k', 00H, 00H, 00H
$SG61694 DB	'm', 00H, 'l', 00H, '-', 00H, 'i', 00H, 'n', 00H, 00H, 00H
$SG61695 DB	'm', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG61696 DB	'm', 00H, 'n', 00H, '-', 00H, 'm', 00H, 'n', 00H, 00H, 00H
$SG61697 DB	'm', 00H, 'r', 00H, 00H, 00H
	ORG $+2
$SG61698 DB	'm', 00H, 'r', 00H, '-', 00H, 'i', 00H, 'n', 00H, 00H, 00H
$SG61699 DB	'm', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG61700 DB	'm', 00H, 's', 00H, '-', 00H, 'b', 00H, 'n', 00H, 00H, 00H
$SG61701 DB	'm', 00H, 's', 00H, '-', 00H, 'm', 00H, 'y', 00H, 00H, 00H
$SG61702 DB	'm', 00H, 't', 00H, '-', 00H, 'm', 00H, 't', 00H, 00H, 00H
$SG61703 DB	'n', 00H, 'b', 00H, '-', 00H, 'n', 00H, 'o', 00H, 00H, 00H
$SG61704 DB	'n', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG61705 DB	'n', 00H, 'l', 00H, '-', 00H, 'b', 00H, 'e', 00H, 00H, 00H
$SG61706 DB	'n', 00H, 'l', 00H, '-', 00H, 'n', 00H, 'l', 00H, 00H, 00H
$SG61707 DB	'n', 00H, 'n', 00H, '-', 00H, 'n', 00H, 'o', 00H, 00H, 00H
$SG61708 DB	'n', 00H, 'o', 00H, 00H, 00H
	ORG $+2
$SG61709 DB	'n', 00H, 's', 00H, '-', 00H, 'z', 00H, 'a', 00H, 00H, 00H
$SG61710 DB	'p', 00H, 'a', 00H, 00H, 00H
	ORG $+2
$SG61711 DB	'p', 00H, 'a', 00H, '-', 00H, 'i', 00H, 'n', 00H, 00H, 00H
$SG61712 DB	'p', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG61713 DB	'p', 00H, 'l', 00H, '-', 00H, 'p', 00H, 'l', 00H, 00H, 00H
$SG61714 DB	'p', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG61715 DB	'p', 00H, 't', 00H, '-', 00H, 'b', 00H, 'r', 00H, 00H, 00H
$SG61716 DB	'p', 00H, 't', 00H, '-', 00H, 'p', 00H, 't', 00H, 00H, 00H
$SG61717 DB	'q', 00H, 'u', 00H, 'z', 00H, '-', 00H, 'b', 00H, 'o', 00H
	DB	00H, 00H
	ORG $+2
?IID_ITimerEngine@@3U_GUID@@B DD 0c90cfc81H		; IID_ITimerEngine
	DW	0ee01H
	DW	04654H
	DB	08cH
	DB	09aH
	DB	058H
	DB	0a9H
	DB	04bH
	DB	078H
	DB	076H
	DB	0b6H
$SG61718 DB	'q', 00H, 'u', 00H, 'z', 00H, '-', 00H, 'e', 00H, 'c', 00H
	DB	00H, 00H
	ORG $+2
$SG61719 DB	'q', 00H, 'u', 00H, 'z', 00H, '-', 00H, 'p', 00H, 'e', 00H
	DB	00H, 00H
	ORG $+2
$SG60695 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'S', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG61720 DB	'r', 00H, 'o', 00H, 00H, 00H
	ORG $+2
$SG61721 DB	'r', 00H, 'o', 00H, '-', 00H, 'r', 00H, 'o', 00H, 00H, 00H
$SG61722 DB	'r', 00H, 'u', 00H, 00H, 00H
	ORG $+2
$SG61723 DB	'r', 00H, 'u', 00H, '-', 00H, 'r', 00H, 'u', 00H, 00H, 00H
$SG61724 DB	's', 00H, 'a', 00H, 00H, 00H
	ORG $+2
$SG61725 DB	's', 00H, 'a', 00H, '-', 00H, 'i', 00H, 'n', 00H, 00H, 00H
$SG61726 DB	's', 00H, 'e', 00H, '-', 00H, 'f', 00H, 'i', 00H, 00H, 00H
$SG61727 DB	's', 00H, 'e', 00H, '-', 00H, 'n', 00H, 'o', 00H, 00H, 00H
$SG61728 DB	's', 00H, 'e', 00H, '-', 00H, 's', 00H, 'e', 00H, 00H, 00H
$SG61729 DB	's', 00H, 'k', 00H, 00H, 00H
	ORG $+2
$SG61730 DB	's', 00H, 'k', 00H, '-', 00H, 's', 00H, 'k', 00H, 00H, 00H
$SG61731 DB	's', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG61732 DB	's', 00H, 'l', 00H, '-', 00H, 's', 00H, 'i', 00H, 00H, 00H
$SG61733 DB	's', 00H, 'm', 00H, 'a', 00H, '-', 00H, 'n', 00H, 'o', 00H
	DB	00H, 00H
	ORG $+2
$SG61734 DB	's', 00H, 'm', 00H, 'a', 00H, '-', 00H, 's', 00H, 'e', 00H
	DB	00H, 00H
	ORG $+2
$SG61735 DB	's', 00H, 'm', 00H, 'j', 00H, '-', 00H, 'n', 00H, 'o', 00H
	DB	00H, 00H
	ORG $+2
$SG61736 DB	's', 00H, 'm', 00H, 'j', 00H, '-', 00H, 's', 00H, 'e', 00H
	DB	00H, 00H
	ORG $+2
$SG61737 DB	's', 00H, 'm', 00H, 'n', 00H, '-', 00H, 'f', 00H, 'i', 00H
	DB	00H, 00H
	ORG $+2
$SG61738 DB	's', 00H, 'm', 00H, 's', 00H, '-', 00H, 'f', 00H, 'i', 00H
	DB	00H, 00H
	ORG $+2
$SG61739 DB	's', 00H, 'q', 00H, 00H, 00H
	ORG $+2
$SG61740 DB	's', 00H, 'q', 00H, '-', 00H, 'a', 00H, 'l', 00H, 00H, 00H
$SG61741 DB	's', 00H, 'r', 00H, 00H, 00H
	ORG $+2
$SG61742 DB	's', 00H, 'r', 00H, '-', 00H, 'b', 00H, 'a', 00H, '-', 00H
	DB	'c', 00H, 'y', 00H, 'r', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG61743 DB	's', 00H, 'r', 00H, '-', 00H, 'b', 00H, 'a', 00H, '-', 00H
	DB	'l', 00H, 'a', 00H, 't', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG61744 DB	's', 00H, 'r', 00H, '-', 00H, 's', 00H, 'p', 00H, '-', 00H
	DB	'c', 00H, 'y', 00H, 'r', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG61745 DB	's', 00H, 'r', 00H, '-', 00H, 's', 00H, 'p', 00H, '-', 00H
	DB	'l', 00H, 'a', 00H, 't', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG61746 DB	's', 00H, 'v', 00H, 00H, 00H
	ORG $+2
$SG61747 DB	's', 00H, 'v', 00H, '-', 00H, 'f', 00H, 'i', 00H, 00H, 00H
$SG61748 DB	's', 00H, 'v', 00H, '-', 00H, 's', 00H, 'e', 00H, 00H, 00H
$SG61749 DB	's', 00H, 'w', 00H, 00H, 00H
	ORG $+2
$SG61750 DB	's', 00H, 'w', 00H, '-', 00H, 'k', 00H, 'e', 00H, 00H, 00H
$SG61751 DB	's', 00H, 'y', 00H, 'r', 00H, 00H, 00H
$SG61752 DB	's', 00H, 'y', 00H, 'r', 00H, '-', 00H, 's', 00H, 'y', 00H
	DB	00H, 00H
	ORG $+2
$SG61753 DB	't', 00H, 'a', 00H, 00H, 00H
	ORG $+2
$SG61754 DB	't', 00H, 'a', 00H, '-', 00H, 'i', 00H, 'n', 00H, 00H, 00H
$SG61755 DB	't', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG61756 DB	't', 00H, 'e', 00H, '-', 00H, 'i', 00H, 'n', 00H, 00H, 00H
$SG61757 DB	't', 00H, 'h', 00H, 00H, 00H
	ORG $+2
$SG61758 DB	't', 00H, 'h', 00H, '-', 00H, 't', 00H, 'h', 00H, 00H, 00H
$SG61759 DB	't', 00H, 'n', 00H, '-', 00H, 'z', 00H, 'a', 00H, 00H, 00H
$SG61760 DB	't', 00H, 'r', 00H, 00H, 00H
	ORG $+2
$SG61761 DB	't', 00H, 'r', 00H, '-', 00H, 't', 00H, 'r', 00H, 00H, 00H
$SG61762 DB	't', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG61763 DB	't', 00H, 't', 00H, '-', 00H, 'r', 00H, 'u', 00H, 00H, 00H
$SG61764 DB	'u', 00H, 'k', 00H, 00H, 00H
	ORG $+2
$SG61765 DB	'u', 00H, 'k', 00H, '-', 00H, 'u', 00H, 'a', 00H, 00H, 00H
$SG61766 DB	'u', 00H, 'r', 00H, 00H, 00H
	ORG $+2
$SG60742 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'M', 00H, 'a', 00H, 'p', 00H, 00H, 00H
$SG61767 DB	'u', 00H, 'r', 00H, '-', 00H, 'p', 00H, 'k', 00H, 00H, 00H
$SG61768 DB	'u', 00H, 'z', 00H, 00H, 00H
	ORG $+2
$SG61769 DB	'u', 00H, 'z', 00H, '-', 00H, 'u', 00H, 'z', 00H, '-', 00H
	DB	'c', 00H, 'y', 00H, 'r', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG61770 DB	'u', 00H, 'z', 00H, '-', 00H, 'u', 00H, 'z', 00H, '-', 00H
	DB	'l', 00H, 'a', 00H, 't', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG61771 DB	'v', 00H, 'i', 00H, 00H, 00H
	ORG $+2
$SG60747 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'U', 00H, 't', 00H, 'i', 00H, 'l', 00H, 00H
	DB	00H
	ORG $+2
$SG61772 DB	'v', 00H, 'i', 00H, '-', 00H, 'v', 00H, 'n', 00H, 00H, 00H
$SG61773 DB	'x', 00H, 'h', 00H, '-', 00H, 'z', 00H, 'a', 00H, 00H, 00H
$SG61774 DB	'z', 00H, 'h', 00H, '-', 00H, 'c', 00H, 'h', 00H, 's', 00H
	DB	00H, 00H
	ORG $+2
$SG61775 DB	'z', 00H, 'h', 00H, '-', 00H, 'c', 00H, 'h', 00H, 't', 00H
	DB	00H, 00H
	ORG $+2
$SG61776 DB	'z', 00H, 'h', 00H, '-', 00H, 'c', 00H, 'n', 00H, 00H, 00H
$SG61777 DB	'z', 00H, 'h', 00H, '-', 00H, 'h', 00H, 'k', 00H, 00H, 00H
$SG61778 DB	'z', 00H, 'h', 00H, '-', 00H, 'm', 00H, 'o', 00H, 00H, 00H
$SG61779 DB	'z', 00H, 'h', 00H, '-', 00H, 's', 00H, 'g', 00H, 00H, 00H
$SG61780 DB	'z', 00H, 'h', 00H, '-', 00H, 't', 00H, 'w', 00H, 00H, 00H
$SG61781 DB	'z', 00H, 'u', 00H, '-', 00H, 'z', 00H, 'a', 00H, 00H, 00H
$SG60794 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'S', 00H, 'e', 00H, 'c', 00H, 'u', 00H, 'r'
	DB	00H, 'i', 00H, 't', 00H, 'y', 00H, 00H, 00H
	ORG $+2
?IID_IAttemperEngine@@3U_GUID@@B DD 04d5d2424H		; IID_IAttemperEngine
	DW	040fdH
	DW	04747H
	DB	086H
	DB	0d8H
	DB	08fH
	DB	0caH
	DB	06bH
	DB	096H
	DB	0eaH
	DB	0bH
$SG60841 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'S', 00H, 'y', 00H, 'n', 00H, 'c', 00H, 00H
	DB	00H
	ORG $+2
$SG60888 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'I', 00H, 'S', 00H, 'A', 00H, 'P', 00H, 'I'
	DB	00H, 00H, 00H
$SG59872 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'G', 00H, 'e', 00H, 'n', 00H, 'e', 00H, 'r'
	DB	00H, 'a', 00H, 'l', 00H, 00H, 00H
$SG59943 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'C', 00H, 'O', 00H, 'M', 00H, 00H, 00H
$SG59990 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'Q', 00H, 'I', 00H, 00H, 00H
	ORG $+2
$SG60037 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'R', 00H, 'e', 00H, 'g', 00H, 'i', 00H, 's'
	DB	00H, 't', 00H, 'r', 00H, 'a', 00H, 'r', 00H, 00H, 00H
?IID_IFaceItemControl@@3U_GUID@@B DD 0fc9067a9H		; IID_IFaceItemControl
	DW	0162eH
	DW	04e13H
	DB	0b0H
	DB	01H
	DB	0f7H
	DB	057H
	DB	09eH
	DB	0a4H
	DB	060H
	DB	06bH
$SG60084 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'R', 00H, 'e', 00H, 'f', 00H, 'c', 00H, 'o'
	DB	00H, 'u', 00H, 'n', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG82625 DB	'I', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'T'
	DB	00H, 'i', 00H, 'm', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG82627 DB	'I', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'T'
	DB	00H, 'i', 00H, 'm', 00H, 'e', 00H, 'S', 00H, 'p', 00H, 'a', 00H
	DB	'n', 00H, 00H, 00H
	ORG $+2
?IID_IFaceSelectControl@@3U_GUID@@B DD 08514020bH	; IID_IFaceSelectControl
	DW	082a2H
	DW	042d9H
	DB	090H
	DB	019H
	DB	032H
	DB	0a4H
	DB	0eaH
	DB	0ceH
	DB	09fH
	DB	075H
$SG60131 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o'
	DB	00H, 'w', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 00H, 00H
?IID_ICustomFaceManager@@3U_GUID@@B DD 0bcd7ff05H	; IID_ICustomFaceManager
	DW	0a79H
	DW	04482H
	DB	09bH
	DB	0a6H
	DB	079H
	DB	0dfH
	DB	04bH
	DB	0d9H
	DB	080H
	DB	016H
$SG60178 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'C', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'r'
	DB	00H, 'o', 00H, 'l', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG110358 DB	'A', 00H, 'p', 00H, 'p', 00H, 'I', 00H, 'D', 00H, 00H, 00H
$SG110359 DB	'C', 00H, 'L', 00H, 'S', 00H, 'I', 00H, 'D', 00H, 00H, 00H
$SG110360 DB	'C', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'o', 00H, 'n', 00H
	DB	'e', 00H, 'n', 00H, 't', 00H, ' ', 00H, 'C', 00H, 'a', 00H, 't'
	DB	00H, 'e', 00H, 'g', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 'e', 00H
	DB	's', 00H, 00H, 00H
	ORG $+2
$SG110361 DB	'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'T', 00H, 'y', 00H
	DB	'p', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG110362 DB	'I', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'f', 00H
	DB	'a', 00H, 'c', 00H, 'e', 00H, 00H, 00H
$SG110363 DB	'H', 00H, 'a', 00H, 'r', 00H, 'd', 00H, 'w', 00H, 'a', 00H
	DB	'r', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG110364 DB	'M', 00H, 'i', 00H, 'm', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG110365 DB	'S', 00H, 'A', 00H, 'M', 00H, 00H, 00H
$SG110366 DB	'S', 00H, 'E', 00H, 'C', 00H, 'U', 00H, 'R', 00H, 'I', 00H
	DB	'T', 00H, 'Y', 00H, 00H, 00H
	ORG $+2
$SG110367 DB	'S', 00H, 'Y', 00H, 'S', 00H, 'T', 00H, 'E', 00H, 'M', 00H
	DB	00H, 00H
	ORG $+2
$SG110368 DB	'S', 00H, 'o', 00H, 'f', 00H, 't', 00H, 'w', 00H, 'a', 00H
	DB	'r', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG110369 DB	'T', 00H, 'y', 00H, 'p', 00H, 'e', 00H, 'L', 00H, 'i', 00H
	DB	'b', 00H, 00H, 00H
$SG60225 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'H', 00H, 'o', 00H, 's', 00H, 't', 00H, 'i'
	DB	00H, 'n', 00H, 'g', 00H, 00H, 00H
?IID_ITCPSocket@@3U_GUID@@B DD 0a870d592H		; IID_ITCPSocket
	DW	0447aH
	DW	040bdH
	DB	0aeH
	DB	04eH
	DB	05eH
	DB	064H
	DB	0deH
	DB	0ceH
	DB	022H
	DB	0edH
?IID_IPlazaUserManager@@3U_GUID@@B DD 0a2992ab9H	; IID_IPlazaUserManager
	DW	02fddH
	DW	04f9fH
	DB	0bbH
	DB	0acH
	DB	0cfH
	DB	08bH
	DB	060H
	DB	070H
	DB	080H
	DB	0cdH
$SG60272 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'D', 00H, 'B', 00H, 'C', 00H, 'l', 00H, 'i'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, 00H, 00H
	ORG $+2
?IID_IAndroidUserItemSink@@3U_GUID@@B DD 0967632cH	; IID_IAndroidUserItemSink
	DW	093daH
	DW	04f7fH
	DB	098H
	DB	0e4H
	DB	06fH
	DB	09fH
	DB	0f2H
	DB	0caH
	DB	07bH
	DB	0c4H
?IID_IGameUserManager@@3U_GUID@@B DD 0b0e334b9H		; IID_IGameUserManager
	DW	0f693H
	DW	04c5fH
	DB	087H
	DB	0fH
	DB	066H
	DB	077H
	DB	0aH
	DB	0b9H
	DB	093H
	DB	0b2H
?IID_IUDPSocket@@3U_GUID@@B DD 011e344d0H		; IID_IUDPSocket
	DW	0ace1H
	DW	04a72H
	DB	0abH
	DB	0acH
	DB	06fH
	DB	031H
	DB	013H
	DB	0bfH
	DB	0c9H
	DB	023H
$SG61325 DB	'a', 00H, 'r', 00H, 00H, 00H
	ORG $+2
$SG61326 DB	'b', 00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG61327 DB	'c', 00H, 'a', 00H, 00H, 00H
	ORG $+2
$SG61328 DB	'z', 00H, 'h', 00H, '-', 00H, 'C', 00H, 'H', 00H, 'S', 00H
	DB	00H, 00H
	ORG $+2
$SG61329 DB	'c', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG61330 DB	'd', 00H, 'a', 00H, 00H, 00H
	ORG $+2
$SG61331 DB	'd', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG61332 DB	'e', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG61333 DB	'e', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG61334 DB	'e', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG61335 DB	'f', 00H, 'i', 00H, 00H, 00H
	ORG $+2
$SG61336 DB	'f', 00H, 'r', 00H, 00H, 00H
	ORG $+2
$SG61337 DB	'h', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG61338 DB	'h', 00H, 'u', 00H, 00H, 00H
	ORG $+2
$SG61339 DB	'i', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG61340 DB	'i', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG61341 DB	'j', 00H, 'a', 00H, 00H, 00H
	ORG $+2
$SG61342 DB	'k', 00H, 'o', 00H, 00H, 00H
	ORG $+2
$SG61343 DB	'n', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG60319 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'D', 00H, 'B', 00H, 'P', 00H, 'r', 00H, 'o'
	DB	00H, 'v', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 00H, 00H
	ORG $+2
$SG61344 DB	'n', 00H, 'o', 00H, 00H, 00H
	ORG $+2
$SG61345 DB	'p', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG61346 DB	'p', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG61347 DB	'r', 00H, 'o', 00H, 00H, 00H
	ORG $+2
$SG61348 DB	'r', 00H, 'u', 00H, 00H, 00H
	ORG $+2
$SG61349 DB	'h', 00H, 'r', 00H, 00H, 00H
	ORG $+2
$SG61350 DB	's', 00H, 'k', 00H, 00H, 00H
	ORG $+2
$SG61351 DB	's', 00H, 'q', 00H, 00H, 00H
	ORG $+2
$SG61352 DB	's', 00H, 'v', 00H, 00H, 00H
	ORG $+2
$SG61353 DB	't', 00H, 'h', 00H, 00H, 00H
	ORG $+2
$SG61354 DB	't', 00H, 'r', 00H, 00H, 00H
	ORG $+2
$SG61355 DB	'u', 00H, 'r', 00H, 00H, 00H
	ORG $+2
$SG61356 DB	'i', 00H, 'd', 00H, 00H, 00H
	ORG $+2
$SG61357 DB	'u', 00H, 'k', 00H, 00H, 00H
	ORG $+2
$SG61358 DB	'b', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG61359 DB	's', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG61360 DB	'e', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG61361 DB	'l', 00H, 'v', 00H, 00H, 00H
	ORG $+2
?IID_IGameLevelParser@@3U_GUID@@B DD 012823198H		; IID_IGameLevelParser
	DW	027b6H
	DW	046c5H
	DB	09cH
	DB	02cH
	DB	09cH
	DB	037H
	DB	08H
	DB	058H
	DB	0bfH
	DB	0faH
$SG61362 DB	'l', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG61363 DB	'f', 00H, 'a', 00H, 00H, 00H
	ORG $+2
$SG61364 DB	'v', 00H, 'i', 00H, 00H, 00H
	ORG $+2
$SG61365 DB	'h', 00H, 'y', 00H, 00H, 00H
	ORG $+2
$SG61366 DB	'a', 00H, 'z', 00H, 00H, 00H
	ORG $+2
$SG61367 DB	'e', 00H, 'u', 00H, 00H, 00H
	ORG $+2
?IID_ITraceServiceManager@@3U_GUID@@B DD 06d14efe6H	; IID_ITraceServiceManager
	DW	0892aH
	DW	04a48H
	DB	092H
	DB	0c9H
	DB	0dbH
	DB	0eaH
	DB	092H
	DB	0ddH
	DB	0d5H
	DB	013H
$SG61368 DB	'm', 00H, 'k', 00H, 00H, 00H
	ORG $+2
?IID_IGameServiceManager@@3U_GUID@@B DD 0a975ccebH	; IID_IGameServiceManager
	DW	0331H
	DW	04553H
	DB	0a1H
	DB	0e0H
	DB	0a7H
	DB	0c7H
	DB	07aH
	DB	07cH
	DB	04eH
	DB	0fdH
$SG61369 DB	'a', 00H, 'f', 00H, 00H, 00H
	ORG $+2
$SG61370 DB	'k', 00H, 'a', 00H, 00H, 00H
	ORG $+2
$SG61371 DB	'f', 00H, 'o', 00H, 00H, 00H
	ORG $+2
$SG61372 DB	'h', 00H, 'i', 00H, 00H, 00H
	ORG $+2
$SG61373 DB	'm', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG61374 DB	'k', 00H, 'k', 00H, 00H, 00H
	ORG $+2
$SG61375 DB	'k', 00H, 'y', 00H, 00H, 00H
	ORG $+2
$SG61376 DB	's', 00H, 'w', 00H, 00H, 00H
	ORG $+2
$SG61377 DB	'u', 00H, 'z', 00H, 00H, 00H
	ORG $+2
?IID_IWHNetwork@@3U_GUID@@B DD 0e500997bH		; IID_IWHNetwork
	DW	0e45eH
	DW	0474eH
	DB	08aH
	DB	0d4H
	DB	0bcH
	DB	0f3H
	DB	04dH
	DB	089H
	DB	045H
	DB	041H
$SG61378 DB	't', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG61379 DB	'p', 00H, 'a', 00H, 00H, 00H
	ORG $+2
$SG61380 DB	'g', 00H, 'u', 00H, 00H, 00H
	ORG $+2
$SG61381 DB	't', 00H, 'a', 00H, 00H, 00H
	ORG $+2
$SG61382 DB	't', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG61383 DB	'k', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG61384 DB	'm', 00H, 'r', 00H, 00H, 00H
	ORG $+2
$SG61385 DB	's', 00H, 'a', 00H, 00H, 00H
	ORG $+2
$SG61386 DB	'm', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG61387 DB	'g', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG61388 DB	'k', 00H, 'o', 00H, 'k', 00H, 00H, 00H
$SG61389 DB	's', 00H, 'y', 00H, 'r', 00H, 00H, 00H
$SG61390 DB	'd', 00H, 'i', 00H, 'v', 00H, 00H, 00H
$SG60366 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'S', 00H, 'n', 00H, 'a', 00H, 'p', 00H, 'i'
	DB	00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG61391 DB	00H, 00H
	ORG $+2
$SG61392 DB	'a', 00H, 'r', 00H, '-', 00H, 'S', 00H, 'A', 00H, 00H, 00H
?IID_IUserOrderParser@@3U_GUID@@B DD 0eff89495H		; IID_IUserOrderParser
	DW	0e9daH
	DW	04ea3H
	DB	083H
	DB	064H
	DB	0aaH
	DB	0b2H
	DB	0afH
	DB	07fH
	DB	03H
	DB	0ceH
$SG61393 DB	'b', 00H, 'g', 00H, '-', 00H, 'B', 00H, 'G', 00H, 00H, 00H
$SG61394 DB	'c', 00H, 'a', 00H, '-', 00H, 'E', 00H, 'S', 00H, 00H, 00H
$SG61395 DB	'z', 00H, 'h', 00H, '-', 00H, 'T', 00H, 'W', 00H, 00H, 00H
$SG61396 DB	'c', 00H, 's', 00H, '-', 00H, 'C', 00H, 'Z', 00H, 00H, 00H
$SG61397 DB	'd', 00H, 'a', 00H, '-', 00H, 'D', 00H, 'K', 00H, 00H, 00H
$SG61398 DB	'd', 00H, 'e', 00H, '-', 00H, 'D', 00H, 'E', 00H, 00H, 00H
$SG61399 DB	'e', 00H, 'l', 00H, '-', 00H, 'G', 00H, 'R', 00H, 00H, 00H
$SG61400 DB	'e', 00H, 'n', 00H, '-', 00H, 'U', 00H, 'S', 00H, 00H, 00H
$SG61401 DB	'f', 00H, 'i', 00H, '-', 00H, 'F', 00H, 'I', 00H, 00H, 00H
$SG61402 DB	'f', 00H, 'r', 00H, '-', 00H, 'F', 00H, 'R', 00H, 00H, 00H
$SG61403 DB	'h', 00H, 'e', 00H, '-', 00H, 'I', 00H, 'L', 00H, 00H, 00H
$SG61404 DB	'h', 00H, 'u', 00H, '-', 00H, 'H', 00H, 'U', 00H, 00H, 00H
$SG61405 DB	'i', 00H, 's', 00H, '-', 00H, 'I', 00H, 'S', 00H, 00H, 00H
$SG61406 DB	'i', 00H, 't', 00H, '-', 00H, 'I', 00H, 'T', 00H, 00H, 00H
$SG61407 DB	'j', 00H, 'a', 00H, '-', 00H, 'J', 00H, 'P', 00H, 00H, 00H
$SG61408 DB	'k', 00H, 'o', 00H, '-', 00H, 'K', 00H, 'R', 00H, 00H, 00H
$SG61409 DB	'n', 00H, 'l', 00H, '-', 00H, 'N', 00H, 'L', 00H, 00H, 00H
$SG61410 DB	'n', 00H, 'b', 00H, '-', 00H, 'N', 00H, 'O', 00H, 00H, 00H
?IID_IAsynchronismEngine@@3U_GUID@@B DD 0e03ad33dH	; IID_IAsynchronismEngine
	DW	0b285H
	DW	048eaH
	DB	086H
	DB	070H
	DB	0aH
	DB	095H
	DB	055H
	DB	092H
	DB	07H
	DB	0e1H
$SG61411 DB	'p', 00H, 'l', 00H, '-', 00H, 'P', 00H, 'L', 00H, 00H, 00H
$SG61412 DB	'p', 00H, 't', 00H, '-', 00H, 'B', 00H, 'R', 00H, 00H, 00H
$SG61413 DB	'r', 00H, 'o', 00H, '-', 00H, 'R', 00H, 'O', 00H, 00H, 00H
$SG61414 DB	'r', 00H, 'u', 00H, '-', 00H, 'R', 00H, 'U', 00H, 00H, 00H
$SG61415 DB	'h', 00H, 'r', 00H, '-', 00H, 'H', 00H, 'R', 00H, 00H, 00H
$SG61416 DB	's', 00H, 'k', 00H, '-', 00H, 'S', 00H, 'K', 00H, 00H, 00H
$SG61417 DB	's', 00H, 'q', 00H, '-', 00H, 'A', 00H, 'L', 00H, 00H, 00H
$SG61418 DB	's', 00H, 'v', 00H, '-', 00H, 'S', 00H, 'E', 00H, 00H, 00H
$SG61419 DB	't', 00H, 'h', 00H, '-', 00H, 'T', 00H, 'H', 00H, 00H, 00H
$SG61420 DB	't', 00H, 'r', 00H, '-', 00H, 'T', 00H, 'R', 00H, 00H, 00H
$SG61421 DB	'u', 00H, 'r', 00H, '-', 00H, 'P', 00H, 'K', 00H, 00H, 00H
$SG61422 DB	'i', 00H, 'd', 00H, '-', 00H, 'I', 00H, 'D', 00H, 00H, 00H
$SG61423 DB	'u', 00H, 'k', 00H, '-', 00H, 'U', 00H, 'A', 00H, 00H, 00H
$SG61424 DB	'b', 00H, 'e', 00H, '-', 00H, 'B', 00H, 'Y', 00H, 00H, 00H
$SG61425 DB	's', 00H, 'l', 00H, '-', 00H, 'S', 00H, 'I', 00H, 00H, 00H
$SG61426 DB	'e', 00H, 't', 00H, '-', 00H, 'E', 00H, 'E', 00H, 00H, 00H
$SG61427 DB	'l', 00H, 'v', 00H, '-', 00H, 'L', 00H, 'V', 00H, 00H, 00H
$SG61428 DB	'l', 00H, 't', 00H, '-', 00H, 'L', 00H, 'T', 00H, 00H, 00H
$SG61429 DB	'f', 00H, 'a', 00H, '-', 00H, 'I', 00H, 'R', 00H, 00H, 00H
$SG61430 DB	'v', 00H, 'i', 00H, '-', 00H, 'V', 00H, 'N', 00H, 00H, 00H
$SG61431 DB	'h', 00H, 'y', 00H, '-', 00H, 'A', 00H, 'M', 00H, 00H, 00H
$SG61432 DB	'a', 00H, 'z', 00H, '-', 00H, 'A', 00H, 'Z', 00H, '-', 00H
	DB	'L', 00H, 'a', 00H, 't', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG61433 DB	'e', 00H, 'u', 00H, '-', 00H, 'E', 00H, 'S', 00H, 00H, 00H
$SG61434 DB	'm', 00H, 'k', 00H, '-', 00H, 'M', 00H, 'K', 00H, 00H, 00H
$SG61435 DB	't', 00H, 'n', 00H, '-', 00H, 'Z', 00H, 'A', 00H, 00H, 00H
$SG61436 DB	'x', 00H, 'h', 00H, '-', 00H, 'Z', 00H, 'A', 00H, 00H, 00H
$SG61437 DB	'z', 00H, 'u', 00H, '-', 00H, 'Z', 00H, 'A', 00H, 00H, 00H
$SG60413 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'N', 00H, 'o', 00H, 't', 00H, 'I', 00H, 'm'
	DB	00H, 'p', 00H, 'l', 00H, 00H, 00H
$SG61438 DB	'a', 00H, 'f', 00H, '-', 00H, 'Z', 00H, 'A', 00H, 00H, 00H
$SG61439 DB	'k', 00H, 'a', 00H, '-', 00H, 'G', 00H, 'E', 00H, 00H, 00H
CONST	ENDS
PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	_HRESULT_FROM_WIN32
PUBLIC	??$AtlMultiply@I@ATL@@YAJPAIII@Z		; ATL::AtlMultiply<unsigned int>
PUBLIC	??$AtlMultiply@K@ATL@@YAJPAKKK@Z		; ATL::AtlMultiply<unsigned long>
PUBLIC	??$AtlAdd@K@ATL@@YAJPAKKK@Z			; ATL::AtlAdd<unsigned long>
PUBLIC	??0?$CTraceCategoryEx@$0IAAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<524288,0>::CTraceCategoryEx<524288,0>
PUBLIC	??0?$CTraceCategoryEx@$00$0A@@ATL@@QAE@PB_W@Z	; ATL::CTraceCategoryEx<1,0>::CTraceCategoryEx<1,0>
PUBLIC	??0?$CTraceCategoryEx@$01$0A@@ATL@@QAE@PB_W@Z	; ATL::CTraceCategoryEx<2,0>::CTraceCategoryEx<2,0>
PUBLIC	??0?$CTraceCategoryEx@$03$0A@@ATL@@QAE@PB_W@Z	; ATL::CTraceCategoryEx<4,0>::CTraceCategoryEx<4,0>
PUBLIC	??0?$CTraceCategoryEx@$07$0A@@ATL@@QAE@PB_W@Z	; ATL::CTraceCategoryEx<8,0>::CTraceCategoryEx<8,0>
PUBLIC	??0?$CTraceCategoryEx@$0BA@$0A@@ATL@@QAE@PB_W@Z	; ATL::CTraceCategoryEx<16,0>::CTraceCategoryEx<16,0>
PUBLIC	??0?$CTraceCategoryEx@$0CA@$0A@@ATL@@QAE@PB_W@Z	; ATL::CTraceCategoryEx<32,0>::CTraceCategoryEx<32,0>
PUBLIC	??0?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAE@PB_W@Z	; ATL::CTraceCategoryEx<64,0>::CTraceCategoryEx<64,0>
PUBLIC	??0?$CTraceCategoryEx@$0IA@$0A@@ATL@@QAE@PB_W@Z	; ATL::CTraceCategoryEx<128,0>::CTraceCategoryEx<128,0>
PUBLIC	??0?$CTraceCategoryEx@$0BAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<256,0>::CTraceCategoryEx<256,0>
PUBLIC	??0?$CTraceCategoryEx@$0CAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<512,0>::CTraceCategoryEx<512,0>
PUBLIC	??0?$CTraceCategoryEx@$0EAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<1024,0>::CTraceCategoryEx<1024,0>
PUBLIC	??0?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<2048,0>::CTraceCategoryEx<2048,0>
PUBLIC	??0?$CTraceCategoryEx@$0BAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<4096,0>::CTraceCategoryEx<4096,0>
PUBLIC	??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>
PUBLIC	??0?$CTraceCategoryEx@$0EAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<16384,0>::CTraceCategoryEx<16384,0>
PUBLIC	??0?$CTraceCategoryEx@$0IAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<32768,0>::CTraceCategoryEx<32768,0>
PUBLIC	??0?$CTraceCategoryEx@$0BAAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<65536,0>::CTraceCategoryEx<65536,0>
PUBLIC	??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<131072,0>::CTraceCategoryEx<131072,0>
PUBLIC	??0?$CTraceCategoryEx@$0EAAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<262144,0>::CTraceCategoryEx<262144,0>
PUBLIC	??0?$CTraceCategoryEx@$0BAAAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<1048576,0>::CTraceCategoryEx<1048576,0>
PUBLIC	??0?$CTraceCategoryEx@$0CAAAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<2097152,0>::CTraceCategoryEx<2097152,0>
PUBLIC	??0?$CTraceCategoryEx@$0EAAAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<4194304,0>::CTraceCategoryEx<4194304,0>
PUBLIC	?_AtlRaiseException@ATL@@YAXKK@Z		; ATL::_AtlRaiseException
PUBLIC	?_AtlInitializeCriticalSectionEx@ATL@@YAHPAU_RTL_CRITICAL_SECTION@@KK@Z ; ATL::_AtlInitializeCriticalSectionEx
PUBLIC	??0CComCriticalSection@ATL@@QAE@XZ		; ATL::CComCriticalSection::CComCriticalSection
PUBLIC	??1CComCriticalSection@ATL@@QAE@XZ		; ATL::CComCriticalSection::~CComCriticalSection
PUBLIC	?Init@CComCriticalSection@ATL@@QAEJXZ		; ATL::CComCriticalSection::Init
PUBLIC	?Term@CComCriticalSection@ATL@@QAEJXZ		; ATL::CComCriticalSection::Term
PUBLIC	?GetModuleInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ ; ATL::CAtlBaseModule::GetModuleInstance
PUBLIC	??0CWin32Heap@ATL@@QAE@PAX@Z			; ATL::CWin32Heap::CWin32Heap
PUBLIC	??1CWin32Heap@ATL@@UAE@XZ			; ATL::CWin32Heap::~CWin32Heap
PUBLIC	?Allocate@CWin32Heap@ATL@@UAEPAXI@Z		; ATL::CWin32Heap::Allocate
PUBLIC	?Free@CWin32Heap@ATL@@UAEXPAX@Z			; ATL::CWin32Heap::Free
PUBLIC	?Reallocate@CWin32Heap@ATL@@UAEPAXPAXI@Z	; ATL::CWin32Heap::Reallocate
PUBLIC	?GetSize@CWin32Heap@ATL@@UAEIPAX@Z		; ATL::CWin32Heap::GetSize
PUBLIC	??_GCWin32Heap@ATL@@UAEPAXI@Z			; ATL::CWin32Heap::`scalar deleting destructor'
PUBLIC	??$AtlAdd@I@ATL@@YAJPAIII@Z			; ATL::AtlAdd<unsigned int>
PUBLIC	??$AtlAdd@H@ATL@@YAJPAHHH@Z			; ATL::AtlAdd<int>
PUBLIC	?AddRef@CStringData@ATL@@QAEXXZ			; ATL::CStringData::AddRef
PUBLIC	??0CNilStringData@ATL@@QAE@XZ			; ATL::CNilStringData::CNilStringData
PUBLIC	?SetManager@CNilStringData@ATL@@QAEXPAUIAtlStringMgr@2@@Z ; ATL::CNilStringData::SetManager
PUBLIC	??0_ATL_COM_MODULE70@ATL@@QAE@XZ		; ATL::_ATL_COM_MODULE70::_ATL_COM_MODULE70
PUBLIC	??1_ATL_COM_MODULE70@ATL@@QAE@XZ		; ATL::_ATL_COM_MODULE70::~_ATL_COM_MODULE70
PUBLIC	??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
PUBLIC	??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::~CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
PUBLIC	?GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QBEHXZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::GetSize
PUBLIC	?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXXZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::RemoveAll
PUBLIC	??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEAAGH@Z ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::operator[]
PUBLIC	??0_ATL_WIN_MODULE70@ATL@@QAE@XZ		; ATL::_ATL_WIN_MODULE70::_ATL_WIN_MODULE70
PUBLIC	??1_ATL_WIN_MODULE70@ATL@@QAE@XZ		; ATL::_ATL_WIN_MODULE70::~_ATL_WIN_MODULE70
PUBLIC	?AtlWinModuleInit@ATL@@YGJPAU_ATL_WIN_MODULE70@1@@Z ; ATL::AtlWinModuleInit
PUBLIC	?AtlWinModuleTerm@ATL@@YGJPAU_ATL_WIN_MODULE70@1@PAUHINSTANCE__@@@Z ; ATL::AtlWinModuleTerm
PUBLIC	??0CAtlComModule@ATL@@QAE@XZ			; ATL::CAtlComModule::CAtlComModule
PUBLIC	??1CAtlComModule@ATL@@QAE@XZ			; ATL::CAtlComModule::~CAtlComModule
PUBLIC	?Term@CAtlComModule@ATL@@QAEXXZ			; ATL::CAtlComModule::Term
PUBLIC	??0CAtlWinModule@ATL@@QAE@XZ			; ATL::CAtlWinModule::CAtlWinModule
PUBLIC	??1CAtlWinModule@ATL@@QAE@XZ			; ATL::CAtlWinModule::~CAtlWinModule
PUBLIC	?Term@CAtlWinModule@ATL@@QAEXXZ			; ATL::CAtlWinModule::Term
PUBLIC	??0CAtlStringMgr@ATL@@QAE@PAUIAtlMemMgr@1@@Z	; ATL::CAtlStringMgr::CAtlStringMgr
PUBLIC	??1CAtlStringMgr@ATL@@UAE@XZ			; ATL::CAtlStringMgr::~CAtlStringMgr
PUBLIC	?GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@2@XZ ; ATL::CAtlStringMgr::GetInstance
PUBLIC	?Allocate@CAtlStringMgr@ATL@@UAEPAUCStringData@2@HH@Z ; ATL::CAtlStringMgr::Allocate
PUBLIC	?Free@CAtlStringMgr@ATL@@UAEXPAUCStringData@2@@Z ; ATL::CAtlStringMgr::Free
PUBLIC	?Reallocate@CAtlStringMgr@ATL@@UAEPAUCStringData@2@PAU32@HH@Z ; ATL::CAtlStringMgr::Reallocate
PUBLIC	?GetNilString@CAtlStringMgr@ATL@@UAEPAUCStringData@2@XZ ; ATL::CAtlStringMgr::GetNilString
PUBLIC	?Clone@CAtlStringMgr@ATL@@UAEPAUIAtlStringMgr@2@XZ ; ATL::CAtlStringMgr::Clone
PUBLIC	?StaticInitialize@CAtlStringMgr@ATL@@CA_NXZ	; ATL::CAtlStringMgr::StaticInitialize
PUBLIC	??_GCAtlStringMgr@ATL@@UAEPAXI@Z		; ATL::CAtlStringMgr::`scalar deleting destructor'
PUBLIC	??__FstrHeap@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@2@XZ@YAXXZ ; `ATL::CAtlStringMgr::GetInstance'::`2'::`dynamic atexit destructor for 'strHeap''
PUBLIC	??__FstrMgr@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@2@XZ@YAXXZ ; `ATL::CAtlStringMgr::GetInstance'::`2'::`dynamic atexit destructor for 'strMgr''
PUBLIC	??$AtlAlignUp@H@ATL@@YGHHK@Z			; ATL::AtlAlignUp<int>
PUBLIC	??0CDCCache@CImage@ATL@@QAE@XZ			; ATL::CImage::CDCCache::CDCCache
PUBLIC	??1CDCCache@CImage@ATL@@QAE@XZ			; ATL::CImage::CDCCache::~CDCCache
PUBLIC	??0CInitGDIPlus@CImage@ATL@@QAE@XZ		; ATL::CImage::CInitGDIPlus::CInitGDIPlus
PUBLIC	??1CInitGDIPlus@CImage@ATL@@QAE@XZ		; ATL::CImage::CInitGDIPlus::~CInitGDIPlus
PUBLIC	?ReleaseGDIPlus@CInitGDIPlus@CImage@ATL@@QAEXXZ	; ATL::CImage::CInitGDIPlus::ReleaseGDIPlus
PUBLIC	?GetInitGDIPlusInstance@CImage@ATL@@CAPAVCInitGDIPlus@12@XZ ; ATL::CImage::GetInitGDIPlusInstance
PUBLIC	?GetCDCCacheInstance@CImage@ATL@@CAPAVCDCCache@12@XZ ; ATL::CImage::GetCDCCacheInstance
PUBLIC	?CImageStaticInitialize@CImage@ATL@@CA_NXZ	; ATL::CImage::CImageStaticInitialize
PUBLIC	??__FgdiPlus@?1??GetInitGDIPlusInstance@CImage@ATL@@CAPAVCInitGDIPlus@12@XZ@YAXXZ ; `ATL::CImage::GetInitGDIPlusInstance'::`2'::`dynamic atexit destructor for 'gdiPlus''
PUBLIC	??__Fcache@?1??GetCDCCacheInstance@CImage@ATL@@CAPAVCDCCache@12@XZ@YAXXZ ; `ATL::CImage::GetCDCCacheInstance'::`2'::`dynamic atexit destructor for 'cache''
PUBLIC	?atlTraceGeneral@ATL@@3V?$CTraceCategoryEx@$00$0A@@1@A ; ATL::atlTraceGeneral
PUBLIC	?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A ; ATL::atlTraceCOM
PUBLIC	?atlTraceQI@ATL@@3V?$CTraceCategoryEx@$03$0A@@1@A ; ATL::atlTraceQI
PUBLIC	?atlTraceRegistrar@ATL@@3V?$CTraceCategoryEx@$07$0A@@1@A ; ATL::atlTraceRegistrar
PUBLIC	?atlTraceRefcount@ATL@@3V?$CTraceCategoryEx@$0BA@$0A@@1@A ; ATL::atlTraceRefcount
PUBLIC	?atlTraceWindowing@ATL@@3V?$CTraceCategoryEx@$0CA@$0A@@1@A ; ATL::atlTraceWindowing
PUBLIC	?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
PUBLIC	?atlTraceHosting@ATL@@3V?$CTraceCategoryEx@$0IA@$0A@@1@A ; ATL::atlTraceHosting
PUBLIC	?atlTraceDBClient@ATL@@3V?$CTraceCategoryEx@$0BAA@$0A@@1@A ; ATL::atlTraceDBClient
PUBLIC	?atlTraceDBProvider@ATL@@3V?$CTraceCategoryEx@$0CAA@$0A@@1@A ; ATL::atlTraceDBProvider
PUBLIC	?atlTraceSnapin@ATL@@3V?$CTraceCategoryEx@$0EAA@$0A@@1@A ; ATL::atlTraceSnapin
PUBLIC	?atlTraceNotImpl@ATL@@3V?$CTraceCategoryEx@$0IAA@$0A@@1@A ; ATL::atlTraceNotImpl
PUBLIC	?atlTraceAllocation@ATL@@3V?$CTraceCategoryEx@$0BAAA@$0A@@1@A ; ATL::atlTraceAllocation
PUBLIC	?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A ; ATL::atlTraceException
PUBLIC	?atlTraceTime@ATL@@3V?$CTraceCategoryEx@$0EAAA@$0A@@1@A ; ATL::atlTraceTime
PUBLIC	?atlTraceCache@ATL@@3V?$CTraceCategoryEx@$0IAAA@$0A@@1@A ; ATL::atlTraceCache
PUBLIC	?atlTraceStencil@ATL@@3V?$CTraceCategoryEx@$0BAAAA@$0A@@1@A ; ATL::atlTraceStencil
PUBLIC	?atlTraceString@ATL@@3V?$CTraceCategoryEx@$0CAAAA@$0A@@1@A ; ATL::atlTraceString
PUBLIC	?atlTraceMap@ATL@@3V?$CTraceCategoryEx@$0EAAAA@$0A@@1@A ; ATL::atlTraceMap
PUBLIC	?atlTraceUtil@ATL@@3V?$CTraceCategoryEx@$0IAAAA@$0A@@1@A ; ATL::atlTraceUtil
PUBLIC	?atlTraceSecurity@ATL@@3V?$CTraceCategoryEx@$0BAAAAA@$0A@@1@A ; ATL::atlTraceSecurity
PUBLIC	?atlTraceSync@ATL@@3V?$CTraceCategoryEx@$0CAAAAA@$0A@@1@A ; ATL::atlTraceSync
PUBLIC	?atlTraceISAPI@ATL@@3V?$CTraceCategoryEx@$0EAAAAA@$0A@@1@A ; ATL::atlTraceISAPI
PUBLIC	?m_bInitFailed@CAtlBaseModule@ATL@@2_NA		; ATL::CAtlBaseModule::m_bInitFailed
PUBLIC	??_7CWin32Heap@ATL@@6B@				; ATL::CWin32Heap::`vftable'
PUBLIC	?_AtlComModule@ATL@@3VCAtlComModule@1@A		; ATL::_AtlComModule
PUBLIC	?_AtlWinModule@ATL@@3VCAtlWinModule@1@A		; ATL::_AtlWinModule
PUBLIC	?isInitialized@CAtlStringMgr@ATL@@0_NA		; ATL::CAtlStringMgr::isInitialized
PUBLIC	??_7CAtlStringMgr@ATL@@6B@			; ATL::CAtlStringMgr::`vftable'
PUBLIC	?strHeap@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4VCWin32Heap@3@A ; `ATL::CAtlStringMgr::GetInstance'::`2'::strHeap
PUBLIC	?$TSS0@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4HA ; TSS0<`template-parameter-2',ATL::CAtlStringMgr::tInstance,ATL::IAtlStringMgr * * const volatile,void,int, ?? &>
PUBLIC	?strMgr@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4V23@A ; `ATL::CAtlStringMgr::GetInstance'::`2'::strMgr
PUBLIC	?$TSS1@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4HA ; TSS1<`template-parameter-2',ATL::CAtlStringMgr::tInstance,ATL::IAtlStringMgr * * const volatile,void,int, ?? &>
PUBLIC	?isCImageStaticInitialized@CImage@ATL@@0_NA	; ATL::CImage::isCImageStaticInitialized
PUBLIC	?gdiPlus@?1??GetInitGDIPlusInstance@CImage@ATL@@CAPAVCInitGDIPlus@23@XZ@4V423@A ; `ATL::CImage::GetInitGDIPlusInstance'::`2'::gdiPlus
PUBLIC	?$TSS0@?1??GetInitGDIPlusInstance@CImage@ATL@@CAPAVCInitGDIPlus@23@XZ@4HA ; TSS0<`template-parameter-2',ATL::CImage::tInitGDIPlusInstance,signed char,ATL::CImage::CInitGDIPlus const volatile __based() &,void,int, ?? &>
PUBLIC	?cache@?1??GetCDCCacheInstance@CImage@ATL@@CAPAVCDCCache@23@XZ@4V423@A ; `ATL::CImage::GetCDCCacheInstance'::`2'::cache
PUBLIC	?$TSS0@?1??GetCDCCacheInstance@CImage@ATL@@CAPAVCDCCache@23@XZ@4HA ; TSS0<`template-parameter-2',ATL::CImage::tCDCCacheInstance,signed char,ATL::CImage::CDCCache const volatile __based() &,void,int, ?? &>
PUBLIC	??_R4CWin32Heap@ATL@@6B@			; ATL::CWin32Heap::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCWin32Heap@ATL@@@8			; ATL::CWin32Heap `RTTI Type Descriptor'
PUBLIC	??_R3CWin32Heap@ATL@@8				; ATL::CWin32Heap::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CWin32Heap@ATL@@8				; ATL::CWin32Heap::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CWin32Heap@ATL@@8			; ATL::CWin32Heap::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@IAtlMemMgr@ATL@@8			; ATL::IAtlMemMgr::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIAtlMemMgr@ATL@@@8			; ATL::IAtlMemMgr `RTTI Type Descriptor'
PUBLIC	??_R3IAtlMemMgr@ATL@@8				; ATL::IAtlMemMgr::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IAtlMemMgr@ATL@@8				; ATL::IAtlMemMgr::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IAtlStringMgr@ATL@@8		; ATL::IAtlStringMgr::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIAtlStringMgr@ATL@@@8			; ATL::IAtlStringMgr `RTTI Type Descriptor'
PUBLIC	??_R3IAtlStringMgr@ATL@@8			; ATL::IAtlStringMgr::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IAtlStringMgr@ATL@@8			; ATL::IAtlStringMgr::`RTTI Base Class Array'
PUBLIC	??_R4CAtlStringMgr@ATL@@6B@			; ATL::CAtlStringMgr::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCAtlStringMgr@ATL@@@8			; ATL::CAtlStringMgr `RTTI Type Descriptor'
PUBLIC	??_R3CAtlStringMgr@ATL@@8			; ATL::CAtlStringMgr::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CAtlStringMgr@ATL@@8			; ATL::CAtlStringMgr::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CAtlStringMgr@ATL@@8		; ATL::CAtlStringMgr::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	__Init_thread_header:PROC
EXTRN	__Init_thread_footer:PROC
EXTRN	_memset:PROC
EXTRN	__imp__DecodePointer@4:PROC
EXTRN	__imp__RaiseException@16:PROC
EXTRN	__imp__GetLastError@0:PROC
EXTRN	__imp__HeapDestroy@4:PROC
EXTRN	__imp__HeapAlloc@12:PROC
EXTRN	__imp__HeapReAlloc@16:PROC
EXTRN	__imp__HeapFree@12:PROC
EXTRN	__imp__HeapSize@12:PROC
EXTRN	__imp__GetProcessHeap@0:PROC
EXTRN	__imp__EnterCriticalSection@4:PROC
EXTRN	__imp__LeaveCriticalSection@4:PROC
EXTRN	__imp__InitializeCriticalSectionAndSpinCount@8:PROC
EXTRN	__imp__DeleteCriticalSection@4:PROC
EXTRN	__imp__DeleteDC@4:PROC
EXTRN	__imp__UnregisterClassW@8:PROC
EXTRN	__imp__free:PROC
EXTRN	??_ECWin32Heap@ATL@@UAEPAXI@Z:PROC		; ATL::CWin32Heap::`vector deleting destructor'
EXTRN	??_ECAtlStringMgr@ATL@@UAEPAXI@Z:PROC		; ATL::CAtlStringMgr::`vector deleting destructor'
EXTRN	_GdiplusShutdown@4:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__Init_thread_epoch:DWORD
EXTRN	?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A:BYTE	; ATL::_AtlBaseModule
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___ImageBase:BYTE
EXTRN	___security_cookie:DWORD
EXTRN	__tls_array:DWORD
EXTRN	__tls_index:DWORD
;	COMDAT ?atlTraceGeneral@ATL@@3V?$CTraceCategoryEx@$00$0A@@1@A
_BSS	SEGMENT
?atlTraceGeneral@ATL@@3V?$CTraceCategoryEx@$00$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceGeneral
_BSS	ENDS
;	COMDAT ?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A
_BSS	SEGMENT
?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceCOM
_BSS	ENDS
;	COMDAT ?atlTraceQI@ATL@@3V?$CTraceCategoryEx@$03$0A@@1@A
_BSS	SEGMENT
?atlTraceQI@ATL@@3V?$CTraceCategoryEx@$03$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceQI
_BSS	ENDS
;	COMDAT ?atlTraceRegistrar@ATL@@3V?$CTraceCategoryEx@$07$0A@@1@A
_BSS	SEGMENT
?atlTraceRegistrar@ATL@@3V?$CTraceCategoryEx@$07$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceRegistrar
_BSS	ENDS
;	COMDAT ?atlTraceRefcount@ATL@@3V?$CTraceCategoryEx@$0BA@$0A@@1@A
_BSS	SEGMENT
?atlTraceRefcount@ATL@@3V?$CTraceCategoryEx@$0BA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceRefcount
_BSS	ENDS
;	COMDAT ?atlTraceWindowing@ATL@@3V?$CTraceCategoryEx@$0CA@$0A@@1@A
_BSS	SEGMENT
?atlTraceWindowing@ATL@@3V?$CTraceCategoryEx@$0CA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceWindowing
_BSS	ENDS
;	COMDAT ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A
_BSS	SEGMENT
?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceControls
_BSS	ENDS
;	COMDAT ?atlTraceHosting@ATL@@3V?$CTraceCategoryEx@$0IA@$0A@@1@A
_BSS	SEGMENT
?atlTraceHosting@ATL@@3V?$CTraceCategoryEx@$0IA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceHosting
_BSS	ENDS
;	COMDAT ?atlTraceDBClient@ATL@@3V?$CTraceCategoryEx@$0BAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceDBClient@ATL@@3V?$CTraceCategoryEx@$0BAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceDBClient
_BSS	ENDS
;	COMDAT ?atlTraceDBProvider@ATL@@3V?$CTraceCategoryEx@$0CAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceDBProvider@ATL@@3V?$CTraceCategoryEx@$0CAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceDBProvider
_BSS	ENDS
;	COMDAT ?atlTraceSnapin@ATL@@3V?$CTraceCategoryEx@$0EAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceSnapin@ATL@@3V?$CTraceCategoryEx@$0EAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceSnapin
_BSS	ENDS
;	COMDAT ?atlTraceNotImpl@ATL@@3V?$CTraceCategoryEx@$0IAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceNotImpl@ATL@@3V?$CTraceCategoryEx@$0IAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceNotImpl
_BSS	ENDS
;	COMDAT ?atlTraceAllocation@ATL@@3V?$CTraceCategoryEx@$0BAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceAllocation@ATL@@3V?$CTraceCategoryEx@$0BAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceAllocation
_BSS	ENDS
;	COMDAT ?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceException
_BSS	ENDS
;	COMDAT ?atlTraceTime@ATL@@3V?$CTraceCategoryEx@$0EAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceTime@ATL@@3V?$CTraceCategoryEx@$0EAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceTime
_BSS	ENDS
;	COMDAT ?atlTraceCache@ATL@@3V?$CTraceCategoryEx@$0IAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceCache@ATL@@3V?$CTraceCategoryEx@$0IAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceCache
_BSS	ENDS
;	COMDAT ?atlTraceStencil@ATL@@3V?$CTraceCategoryEx@$0BAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceStencil@ATL@@3V?$CTraceCategoryEx@$0BAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceStencil
_BSS	ENDS
;	COMDAT ?atlTraceString@ATL@@3V?$CTraceCategoryEx@$0CAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceString@ATL@@3V?$CTraceCategoryEx@$0CAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceString
_BSS	ENDS
;	COMDAT ?atlTraceMap@ATL@@3V?$CTraceCategoryEx@$0EAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceMap@ATL@@3V?$CTraceCategoryEx@$0EAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceMap
_BSS	ENDS
;	COMDAT ?atlTraceUtil@ATL@@3V?$CTraceCategoryEx@$0IAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceUtil@ATL@@3V?$CTraceCategoryEx@$0IAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceUtil
_BSS	ENDS
;	COMDAT ?atlTraceSecurity@ATL@@3V?$CTraceCategoryEx@$0BAAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceSecurity@ATL@@3V?$CTraceCategoryEx@$0BAAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceSecurity
_BSS	ENDS
;	COMDAT ?atlTraceSync@ATL@@3V?$CTraceCategoryEx@$0CAAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceSync@ATL@@3V?$CTraceCategoryEx@$0CAAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceSync
_BSS	ENDS
;	COMDAT ?atlTraceISAPI@ATL@@3V?$CTraceCategoryEx@$0EAAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceISAPI@ATL@@3V?$CTraceCategoryEx@$0EAAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceISAPI
_BSS	ENDS
;	COMDAT ?m_bInitFailed@CAtlBaseModule@ATL@@2_NA
_BSS	SEGMENT
?m_bInitFailed@CAtlBaseModule@ATL@@2_NA DB 01H DUP (?)	; ATL::CAtlBaseModule::m_bInitFailed
_BSS	ENDS
;	COMDAT ?_AtlComModule@ATL@@3VCAtlComModule@1@A
_BSS	SEGMENT
?_AtlComModule@ATL@@3VCAtlComModule@1@A DB 028H DUP (?)	; ATL::_AtlComModule
_BSS	ENDS
;	COMDAT ?_AtlWinModule@ATL@@3VCAtlWinModule@1@A
_BSS	SEGMENT
?_AtlWinModule@ATL@@3VCAtlWinModule@1@A DB 02cH DUP (?)	; ATL::_AtlWinModule
_BSS	ENDS
;	COMDAT ?isInitialized@CAtlStringMgr@ATL@@0_NA
_BSS	SEGMENT
?isInitialized@CAtlStringMgr@ATL@@0_NA DB 01H DUP (?)	; ATL::CAtlStringMgr::isInitialized
_BSS	ENDS
;	COMDAT ?strHeap@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4VCWin32Heap@3@A
_BSS	SEGMENT
?strHeap@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4VCWin32Heap@3@A DB 0cH DUP (?) ; `ATL::CAtlStringMgr::GetInstance'::`2'::strHeap
_BSS	ENDS
;	COMDAT ?$TSS0@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4HA
_BSS	SEGMENT
?$TSS0@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4HA DD 01H DUP (?) ; TSS0<`template-parameter-2',ATL::CAtlStringMgr::tInstance,ATL::IAtlStringMgr * * const volatile,void,int, ?? &>
_BSS	ENDS
;	COMDAT ?strMgr@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4V23@A
_BSS	SEGMENT
?strMgr@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4V23@A DB 01cH DUP (?) ; `ATL::CAtlStringMgr::GetInstance'::`2'::strMgr
_BSS	ENDS
;	COMDAT ?$TSS1@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4HA
_BSS	SEGMENT
?$TSS1@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4HA DD 01H DUP (?) ; TSS1<`template-parameter-2',ATL::CAtlStringMgr::tInstance,ATL::IAtlStringMgr * * const volatile,void,int, ?? &>
_BSS	ENDS
;	COMDAT ?isCImageStaticInitialized@CImage@ATL@@0_NA
_BSS	SEGMENT
?isCImageStaticInitialized@CImage@ATL@@0_NA DB 01H DUP (?) ; ATL::CImage::isCImageStaticInitialized
_BSS	ENDS
;	COMDAT ?gdiPlus@?1??GetInitGDIPlusInstance@CImage@ATL@@CAPAVCInitGDIPlus@23@XZ@4V423@A
_BSS	SEGMENT
?gdiPlus@?1??GetInitGDIPlusInstance@CImage@ATL@@CAPAVCInitGDIPlus@23@XZ@4V423@A DB 024H DUP (?) ; `ATL::CImage::GetInitGDIPlusInstance'::`2'::gdiPlus
_BSS	ENDS
;	COMDAT ?$TSS0@?1??GetInitGDIPlusInstance@CImage@ATL@@CAPAVCInitGDIPlus@23@XZ@4HA
_BSS	SEGMENT
?$TSS0@?1??GetInitGDIPlusInstance@CImage@ATL@@CAPAVCInitGDIPlus@23@XZ@4HA DD 01H DUP (?) ; TSS0<`template-parameter-2',ATL::CImage::tInitGDIPlusInstance,signed char,ATL::CImage::CInitGDIPlus const volatile __based() &,void,int, ?? &>
_BSS	ENDS
;	COMDAT ?cache@?1??GetCDCCacheInstance@CImage@ATL@@CAPAVCDCCache@23@XZ@4V423@A
_BSS	SEGMENT
?cache@?1??GetCDCCacheInstance@CImage@ATL@@CAPAVCDCCache@23@XZ@4V423@A DB 010H DUP (?) ; `ATL::CImage::GetCDCCacheInstance'::`2'::cache
_BSS	ENDS
;	COMDAT ?$TSS0@?1??GetCDCCacheInstance@CImage@ATL@@CAPAVCDCCache@23@XZ@4HA
_BSS	SEGMENT
?$TSS0@?1??GetCDCCacheInstance@CImage@ATL@@CAPAVCDCCache@23@XZ@4HA DD 01H DUP (?) ; TSS0<`template-parameter-2',ATL::CImage::tCDCCacheInstance,signed char,ATL::CImage::CDCCache const volatile __based() &,void,int, ?? &>
_BSS	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceGeneral$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceGeneral@ATL@@YAXXZ ; ATL::atlTraceGeneral$initializer$
CRT$XCU	ENDS
;	COMDAT ??_R1A@?0A@EA@CAtlStringMgr@ATL@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CAtlStringMgr@ATL@@8 DD FLAT:??_R0?AVCAtlStringMgr@ATL@@@8 ; ATL::CAtlStringMgr::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CAtlStringMgr@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R2CAtlStringMgr@ATL@@8
rdata$r	SEGMENT
??_R2CAtlStringMgr@ATL@@8 DD FLAT:??_R1A@?0A@EA@CAtlStringMgr@ATL@@8 ; ATL::CAtlStringMgr::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IAtlStringMgr@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R3CAtlStringMgr@ATL@@8
rdata$r	SEGMENT
??_R3CAtlStringMgr@ATL@@8 DD 00H			; ATL::CAtlStringMgr::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CAtlStringMgr@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCAtlStringMgr@ATL@@@8
data$r	SEGMENT
??_R0?AVCAtlStringMgr@ATL@@@8 DD FLAT:??_7type_info@@6B@ ; ATL::CAtlStringMgr `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCAtlStringMgr@ATL@@', 00H
data$r	ENDS
;	COMDAT ??_R4CAtlStringMgr@ATL@@6B@
rdata$r	SEGMENT
??_R4CAtlStringMgr@ATL@@6B@ DD 00H			; ATL::CAtlStringMgr::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCAtlStringMgr@ATL@@@8
	DD	FLAT:??_R3CAtlStringMgr@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R2IAtlStringMgr@ATL@@8
rdata$r	SEGMENT
??_R2IAtlStringMgr@ATL@@8 DD FLAT:??_R1A@?0A@EA@IAtlStringMgr@ATL@@8 ; ATL::IAtlStringMgr::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3IAtlStringMgr@ATL@@8
rdata$r	SEGMENT
??_R3IAtlStringMgr@ATL@@8 DD 00H			; ATL::IAtlStringMgr::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2IAtlStringMgr@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIAtlStringMgr@ATL@@@8
data$r	SEGMENT
??_R0?AUIAtlStringMgr@ATL@@@8 DD FLAT:??_7type_info@@6B@ ; ATL::IAtlStringMgr `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIAtlStringMgr@ATL@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IAtlStringMgr@ATL@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IAtlStringMgr@ATL@@8 DD FLAT:??_R0?AUIAtlStringMgr@ATL@@@8 ; ATL::IAtlStringMgr::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IAtlStringMgr@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R2IAtlMemMgr@ATL@@8
rdata$r	SEGMENT
??_R2IAtlMemMgr@ATL@@8 DD FLAT:??_R1A@?0A@EA@IAtlMemMgr@ATL@@8 ; ATL::IAtlMemMgr::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3IAtlMemMgr@ATL@@8
rdata$r	SEGMENT
??_R3IAtlMemMgr@ATL@@8 DD 00H				; ATL::IAtlMemMgr::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2IAtlMemMgr@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIAtlMemMgr@ATL@@@8
data$r	SEGMENT
??_R0?AUIAtlMemMgr@ATL@@@8 DD FLAT:??_7type_info@@6B@	; ATL::IAtlMemMgr `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIAtlMemMgr@ATL@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IAtlMemMgr@ATL@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IAtlMemMgr@ATL@@8 DD FLAT:??_R0?AUIAtlMemMgr@ATL@@@8 ; ATL::IAtlMemMgr::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IAtlMemMgr@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CWin32Heap@ATL@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CWin32Heap@ATL@@8 DD FLAT:??_R0?AVCWin32Heap@ATL@@@8 ; ATL::CWin32Heap::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CWin32Heap@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R2CWin32Heap@ATL@@8
rdata$r	SEGMENT
??_R2CWin32Heap@ATL@@8 DD FLAT:??_R1A@?0A@EA@CWin32Heap@ATL@@8 ; ATL::CWin32Heap::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IAtlMemMgr@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R3CWin32Heap@ATL@@8
rdata$r	SEGMENT
??_R3CWin32Heap@ATL@@8 DD 00H				; ATL::CWin32Heap::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CWin32Heap@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCWin32Heap@ATL@@@8
data$r	SEGMENT
??_R0?AVCWin32Heap@ATL@@@8 DD FLAT:??_7type_info@@6B@	; ATL::CWin32Heap `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCWin32Heap@ATL@@', 00H
data$r	ENDS
;	COMDAT ??_R4CWin32Heap@ATL@@6B@
rdata$r	SEGMENT
??_R4CWin32Heap@ATL@@6B@ DD 00H				; ATL::CWin32Heap::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCWin32Heap@ATL@@@8
	DD	FLAT:??_R3CWin32Heap@ATL@@8
rdata$r	ENDS
;	COMDAT ??_7CAtlStringMgr@ATL@@6B@
CONST	SEGMENT
??_7CAtlStringMgr@ATL@@6B@ DD FLAT:??_R4CAtlStringMgr@ATL@@6B@ ; ATL::CAtlStringMgr::`vftable'
	DD	FLAT:?Allocate@CAtlStringMgr@ATL@@UAEPAUCStringData@2@HH@Z
	DD	FLAT:?Free@CAtlStringMgr@ATL@@UAEXPAUCStringData@2@@Z
	DD	FLAT:?Reallocate@CAtlStringMgr@ATL@@UAEPAUCStringData@2@PAU32@HH@Z
	DD	FLAT:?GetNilString@CAtlStringMgr@ATL@@UAEPAUCStringData@2@XZ
	DD	FLAT:?Clone@CAtlStringMgr@ATL@@UAEPAUIAtlStringMgr@2@XZ
	DD	FLAT:??_ECAtlStringMgr@ATL@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7CWin32Heap@ATL@@6B@
CONST	SEGMENT
??_7CWin32Heap@ATL@@6B@ DD FLAT:??_R4CWin32Heap@ATL@@6B@ ; ATL::CWin32Heap::`vftable'
	DD	FLAT:?Allocate@CWin32Heap@ATL@@UAEPAXI@Z
	DD	FLAT:?Free@CWin32Heap@ATL@@UAEXPAX@Z
	DD	FLAT:?Reallocate@CWin32Heap@ATL@@UAEPAXPAXI@Z
	DD	FLAT:?GetSize@CWin32Heap@ATL@@UAEIPAX@Z
	DD	FLAT:??_ECWin32Heap@ATL@@UAEPAXI@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CAtlWinModule@ATL@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CAtlComModule@ATL@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0_ATL_WIN_MODULE70@ATL@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0_ATL_WIN_MODULE70@ATL@@QAE@XZ$0
__ehfuncinfo$??0_ATL_WIN_MODULE70@ATL@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0_ATL_WIN_MODULE70@ATL@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceCOM$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceCOM@ATL@@YAXXZ ; ATL::atlTraceCOM$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceQI$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceQI@ATL@@YAXXZ ; ATL::atlTraceQI$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceRegistrar$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceRegistrar@ATL@@YAXXZ ; ATL::atlTraceRegistrar$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceRefcount$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceRefcount@ATL@@YAXXZ ; ATL::atlTraceRefcount$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceWindowing$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceWindowing@ATL@@YAXXZ ; ATL::atlTraceWindowing$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceControls$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceControls@ATL@@YAXXZ ; ATL::atlTraceControls$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceHosting$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceHosting@ATL@@YAXXZ ; ATL::atlTraceHosting$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceDBClient$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceDBClient@ATL@@YAXXZ ; ATL::atlTraceDBClient$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceDBProvider$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceDBProvider@ATL@@YAXXZ ; ATL::atlTraceDBProvider$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceSnapin$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceSnapin@ATL@@YAXXZ ; ATL::atlTraceSnapin$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceNotImpl$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceNotImpl@ATL@@YAXXZ ; ATL::atlTraceNotImpl$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceAllocation$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceAllocation@ATL@@YAXXZ ; ATL::atlTraceAllocation$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceException$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceException@ATL@@YAXXZ ; ATL::atlTraceException$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceTime$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceTime@ATL@@YAXXZ ; ATL::atlTraceTime$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceCache$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceCache@ATL@@YAXXZ ; ATL::atlTraceCache$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceStencil$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceStencil@ATL@@YAXXZ ; ATL::atlTraceStencil$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceString$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceString@ATL@@YAXXZ ; ATL::atlTraceString$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceMap$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceMap@ATL@@YAXXZ ; ATL::atlTraceMap$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceUtil$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceUtil@ATL@@YAXXZ ; ATL::atlTraceUtil$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceSecurity$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceSecurity@ATL@@YAXXZ ; ATL::atlTraceSecurity$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceSync$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceSync@ATL@@YAXXZ ; ATL::atlTraceSync$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceISAPI$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceISAPI@ATL@@YAXXZ ; ATL::atlTraceISAPI$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_AtlComModule$initializer$@ATL@@3P6AXXZA DD FLAT:??__E_AtlComModule@ATL@@YAXXZ ; ATL::_AtlComModule$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_AtlWinModule$initializer$@ATL@@3P6AXXZA DD FLAT:??__E_AtlWinModule@ATL@@YAXXZ ; ATL::_AtlWinModule$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??isInitialized$initializer$@CAtlStringMgr@ATL@@0P6AXXZA@@3P6AXXZA DD FLAT:??__E?isInitialized@CAtlStringMgr@ATL@@0_NA@@YAXXZ ; ??isInitialized$initializer$@CAtlStringMgr@ATL@@0P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??isCImageStaticInitialized$initializer$@CImage@ATL@@0P6AXXZA@@3P6AXXZA DD FLAT:??__E?isCImageStaticInitialized@CImage@ATL@@0_NA@@YAXXZ ; ??isCImageStaticInitialized$initializer$@CImage@ATL@@0P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atlimage.h
;	COMDAT ??__E?isCImageStaticInitialized@CImage@ATL@@0_NA@@YAXXZ
text$di	SEGMENT
??__E?isCImageStaticInitialized@CImage@ATL@@0_NA@@YAXXZ PROC ; `dynamic initializer for 'ATL::CImage::isCImageStaticInitialized'', COMDAT

; 510  : __declspec(selectany) bool CImage::isCImageStaticInitialized = CImage::CImageStaticInitialize();

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	e8 00 00 00 00	 call	 ?CImageStaticInitialize@CImage@ATL@@CA_NXZ ; ATL::CImage::CImageStaticInitialize
  00008	a2 00 00 00 00	 mov	 BYTE PTR ?isCImageStaticInitialized@CImage@ATL@@0_NA, al ; ATL::CImage::isCImageStaticInitialized
  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??__E?isCImageStaticInitialized@CImage@ATL@@0_NA@@YAXXZ ENDP ; `dynamic initializer for 'ATL::CImage::isCImageStaticInitialized''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__Fcache@?1??GetCDCCacheInstance@CImage@ATL@@CAPAVCDCCache@12@XZ@YAXXZ
text$yd	SEGMENT
??__Fcache@?1??GetCDCCacheInstance@CImage@ATL@@CAPAVCDCCache@12@XZ@YAXXZ PROC ; `ATL::CImage::GetCDCCacheInstance'::`2'::`dynamic atexit destructor for 'cache'', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET ?cache@?1??GetCDCCacheInstance@CImage@ATL@@CAPAVCDCCache@23@XZ@4V423@A ; `ATL::CImage::GetCDCCacheInstance'::`2'::cache
  00008	e8 00 00 00 00	 call	 ??1CDCCache@CImage@ATL@@QAE@XZ ; ATL::CImage::CDCCache::~CDCCache
  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??__Fcache@?1??GetCDCCacheInstance@CImage@ATL@@CAPAVCDCCache@12@XZ@YAXXZ ENDP ; `ATL::CImage::GetCDCCacheInstance'::`2'::`dynamic atexit destructor for 'cache''
text$yd	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__FgdiPlus@?1??GetInitGDIPlusInstance@CImage@ATL@@CAPAVCInitGDIPlus@12@XZ@YAXXZ
text$yd	SEGMENT
??__FgdiPlus@?1??GetInitGDIPlusInstance@CImage@ATL@@CAPAVCInitGDIPlus@12@XZ@YAXXZ PROC ; `ATL::CImage::GetInitGDIPlusInstance'::`2'::`dynamic atexit destructor for 'gdiPlus'', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET ?gdiPlus@?1??GetInitGDIPlusInstance@CImage@ATL@@CAPAVCInitGDIPlus@23@XZ@4V423@A ; `ATL::CImage::GetInitGDIPlusInstance'::`2'::gdiPlus
  00008	e8 00 00 00 00	 call	 ??1CInitGDIPlus@CImage@ATL@@QAE@XZ ; ATL::CImage::CInitGDIPlus::~CInitGDIPlus
  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??__FgdiPlus@?1??GetInitGDIPlusInstance@CImage@ATL@@CAPAVCInitGDIPlus@12@XZ@YAXXZ ENDP ; `ATL::CImage::GetInitGDIPlusInstance'::`2'::`dynamic atexit destructor for 'gdiPlus''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atlimage.h
;	COMDAT ?CImageStaticInitialize@CImage@ATL@@CA_NXZ
_TEXT	SEGMENT
?CImageStaticInitialize@CImage@ATL@@CA_NXZ PROC		; ATL::CImage::CImageStaticInitialize, COMDAT

; 501  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 502  : 		GetInitGDIPlusInstance();

  00003	e8 00 00 00 00	 call	 ?GetInitGDIPlusInstance@CImage@ATL@@CAPAVCInitGDIPlus@12@XZ ; ATL::CImage::GetInitGDIPlusInstance

; 503  : 		GetCDCCacheInstance();

  00008	e8 00 00 00 00	 call	 ?GetCDCCacheInstance@CImage@ATL@@CAPAVCDCCache@12@XZ ; ATL::CImage::GetCDCCacheInstance

; 504  : 		return true;

  0000d	b0 01		 mov	 al, 1

; 505  : 	}

  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?CImageStaticInitialize@CImage@ATL@@CA_NXZ ENDP		; ATL::CImage::CImageStaticInitialize
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atlimage.h
;	COMDAT ?GetCDCCacheInstance@CImage@ATL@@CAPAVCDCCache@12@XZ
_TEXT	SEGMENT
?GetCDCCacheInstance@CImage@ATL@@CAPAVCDCCache@12@XZ PROC ; ATL::CImage::GetCDCCacheInstance, COMDAT

; 495  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 496  : 		static CDCCache cache;

  00003	a1 00 00 00 00	 mov	 eax, DWORD PTR __tls_index
  00008	64 8b 0d 00 00
	00 00		 mov	 ecx, DWORD PTR fs:__tls_array
  0000f	8b 14 81	 mov	 edx, DWORD PTR [ecx+eax*4]
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$TSS0@?1??GetCDCCacheInstance@CImage@ATL@@CAPAVCDCCache@23@XZ@4HA ; TSS0<`template-parameter-2',ATL::CImage::tCDCCacheInstance,signed char,ATL::CImage::CDCCache const volatile __based() &,void,int, ?? &>
  00017	3b 82 00 00 00
	00		 cmp	 eax, DWORD PTR __Init_thread_epoch[edx]
  0001d	7e 3a		 jle	 SHORT $LN2@GetCDCCach
  0001f	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??GetCDCCacheInstance@CImage@ATL@@CAPAVCDCCache@23@XZ@4HA ; TSS0<`template-parameter-2',ATL::CImage::tCDCCacheInstance,signed char,ATL::CImage::CDCCache const volatile __based() &,void,int, ?? &>
  00024	e8 00 00 00 00	 call	 __Init_thread_header
  00029	83 c4 04	 add	 esp, 4
  0002c	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?1??GetCDCCacheInstance@CImage@ATL@@CAPAVCDCCache@23@XZ@4HA, -1 ; TSS0<`template-parameter-2',ATL::CImage::tCDCCacheInstance,signed char,ATL::CImage::CDCCache const volatile __based() &,void,int, ?? &>
  00033	75 24		 jne	 SHORT $LN2@GetCDCCach
  00035	b9 00 00 00 00	 mov	 ecx, OFFSET ?cache@?1??GetCDCCacheInstance@CImage@ATL@@CAPAVCDCCache@23@XZ@4V423@A ; `ATL::CImage::GetCDCCacheInstance'::`2'::cache
  0003a	e8 00 00 00 00	 call	 ??0CDCCache@CImage@ATL@@QAE@XZ ; ATL::CImage::CDCCache::CDCCache
  0003f	68 00 00 00 00	 push	 OFFSET ??__Fcache@?1??GetCDCCacheInstance@CImage@ATL@@CAPAVCDCCache@12@XZ@YAXXZ ; `ATL::CImage::GetCDCCacheInstance'::`2'::`dynamic atexit destructor for 'cache''
  00044	e8 00 00 00 00	 call	 _atexit
  00049	83 c4 04	 add	 esp, 4
  0004c	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??GetCDCCacheInstance@CImage@ATL@@CAPAVCDCCache@23@XZ@4HA ; TSS0<`template-parameter-2',ATL::CImage::tCDCCacheInstance,signed char,ATL::CImage::CDCCache const volatile __based() &,void,int, ?? &>
  00051	e8 00 00 00 00	 call	 __Init_thread_footer
  00056	83 c4 04	 add	 esp, 4
$LN2@GetCDCCach:

; 497  : 		return &cache;

  00059	b8 00 00 00 00	 mov	 eax, OFFSET ?cache@?1??GetCDCCacheInstance@CImage@ATL@@CAPAVCDCCache@23@XZ@4V423@A ; `ATL::CImage::GetCDCCacheInstance'::`2'::cache

; 498  : 	}

  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
?GetCDCCacheInstance@CImage@ATL@@CAPAVCDCCache@12@XZ ENDP ; ATL::CImage::GetCDCCacheInstance
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atlimage.h
;	COMDAT ?GetInitGDIPlusInstance@CImage@ATL@@CAPAVCInitGDIPlus@12@XZ
_TEXT	SEGMENT
?GetInitGDIPlusInstance@CImage@ATL@@CAPAVCInitGDIPlus@12@XZ PROC ; ATL::CImage::GetInitGDIPlusInstance, COMDAT

; 442  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 443  : 		static CInitGDIPlus gdiPlus;

  00003	a1 00 00 00 00	 mov	 eax, DWORD PTR __tls_index
  00008	64 8b 0d 00 00
	00 00		 mov	 ecx, DWORD PTR fs:__tls_array
  0000f	8b 14 81	 mov	 edx, DWORD PTR [ecx+eax*4]
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$TSS0@?1??GetInitGDIPlusInstance@CImage@ATL@@CAPAVCInitGDIPlus@23@XZ@4HA ; TSS0<`template-parameter-2',ATL::CImage::tInitGDIPlusInstance,signed char,ATL::CImage::CInitGDIPlus const volatile __based() &,void,int, ?? &>
  00017	3b 82 00 00 00
	00		 cmp	 eax, DWORD PTR __Init_thread_epoch[edx]
  0001d	7e 3a		 jle	 SHORT $LN2@GetInitGDI
  0001f	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??GetInitGDIPlusInstance@CImage@ATL@@CAPAVCInitGDIPlus@23@XZ@4HA ; TSS0<`template-parameter-2',ATL::CImage::tInitGDIPlusInstance,signed char,ATL::CImage::CInitGDIPlus const volatile __based() &,void,int, ?? &>
  00024	e8 00 00 00 00	 call	 __Init_thread_header
  00029	83 c4 04	 add	 esp, 4
  0002c	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?1??GetInitGDIPlusInstance@CImage@ATL@@CAPAVCInitGDIPlus@23@XZ@4HA, -1 ; TSS0<`template-parameter-2',ATL::CImage::tInitGDIPlusInstance,signed char,ATL::CImage::CInitGDIPlus const volatile __based() &,void,int, ?? &>
  00033	75 24		 jne	 SHORT $LN2@GetInitGDI
  00035	b9 00 00 00 00	 mov	 ecx, OFFSET ?gdiPlus@?1??GetInitGDIPlusInstance@CImage@ATL@@CAPAVCInitGDIPlus@23@XZ@4V423@A ; `ATL::CImage::GetInitGDIPlusInstance'::`2'::gdiPlus
  0003a	e8 00 00 00 00	 call	 ??0CInitGDIPlus@CImage@ATL@@QAE@XZ ; ATL::CImage::CInitGDIPlus::CInitGDIPlus
  0003f	68 00 00 00 00	 push	 OFFSET ??__FgdiPlus@?1??GetInitGDIPlusInstance@CImage@ATL@@CAPAVCInitGDIPlus@12@XZ@YAXXZ ; `ATL::CImage::GetInitGDIPlusInstance'::`2'::`dynamic atexit destructor for 'gdiPlus''
  00044	e8 00 00 00 00	 call	 _atexit
  00049	83 c4 04	 add	 esp, 4
  0004c	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??GetInitGDIPlusInstance@CImage@ATL@@CAPAVCInitGDIPlus@23@XZ@4HA ; TSS0<`template-parameter-2',ATL::CImage::tInitGDIPlusInstance,signed char,ATL::CImage::CInitGDIPlus const volatile __based() &,void,int, ?? &>
  00051	e8 00 00 00 00	 call	 __Init_thread_footer
  00056	83 c4 04	 add	 esp, 4
$LN2@GetInitGDI:

; 444  : 		return &gdiPlus;

  00059	b8 00 00 00 00	 mov	 eax, OFFSET ?gdiPlus@?1??GetInitGDIPlusInstance@CImage@ATL@@CAPAVCInitGDIPlus@23@XZ@4V423@A ; `ATL::CImage::GetInitGDIPlusInstance'::`2'::gdiPlus

; 445  : 	}

  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
?GetInitGDIPlusInstance@CImage@ATL@@CAPAVCInitGDIPlus@12@XZ ENDP ; ATL::CImage::GetInitGDIPlusInstance
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atlimage.h
;	COMDAT ?ReleaseGDIPlus@CInitGDIPlus@CImage@ATL@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ReleaseGDIPlus@CInitGDIPlus@CImage@ATL@@QAEXXZ PROC	; ATL::CImage::CInitGDIPlus::ReleaseGDIPlus, COMDAT
; _this$ = ecx

; 570  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 571  : 	EnterCriticalSection(&m_sect);

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 c0 04	 add	 eax, 4
  0000d	50		 push	 eax
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4

; 572  : 	if( m_dwToken != 0 )

  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	83 39 00	 cmp	 DWORD PTR [ecx], 0
  0001a	74 0b		 je	 SHORT $LN2@ReleaseGDI

; 573  : 	{
; 574  : 		Gdiplus::GdiplusShutdown( m_dwToken );

  0001c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001f	8b 02		 mov	 eax, DWORD PTR [edx]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 _GdiplusShutdown@4
$LN2@ReleaseGDI:

; 575  : 	}
; 576  : 	m_dwToken = 0;

  00027	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0

; 577  : 	LeaveCriticalSection(&m_sect);

  00030	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00033	83 c2 04	 add	 edx, 4
  00036	52		 push	 edx
  00037	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4

; 578  : }

  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
?ReleaseGDIPlus@CInitGDIPlus@CImage@ATL@@QAEXXZ ENDP	; ATL::CImage::CInitGDIPlus::ReleaseGDIPlus
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atlimage.h
;	COMDAT ??1CInitGDIPlus@CImage@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CInitGDIPlus@CImage@ATL@@QAE@XZ PROC			; ATL::CImage::CInitGDIPlus::~CInitGDIPlus, COMDAT
; _this$ = ecx

; 542  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 543  : 	ReleaseGDIPlus();

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?ReleaseGDIPlus@CInitGDIPlus@CImage@ATL@@QAEXXZ ; ATL::CImage::CInitGDIPlus::ReleaseGDIPlus

; 544  : 	DeleteCriticalSection(&m_sect);

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	83 c0 04	 add	 eax, 4
  00015	50		 push	 eax
  00016	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeleteCriticalSection@4

; 545  : }

  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
??1CInitGDIPlus@CImage@ATL@@QAE@XZ ENDP			; ATL::CImage::CInitGDIPlus::~CInitGDIPlus
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atlimage.h
;	COMDAT ??0CInitGDIPlus@CImage@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CInitGDIPlus@CImage@ATL@@QAE@XZ PROC			; ATL::CImage::CInitGDIPlus::CInitGDIPlus, COMDAT
; _this$ = ecx

; 534  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 533  : 	m_dwToken( 0 ), m_nCImageObjects( 0 ), m_dwLastError(S_OK)

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	c7 41 1c 00 00
	00 00		 mov	 DWORD PTR [ecx+28], 0
  0001a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001d	c7 42 20 00 00
	00 00		 mov	 DWORD PTR [edx+32], 0

; 535  : 	if (!_AtlInitializeCriticalSectionEx(&m_sect, 0, 0))

  00024	6a 00		 push	 0
  00026	6a 00		 push	 0
  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	83 c0 04	 add	 eax, 4
  0002e	50		 push	 eax
  0002f	e8 00 00 00 00	 call	 ?_AtlInitializeCriticalSectionEx@ATL@@YAHPAU_RTL_CRITICAL_SECTION@@KK@Z ; ATL::_AtlInitializeCriticalSectionEx
  00034	83 c4 0c	 add	 esp, 12			; 0000000cH
  00037	85 c0		 test	 eax, eax
  00039	75 15		 jne	 SHORT $LN1@CInitGDIPl

; 536  : 	{
; 537  : 		m_dwLastError = HRESULT_FROM_WIN32(GetLastError());

  0003b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 _HRESULT_FROM_WIN32
  00047	83 c4 04	 add	 esp, 4
  0004a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	89 41 20	 mov	 DWORD PTR [ecx+32], eax
$LN1@CInitGDIPl:

; 538  : 	}
; 539  : }

  00050	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
??0CInitGDIPlus@CImage@ATL@@QAE@XZ ENDP			; ATL::CImage::CInitGDIPlus::CInitGDIPlus
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atlimage.h
;	COMDAT ??1CDCCache@CImage@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
_iDC$ = -4						; size = 4
??1CDCCache@CImage@ATL@@QAE@XZ PROC			; ATL::CImage::CDCCache::~CDCCache, COMDAT
; _this$ = ecx

; 606  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 607  : 	int iDC;
; 608  : 
; 609  : 	for( iDC = 0; iDC < CIMAGE_DC_CACHE_SIZE; iDC++ )

  00009	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _iDC$[ebp], 0
  00010	eb 09		 jmp	 SHORT $LN4@CDCCache
$LN2@CDCCache:
  00012	8b 45 fc	 mov	 eax, DWORD PTR _iDC$[ebp]
  00015	83 c0 01	 add	 eax, 1
  00018	89 45 fc	 mov	 DWORD PTR _iDC$[ebp], eax
$LN4@CDCCache:
  0001b	83 7d fc 04	 cmp	 DWORD PTR _iDC$[ebp], 4
  0001f	7d 1e		 jge	 SHORT $LN1@CDCCache

; 610  : 	{
; 611  : 		if( m_ahDCs[iDC] != NULL )

  00021	8b 4d fc	 mov	 ecx, DWORD PTR _iDC$[ebp]
  00024	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00027	83 3c 8a 00	 cmp	 DWORD PTR [edx+ecx*4], 0
  0002b	74 10		 je	 SHORT $LN5@CDCCache

; 612  : 		{
; 613  : 			::DeleteDC( m_ahDCs[iDC] );

  0002d	8b 45 fc	 mov	 eax, DWORD PTR _iDC$[ebp]
  00030	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	8b 14 81	 mov	 edx, DWORD PTR [ecx+eax*4]
  00036	52		 push	 edx
  00037	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeleteDC@4
$LN5@CDCCache:

; 614  : 		}
; 615  : 	}

  0003d	eb d3		 jmp	 SHORT $LN2@CDCCache
$LN1@CDCCache:

; 616  : }

  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c3		 ret	 0
??1CDCCache@CImage@ATL@@QAE@XZ ENDP			; ATL::CImage::CDCCache::~CDCCache
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atlimage.h
;	COMDAT ??0CDCCache@CImage@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
_iDC$ = -4						; size = 4
??0CDCCache@CImage@ATL@@QAE@XZ PROC			; ATL::CImage::CDCCache::CDCCache, COMDAT
; _this$ = ecx

; 596  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 597  : 	int iDC;
; 598  : 
; 599  : 	for( iDC = 0; iDC < CIMAGE_DC_CACHE_SIZE; iDC++ )

  00009	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _iDC$[ebp], 0
  00010	eb 09		 jmp	 SHORT $LN4@CDCCache
$LN2@CDCCache:
  00012	8b 45 fc	 mov	 eax, DWORD PTR _iDC$[ebp]
  00015	83 c0 01	 add	 eax, 1
  00018	89 45 fc	 mov	 DWORD PTR _iDC$[ebp], eax
$LN4@CDCCache:
  0001b	83 7d fc 04	 cmp	 DWORD PTR _iDC$[ebp], 4
  0001f	7d 0f		 jge	 SHORT $LN1@CDCCache

; 600  : 	{
; 601  : 		m_ahDCs[iDC] = NULL;

  00021	8b 4d fc	 mov	 ecx, DWORD PTR _iDC$[ebp]
  00024	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00027	c7 04 8a 00 00
	00 00		 mov	 DWORD PTR [edx+ecx*4], 0

; 602  : 	}

  0002e	eb e2		 jmp	 SHORT $LN2@CDCCache
$LN1@CDCCache:

; 603  : }

  00030	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c3		 ret	 0
??0CDCCache@CImage@ATL@@QAE@XZ ENDP			; ATL::CImage::CDCCache::CDCCache
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atlstr.h
;	COMDAT ??__E?isInitialized@CAtlStringMgr@ATL@@0_NA@@YAXXZ
text$di	SEGMENT
??__E?isInitialized@CAtlStringMgr@ATL@@0_NA@@YAXXZ PROC	; `dynamic initializer for 'ATL::CAtlStringMgr::isInitialized'', COMDAT

; 165  : __declspec(selectany) bool CAtlStringMgr::isInitialized = CAtlStringMgr::StaticInitialize();

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	e8 00 00 00 00	 call	 ?StaticInitialize@CAtlStringMgr@ATL@@CA_NXZ ; ATL::CAtlStringMgr::StaticInitialize
  00008	a2 00 00 00 00	 mov	 BYTE PTR ?isInitialized@CAtlStringMgr@ATL@@0_NA, al ; ATL::CAtlStringMgr::isInitialized
  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??__E?isInitialized@CAtlStringMgr@ATL@@0_NA@@YAXXZ ENDP	; `dynamic initializer for 'ATL::CAtlStringMgr::isInitialized''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atlmem.h
;	COMDAT ??$AtlAlignUp@H@ATL@@YGHHK@Z
_TEXT	SEGMENT
_n$ = 8							; size = 4
_nAlign$ = 12						; size = 4
??$AtlAlignUp@H@ATL@@YGHHK@Z PROC			; ATL::AtlAlignUp<int>, COMDAT

; 28   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 29   : 	return( N( (n+(nAlign-1))&~(N( nAlign )-1) ) );

  00003	8b 45 0c	 mov	 eax, DWORD PTR _nAlign$[ebp]
  00006	8b 4d 08	 mov	 ecx, DWORD PTR _n$[ebp]
  00009	8d 44 01 ff	 lea	 eax, DWORD PTR [ecx+eax-1]
  0000d	8b 55 0c	 mov	 edx, DWORD PTR _nAlign$[ebp]
  00010	83 ea 01	 sub	 edx, 1
  00013	f7 d2		 not	 edx
  00015	23 c2		 and	 eax, edx

; 30   : }

  00017	5d		 pop	 ebp
  00018	c2 08 00	 ret	 8
??$AtlAlignUp@H@ATL@@YGHHK@Z ENDP			; ATL::AtlAlignUp<int>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__FstrMgr@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@2@XZ@YAXXZ
text$yd	SEGMENT
??__FstrMgr@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@2@XZ@YAXXZ PROC ; `ATL::CAtlStringMgr::GetInstance'::`2'::`dynamic atexit destructor for 'strMgr'', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET ?strMgr@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4V23@A ; `ATL::CAtlStringMgr::GetInstance'::`2'::strMgr
  00008	e8 00 00 00 00	 call	 ??1CAtlStringMgr@ATL@@UAE@XZ ; ATL::CAtlStringMgr::~CAtlStringMgr
  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??__FstrMgr@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@2@XZ@YAXXZ ENDP ; `ATL::CAtlStringMgr::GetInstance'::`2'::`dynamic atexit destructor for 'strMgr''
text$yd	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__FstrHeap@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@2@XZ@YAXXZ
text$yd	SEGMENT
??__FstrHeap@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@2@XZ@YAXXZ PROC ; `ATL::CAtlStringMgr::GetInstance'::`2'::`dynamic atexit destructor for 'strHeap'', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET ?strHeap@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4VCWin32Heap@3@A ; `ATL::CAtlStringMgr::GetInstance'::`2'::strHeap
  00008	e8 00 00 00 00	 call	 ??1CWin32Heap@ATL@@UAE@XZ ; ATL::CWin32Heap::~CWin32Heap
  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??__FstrHeap@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@2@XZ@YAXXZ ENDP ; `ATL::CAtlStringMgr::GetInstance'::`2'::`dynamic atexit destructor for 'strHeap''
text$yd	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GCAtlStringMgr@ATL@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCAtlStringMgr@ATL@@UAEPAXI@Z PROC			; ATL::CAtlStringMgr::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CAtlStringMgr@ATL@@UAE@XZ ; ATL::CAtlStringMgr::~CAtlStringMgr
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	74 0e		 je	 SHORT $LN2@scalar
  00017	6a 1c		 push	 28			; 0000001cH
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00022	83 c4 08	 add	 esp, 8
$LN2@scalar:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCAtlStringMgr@ATL@@UAEPAXI@Z ENDP			; ATL::CAtlStringMgr::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atlstr.h
;	COMDAT ?StaticInitialize@CAtlStringMgr@ATL@@CA_NXZ
_TEXT	SEGMENT
?StaticInitialize@CAtlStringMgr@ATL@@CA_NXZ PROC	; ATL::CAtlStringMgr::StaticInitialize, COMDAT

; 157  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 158  : 		GetInstance();

  00003	e8 00 00 00 00	 call	 ?GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@2@XZ ; ATL::CAtlStringMgr::GetInstance

; 159  : 		return true;

  00008	b0 01		 mov	 al, 1

; 160  : 	}

  0000a	5d		 pop	 ebp
  0000b	c3		 ret	 0
?StaticInitialize@CAtlStringMgr@ATL@@CA_NXZ ENDP	; ATL::CAtlStringMgr::StaticInitialize
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atlstr.h
;	COMDAT ?Clone@CAtlStringMgr@ATL@@UAEPAUIAtlStringMgr@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Clone@CAtlStringMgr@ATL@@UAEPAUIAtlStringMgr@2@XZ PROC	; ATL::CAtlStringMgr::Clone, COMDAT
; _this$ = ecx

; 148  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 149  : 		return this;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 150  : 	}

  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
?Clone@CAtlStringMgr@ATL@@UAEPAUIAtlStringMgr@2@XZ ENDP	; ATL::CAtlStringMgr::Clone
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atlstr.h
;	COMDAT ?GetNilString@CAtlStringMgr@ATL@@UAEPAUCStringData@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetNilString@CAtlStringMgr@ATL@@UAEPAUCStringData@2@XZ PROC ; ATL::CAtlStringMgr::GetNilString, COMDAT
; _this$ = ecx

; 143  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 144  : 		m_nil.AddRef();

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	83 c1 08	 add	 ecx, 8
  0000d	e8 00 00 00 00	 call	 ?AddRef@CStringData@ATL@@QAEXXZ ; ATL::CStringData::AddRef

; 145  : 		return &m_nil;

  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	83 c0 08	 add	 eax, 8

; 146  : 	}

  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?GetNilString@CAtlStringMgr@ATL@@UAEPAUCStringData@2@XZ ENDP ; ATL::CAtlStringMgr::GetNilString
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atlstr.h
;	COMDAT ?Reallocate@CAtlStringMgr@ATL@@UAEPAUCStringData@2@PAU32@HH@Z
_TEXT	SEGMENT
_nTotalSize$ = -36					; size = 4
_nDataBytes$ = -32					; size = 4
___atl_condVal$1 = -28					; size = 4
___atl_condVal$2 = -24					; size = 4
_this$ = -20						; size = 4
tv77 = -16						; size = 4
tv65 = -12						; size = 4
_pNewData$ = -8						; size = 4
_nAlignedChars$ = -4					; size = 4
_pData$ = 8						; size = 4
_nChars$ = 12						; size = 4
_nCharSize$ = 16					; size = 4
?Reallocate@CAtlStringMgr@ATL@@UAEPAUCStringData@2@PAU32@HH@Z PROC ; ATL::CAtlStringMgr::Reallocate, COMDAT
; _this$ = ecx

; 112  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
  00006	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
$LN4@Reallocate:

; 113  : 		ATLENSURE_RETURN_VAL( nChars>=0, NULL );

  00009	83 7d 0c 00	 cmp	 DWORD PTR _nChars$[ebp], 0
  0000d	7c 09		 jl	 SHORT $LN15@Reallocate
  0000f	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR tv65[ebp], 1
  00016	eb 07		 jmp	 SHORT $LN16@Reallocate
$LN15@Reallocate:
  00018	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR tv65[ebp], 0
$LN16@Reallocate:
  0001f	8b 45 f4	 mov	 eax, DWORD PTR tv65[ebp]
  00022	89 45 e8	 mov	 DWORD PTR ___atl_condVal$2[ebp], eax
  00025	83 7d e8 00	 cmp	 DWORD PTR ___atl_condVal$2[ebp], 0
  00029	75 07		 jne	 SHORT $LN2@Reallocate
  0002b	33 c0		 xor	 eax, eax
  0002d	e9 c4 00 00 00	 jmp	 $LN1@Reallocate
$LN2@Reallocate:
  00032	33 c9		 xor	 ecx, ecx
  00034	75 d3		 jne	 SHORT $LN4@Reallocate

; 114  : 		ATLASSERT( pData->pStringMgr == this );
; 115  : 
; 116  : 		CStringData* pNewData;
; 117  : 		ULONG nTotalSize;
; 118  : 		ULONG nDataBytes;
; 119  : 
; 120  : 		if( FAILED(::ATL::AtlAdd(&nChars, nChars, 1)) )

  00036	6a 01		 push	 1
  00038	8b 55 0c	 mov	 edx, DWORD PTR _nChars$[ebp]
  0003b	52		 push	 edx
  0003c	8d 45 0c	 lea	 eax, DWORD PTR _nChars$[ebp]
  0003f	50		 push	 eax
  00040	e8 00 00 00 00	 call	 ??$AtlAdd@H@ATL@@YAJPAHHH@Z ; ATL::AtlAdd<int>
  00045	83 c4 0c	 add	 esp, 12			; 0000000cH
  00048	85 c0		 test	 eax, eax
  0004a	7d 07		 jge	 SHORT $LN9@Reallocate

; 121  : 		{
; 122  : 			return NULL;

  0004c	33 c0		 xor	 eax, eax
  0004e	e9 a3 00 00 00	 jmp	 $LN1@Reallocate
$LN9@Reallocate:

; 123  : 		}
; 124  : 
; 125  : 		int nAlignedChars = ::ATL::AtlAlignUp( nChars, 8 );  // Prevent excessive reallocation.  The heap will usually round up anyway.

  00053	6a 08		 push	 8
  00055	8b 4d 0c	 mov	 ecx, DWORD PTR _nChars$[ebp]
  00058	51		 push	 ecx
  00059	e8 00 00 00 00	 call	 ??$AtlAlignUp@H@ATL@@YGHHK@Z ; ATL::AtlAlignUp<int>
  0005e	89 45 fc	 mov	 DWORD PTR _nAlignedChars$[ebp], eax
$LN7@Reallocate:

; 126  : 		ATLENSURE_RETURN_VAL( nChars<=nAlignedChars, NULL );

  00061	8b 55 0c	 mov	 edx, DWORD PTR _nChars$[ebp]
  00064	3b 55 fc	 cmp	 edx, DWORD PTR _nAlignedChars$[ebp]
  00067	7f 09		 jg	 SHORT $LN17@Reallocate
  00069	c7 45 f0 01 00
	00 00		 mov	 DWORD PTR tv77[ebp], 1
  00070	eb 07		 jmp	 SHORT $LN18@Reallocate
$LN17@Reallocate:
  00072	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR tv77[ebp], 0
$LN18@Reallocate:
  00079	8b 45 f0	 mov	 eax, DWORD PTR tv77[ebp]
  0007c	89 45 e4	 mov	 DWORD PTR ___atl_condVal$1[ebp], eax
  0007f	83 7d e4 00	 cmp	 DWORD PTR ___atl_condVal$1[ebp], 0
  00083	75 04		 jne	 SHORT $LN5@Reallocate
  00085	33 c0		 xor	 eax, eax
  00087	eb 6d		 jmp	 SHORT $LN1@Reallocate
$LN5@Reallocate:
  00089	33 c9		 xor	 ecx, ecx
  0008b	75 d4		 jne	 SHORT $LN7@Reallocate

; 127  : 
; 128  : 		if(	FAILED(::ATL::AtlMultiply(&nDataBytes, static_cast<ULONG>(nAlignedChars), static_cast<ULONG>(nCharSize))) ||

  0008d	8b 55 10	 mov	 edx, DWORD PTR _nCharSize$[ebp]
  00090	52		 push	 edx
  00091	8b 45 fc	 mov	 eax, DWORD PTR _nAlignedChars$[ebp]
  00094	50		 push	 eax
  00095	8d 4d e0	 lea	 ecx, DWORD PTR _nDataBytes$[ebp]
  00098	51		 push	 ecx
  00099	e8 00 00 00 00	 call	 ??$AtlMultiply@K@ATL@@YAJPAKKK@Z ; ATL::AtlMultiply<unsigned long>
  0009e	83 c4 0c	 add	 esp, 12			; 0000000cH
  000a1	85 c0		 test	 eax, eax
  000a3	7c 16		 jl	 SHORT $LN12@Reallocate
  000a5	8b 55 e0	 mov	 edx, DWORD PTR _nDataBytes$[ebp]
  000a8	52		 push	 edx
  000a9	6a 10		 push	 16			; 00000010H
  000ab	8d 45 dc	 lea	 eax, DWORD PTR _nTotalSize$[ebp]
  000ae	50		 push	 eax
  000af	e8 00 00 00 00	 call	 ??$AtlAdd@K@ATL@@YAJPAKKK@Z ; ATL::AtlAdd<unsigned long>
  000b4	83 c4 0c	 add	 esp, 12			; 0000000cH
  000b7	85 c0		 test	 eax, eax
  000b9	7d 04		 jge	 SHORT $LN11@Reallocate
$LN12@Reallocate:

; 129  : 			FAILED(::ATL::AtlAdd(&nTotalSize, static_cast<ULONG>(sizeof( CStringData )), nDataBytes)))
; 130  : 		{
; 131  : 			return NULL;

  000bb	33 c0		 xor	 eax, eax
  000bd	eb 37		 jmp	 SHORT $LN1@Reallocate
$LN11@Reallocate:

; 132  : 		}
; 133  : 		pNewData = static_cast< CStringData* >( m_pMemMgr->Reallocate( pData, nTotalSize ) );

  000bf	8b 4d dc	 mov	 ecx, DWORD PTR _nTotalSize$[ebp]
  000c2	51		 push	 ecx
  000c3	8b 55 08	 mov	 edx, DWORD PTR _pData$[ebp]
  000c6	52		 push	 edx
  000c7	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000ca	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000cd	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  000d0	8b 01		 mov	 eax, DWORD PTR [ecx]
  000d2	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  000d5	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  000d8	ff d2		 call	 edx
  000da	89 45 f8	 mov	 DWORD PTR _pNewData$[ebp], eax

; 134  : 		if( pNewData == NULL )

  000dd	83 7d f8 00	 cmp	 DWORD PTR _pNewData$[ebp], 0
  000e1	75 04		 jne	 SHORT $LN13@Reallocate

; 135  : 		{
; 136  : 			return NULL;

  000e3	33 c0		 xor	 eax, eax
  000e5	eb 0f		 jmp	 SHORT $LN1@Reallocate
$LN13@Reallocate:

; 137  : 		}
; 138  : 		pNewData->nAllocLength = nAlignedChars - 1;

  000e7	8b 45 fc	 mov	 eax, DWORD PTR _nAlignedChars$[ebp]
  000ea	83 e8 01	 sub	 eax, 1
  000ed	8b 4d f8	 mov	 ecx, DWORD PTR _pNewData$[ebp]
  000f0	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 139  : 
; 140  : 		return pNewData;

  000f3	8b 45 f8	 mov	 eax, DWORD PTR _pNewData$[ebp]
$LN1@Reallocate:

; 141  : 	}

  000f6	8b e5		 mov	 esp, ebp
  000f8	5d		 pop	 ebp
  000f9	c2 0c 00	 ret	 12			; 0000000cH
?Reallocate@CAtlStringMgr@ATL@@UAEPAUCStringData@2@PAU32@HH@Z ENDP ; ATL::CAtlStringMgr::Reallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atlstr.h
;	COMDAT ?Free@CAtlStringMgr@ATL@@UAEXPAUCStringData@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pData$ = 8						; size = 4
?Free@CAtlStringMgr@ATL@@UAEXPAUCStringData@2@@Z PROC	; ATL::CAtlStringMgr::Free, COMDAT
; _this$ = ecx

; 102  : 	{		

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
$LN2@Free:

; 103  : 		ATLASSUME(pData != NULL);

  00007	33 c0		 xor	 eax, eax
  00009	75 fc		 jne	 SHORT $LN2@Free

; 104  : 		ATLASSERT(pData->pStringMgr == this);
; 105  : 			
; 106  : 		m_pMemMgr->Free( pData );

  0000b	8b 4d 08	 mov	 ecx, DWORD PTR _pData$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00012	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	8b 10		 mov	 edx, DWORD PTR [eax]
  0001a	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0001d	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00020	ff d0		 call	 eax

; 107  : 	}

  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 04 00	 ret	 4
?Free@CAtlStringMgr@ATL@@UAEXPAUCStringData@2@@Z ENDP	; ATL::CAtlStringMgr::Free
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atlstr.h
;	COMDAT ?Allocate@CAtlStringMgr@ATL@@UAEPAUCStringData@2@HH@Z
_TEXT	SEGMENT
_nTotalSize$ = -36					; size = 4
_nDataBytes$ = -32					; size = 4
___atl_condVal$1 = -28					; size = 4
___atl_condVal$2 = -24					; size = 4
tv77 = -20						; size = 4
tv65 = -16						; size = 4
_nAlignedChars$ = -12					; size = 4
_this$ = -8						; size = 4
_pData$ = -4						; size = 4
_nChars$ = 8						; size = 4
_nCharSize$ = 12					; size = 4
?Allocate@CAtlStringMgr@ATL@@UAEPAUCStringData@2@HH@Z PROC ; ATL::CAtlStringMgr::Allocate, COMDAT
; _this$ = ecx

; 69   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
$LN4@Allocate:

; 70   : 		ATLENSURE_RETURN_VAL( nChars>=0, NULL );

  00009	83 7d 08 00	 cmp	 DWORD PTR _nChars$[ebp], 0
  0000d	7c 09		 jl	 SHORT $LN15@Allocate
  0000f	c7 45 f0 01 00
	00 00		 mov	 DWORD PTR tv65[ebp], 1
  00016	eb 07		 jmp	 SHORT $LN16@Allocate
$LN15@Allocate:
  00018	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR tv65[ebp], 0
$LN16@Allocate:
  0001f	8b 45 f0	 mov	 eax, DWORD PTR tv65[ebp]
  00022	89 45 e8	 mov	 DWORD PTR ___atl_condVal$2[ebp], eax
  00025	83 7d e8 00	 cmp	 DWORD PTR ___atl_condVal$2[ebp], 0
  00029	75 07		 jne	 SHORT $LN2@Allocate
  0002b	33 c0		 xor	 eax, eax
  0002d	e9 de 00 00 00	 jmp	 $LN1@Allocate
$LN2@Allocate:
  00032	33 c9		 xor	 ecx, ecx
  00034	75 d3		 jne	 SHORT $LN4@Allocate

; 71   : 
; 72   : 		size_t nTotalSize;
; 73   : 		CStringData* pData;
; 74   : 		size_t nDataBytes;
; 75   : 
; 76   : 		if( FAILED(::ATL::AtlAdd(&nChars, nChars, 1)) )

  00036	6a 01		 push	 1
  00038	8b 55 08	 mov	 edx, DWORD PTR _nChars$[ebp]
  0003b	52		 push	 edx
  0003c	8d 45 08	 lea	 eax, DWORD PTR _nChars$[ebp]
  0003f	50		 push	 eax
  00040	e8 00 00 00 00	 call	 ??$AtlAdd@H@ATL@@YAJPAHHH@Z ; ATL::AtlAdd<int>
  00045	83 c4 0c	 add	 esp, 12			; 0000000cH
  00048	85 c0		 test	 eax, eax
  0004a	7d 07		 jge	 SHORT $LN9@Allocate

; 77   : 		{
; 78   : 			return NULL;

  0004c	33 c0		 xor	 eax, eax
  0004e	e9 bd 00 00 00	 jmp	 $LN1@Allocate
$LN9@Allocate:

; 79   : 		}
; 80   : 
; 81   : 		int nAlignedChars = ::ATL::AtlAlignUp( nChars, 8 );  // Prevent excessive reallocation.  The heap will usually round up anyway.

  00053	6a 08		 push	 8
  00055	8b 4d 08	 mov	 ecx, DWORD PTR _nChars$[ebp]
  00058	51		 push	 ecx
  00059	e8 00 00 00 00	 call	 ??$AtlAlignUp@H@ATL@@YGHHK@Z ; ATL::AtlAlignUp<int>
  0005e	89 45 f4	 mov	 DWORD PTR _nAlignedChars$[ebp], eax
$LN7@Allocate:

; 82   : 		ATLENSURE_RETURN_VAL( nChars<=nAlignedChars, NULL );

  00061	8b 55 08	 mov	 edx, DWORD PTR _nChars$[ebp]
  00064	3b 55 f4	 cmp	 edx, DWORD PTR _nAlignedChars$[ebp]
  00067	7f 09		 jg	 SHORT $LN17@Allocate
  00069	c7 45 ec 01 00
	00 00		 mov	 DWORD PTR tv77[ebp], 1
  00070	eb 07		 jmp	 SHORT $LN18@Allocate
$LN17@Allocate:
  00072	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR tv77[ebp], 0
$LN18@Allocate:
  00079	8b 45 ec	 mov	 eax, DWORD PTR tv77[ebp]
  0007c	89 45 e4	 mov	 DWORD PTR ___atl_condVal$1[ebp], eax
  0007f	83 7d e4 00	 cmp	 DWORD PTR ___atl_condVal$1[ebp], 0
  00083	75 07		 jne	 SHORT $LN5@Allocate
  00085	33 c0		 xor	 eax, eax
  00087	e9 84 00 00 00	 jmp	 $LN1@Allocate
$LN5@Allocate:
  0008c	33 c9		 xor	 ecx, ecx
  0008e	75 d1		 jne	 SHORT $LN7@Allocate

; 83   : 
; 84   : 		if(	FAILED(::ATL::AtlMultiply(&nDataBytes, static_cast<size_t>(nAlignedChars), static_cast<size_t>(nCharSize))) ||

  00090	8b 55 0c	 mov	 edx, DWORD PTR _nCharSize$[ebp]
  00093	52		 push	 edx
  00094	8b 45 f4	 mov	 eax, DWORD PTR _nAlignedChars$[ebp]
  00097	50		 push	 eax
  00098	8d 4d e0	 lea	 ecx, DWORD PTR _nDataBytes$[ebp]
  0009b	51		 push	 ecx
  0009c	e8 00 00 00 00	 call	 ??$AtlMultiply@I@ATL@@YAJPAIII@Z ; ATL::AtlMultiply<unsigned int>
  000a1	83 c4 0c	 add	 esp, 12			; 0000000cH
  000a4	85 c0		 test	 eax, eax
  000a6	7c 16		 jl	 SHORT $LN12@Allocate
  000a8	8b 55 e0	 mov	 edx, DWORD PTR _nDataBytes$[ebp]
  000ab	52		 push	 edx
  000ac	6a 10		 push	 16			; 00000010H
  000ae	8d 45 dc	 lea	 eax, DWORD PTR _nTotalSize$[ebp]
  000b1	50		 push	 eax
  000b2	e8 00 00 00 00	 call	 ??$AtlAdd@I@ATL@@YAJPAIII@Z ; ATL::AtlAdd<unsigned int>
  000b7	83 c4 0c	 add	 esp, 12			; 0000000cH
  000ba	85 c0		 test	 eax, eax
  000bc	7d 04		 jge	 SHORT $LN11@Allocate
$LN12@Allocate:

; 85   : 			FAILED(::ATL::AtlAdd(&nTotalSize, static_cast<size_t>(sizeof( CStringData )), nDataBytes)))
; 86   : 		{
; 87   : 			return NULL;

  000be	33 c0		 xor	 eax, eax
  000c0	eb 4e		 jmp	 SHORT $LN1@Allocate
$LN11@Allocate:

; 88   : 		}
; 89   : 		pData = static_cast< CStringData* >( m_pMemMgr->Allocate( nTotalSize ) );

  000c2	8b 4d dc	 mov	 ecx, DWORD PTR _nTotalSize$[ebp]
  000c5	51		 push	 ecx
  000c6	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000c9	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000cc	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000cf	8b 10		 mov	 edx, DWORD PTR [eax]
  000d1	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  000d4	8b 02		 mov	 eax, DWORD PTR [edx]
  000d6	ff d0		 call	 eax
  000d8	89 45 fc	 mov	 DWORD PTR _pData$[ebp], eax

; 90   : 		if( pData == NULL )

  000db	83 7d fc 00	 cmp	 DWORD PTR _pData$[ebp], 0
  000df	75 04		 jne	 SHORT $LN13@Allocate

; 91   : 		{
; 92   : 			return( NULL );

  000e1	33 c0		 xor	 eax, eax
  000e3	eb 2b		 jmp	 SHORT $LN1@Allocate
$LN13@Allocate:

; 93   : 		}
; 94   : 		pData->pStringMgr = this;

  000e5	8b 4d fc	 mov	 ecx, DWORD PTR _pData$[ebp]
  000e8	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000eb	89 11		 mov	 DWORD PTR [ecx], edx

; 95   : 		pData->nRefs = 1;

  000ed	8b 45 fc	 mov	 eax, DWORD PTR _pData$[ebp]
  000f0	c7 40 0c 01 00
	00 00		 mov	 DWORD PTR [eax+12], 1

; 96   : 		pData->nAllocLength = nAlignedChars - 1;

  000f7	8b 4d f4	 mov	 ecx, DWORD PTR _nAlignedChars$[ebp]
  000fa	83 e9 01	 sub	 ecx, 1
  000fd	8b 55 fc	 mov	 edx, DWORD PTR _pData$[ebp]
  00100	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 97   : 		pData->nDataLength = 0;

  00103	8b 45 fc	 mov	 eax, DWORD PTR _pData$[ebp]
  00106	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 98   : 
; 99   : 		return( pData );

  0010d	8b 45 fc	 mov	 eax, DWORD PTR _pData$[ebp]
$LN1@Allocate:

; 100  : 	}

  00110	8b e5		 mov	 esp, ebp
  00112	5d		 pop	 ebp
  00113	c2 08 00	 ret	 8
?Allocate@CAtlStringMgr@ATL@@UAEPAUCStringData@2@HH@Z ENDP ; ATL::CAtlStringMgr::Allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atlstr.h
;	COMDAT ?GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@2@XZ
_TEXT	SEGMENT
?GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@2@XZ PROC ; ATL::CAtlStringMgr::GetInstance, COMDAT

; 55   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 56   : #pragma warning(push)
; 57   : #pragma warning(disable: 4640)
; 58   : 		static CWin32Heap strHeap( ::GetProcessHeap() );

  00003	a1 00 00 00 00	 mov	 eax, DWORD PTR __tls_index
  00008	64 8b 0d 00 00
	00 00		 mov	 ecx, DWORD PTR fs:__tls_array
  0000f	8b 14 81	 mov	 edx, DWORD PTR [ecx+eax*4]
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$TSS0@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4HA ; TSS0<`template-parameter-2',ATL::CAtlStringMgr::tInstance,ATL::IAtlStringMgr * * const volatile,void,int, ?? &>
  00017	3b 82 00 00 00
	00		 cmp	 eax, DWORD PTR __Init_thread_epoch[edx]
  0001d	7e 41		 jle	 SHORT $LN2@GetInstanc
  0001f	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4HA ; TSS0<`template-parameter-2',ATL::CAtlStringMgr::tInstance,ATL::IAtlStringMgr * * const volatile,void,int, ?? &>
  00024	e8 00 00 00 00	 call	 __Init_thread_header
  00029	83 c4 04	 add	 esp, 4
  0002c	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4HA, -1 ; TSS0<`template-parameter-2',ATL::CAtlStringMgr::tInstance,ATL::IAtlStringMgr * * const volatile,void,int, ?? &>
  00033	75 2b		 jne	 SHORT $LN2@GetInstanc
  00035	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcessHeap@0
  0003b	50		 push	 eax
  0003c	b9 00 00 00 00	 mov	 ecx, OFFSET ?strHeap@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4VCWin32Heap@3@A ; `ATL::CAtlStringMgr::GetInstance'::`2'::strHeap
  00041	e8 00 00 00 00	 call	 ??0CWin32Heap@ATL@@QAE@PAX@Z ; ATL::CWin32Heap::CWin32Heap
  00046	68 00 00 00 00	 push	 OFFSET ??__FstrHeap@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@2@XZ@YAXXZ ; `ATL::CAtlStringMgr::GetInstance'::`2'::`dynamic atexit destructor for 'strHeap''
  0004b	e8 00 00 00 00	 call	 _atexit
  00050	83 c4 04	 add	 esp, 4
  00053	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4HA ; TSS0<`template-parameter-2',ATL::CAtlStringMgr::tInstance,ATL::IAtlStringMgr * * const volatile,void,int, ?? &>
  00058	e8 00 00 00 00	 call	 __Init_thread_footer
  0005d	83 c4 04	 add	 esp, 4
$LN2@GetInstanc:

; 59   : 		static CAtlStringMgr strMgr(&strHeap);

  00060	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __tls_index
  00066	64 8b 15 00 00
	00 00		 mov	 edx, DWORD PTR fs:__tls_array
  0006d	8b 04 8a	 mov	 eax, DWORD PTR [edx+ecx*4]
  00070	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?$TSS1@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4HA ; TSS1<`template-parameter-2',ATL::CAtlStringMgr::tInstance,ATL::IAtlStringMgr * * const volatile,void,int, ?? &>
  00076	3b 88 00 00 00
	00		 cmp	 ecx, DWORD PTR __Init_thread_epoch[eax]
  0007c	7e 3f		 jle	 SHORT $LN3@GetInstanc
  0007e	68 00 00 00 00	 push	 OFFSET ?$TSS1@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4HA ; TSS1<`template-parameter-2',ATL::CAtlStringMgr::tInstance,ATL::IAtlStringMgr * * const volatile,void,int, ?? &>
  00083	e8 00 00 00 00	 call	 __Init_thread_header
  00088	83 c4 04	 add	 esp, 4
  0008b	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS1@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4HA, -1 ; TSS1<`template-parameter-2',ATL::CAtlStringMgr::tInstance,ATL::IAtlStringMgr * * const volatile,void,int, ?? &>
  00092	75 29		 jne	 SHORT $LN3@GetInstanc
  00094	68 00 00 00 00	 push	 OFFSET ?strHeap@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4VCWin32Heap@3@A ; `ATL::CAtlStringMgr::GetInstance'::`2'::strHeap
  00099	b9 00 00 00 00	 mov	 ecx, OFFSET ?strMgr@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4V23@A ; `ATL::CAtlStringMgr::GetInstance'::`2'::strMgr
  0009e	e8 00 00 00 00	 call	 ??0CAtlStringMgr@ATL@@QAE@PAUIAtlMemMgr@1@@Z ; ATL::CAtlStringMgr::CAtlStringMgr
  000a3	68 00 00 00 00	 push	 OFFSET ??__FstrMgr@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@2@XZ@YAXXZ ; `ATL::CAtlStringMgr::GetInstance'::`2'::`dynamic atexit destructor for 'strMgr''
  000a8	e8 00 00 00 00	 call	 _atexit
  000ad	83 c4 04	 add	 esp, 4
  000b0	68 00 00 00 00	 push	 OFFSET ?$TSS1@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4HA ; TSS1<`template-parameter-2',ATL::CAtlStringMgr::tInstance,ATL::IAtlStringMgr * * const volatile,void,int, ?? &>
  000b5	e8 00 00 00 00	 call	 __Init_thread_footer
  000ba	83 c4 04	 add	 esp, 4
$LN3@GetInstanc:

; 60   : #pragma warning(pop)
; 61   : 
; 62   : 		return &strMgr;

  000bd	b8 00 00 00 00	 mov	 eax, OFFSET ?strMgr@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4V23@A ; `ATL::CAtlStringMgr::GetInstance'::`2'::strMgr

; 63   : 	}

  000c2	5d		 pop	 ebp
  000c3	c3		 ret	 0
?GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@2@XZ ENDP ; ATL::CAtlStringMgr::GetInstance
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atlstr.h
;	COMDAT ??1CAtlStringMgr@ATL@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CAtlStringMgr@ATL@@UAE@XZ PROC			; ATL::CAtlStringMgr::~CAtlStringMgr, COMDAT
; _this$ = ecx

; 44   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CAtlStringMgr@ATL@@6B@

; 45   : 		isInitialized = false;

  00010	c6 05 00 00 00
	00 00		 mov	 BYTE PTR ?isInitialized@CAtlStringMgr@ATL@@0_NA, 0 ; ATL::CAtlStringMgr::isInitialized

; 46   : 	}

  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
??1CAtlStringMgr@ATL@@UAE@XZ ENDP			; ATL::CAtlStringMgr::~CAtlStringMgr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atlstr.h
;	COMDAT ??0CAtlStringMgr@ATL@@QAE@PAUIAtlMemMgr@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pMemMgr$ = 8						; size = 4
??0CAtlStringMgr@ATL@@QAE@PAUIAtlMemMgr@1@@Z PROC	; ATL::CAtlStringMgr::CAtlStringMgr, COMDAT
; _this$ = ecx

; 40   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CAtlStringMgr@ATL@@6B@

; 39   : 		m_pMemMgr( pMemMgr )

  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	8b 55 08	 mov	 edx, DWORD PTR _pMemMgr$[ebp]
  00016	89 51 04	 mov	 DWORD PTR [ecx+4], edx

; 40   : 	{

  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	83 c1 08	 add	 ecx, 8
  0001f	e8 00 00 00 00	 call	 ??0CNilStringData@ATL@@QAE@XZ ; ATL::CNilStringData::CNilStringData

; 41   : 		m_nil.SetManager( this );

  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	50		 push	 eax
  00028	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	83 c1 08	 add	 ecx, 8
  0002e	e8 00 00 00 00	 call	 ?SetManager@CNilStringData@ATL@@QAEXPAUIAtlStringMgr@2@@Z ; ATL::CNilStringData::SetManager

; 42   : 	}

  00033	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c2 04 00	 ret	 4
??0CAtlStringMgr@ATL@@QAE@PAUIAtlMemMgr@1@@Z ENDP	; ATL::CAtlStringMgr::CAtlStringMgr
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F_AtlWinModule@ATL@@YAXXZ
text$yd	SEGMENT
??__F_AtlWinModule@ATL@@YAXXZ PROC			; ATL::`dynamic atexit destructor for '_AtlWinModule'', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET ?_AtlWinModule@ATL@@3VCAtlWinModule@1@A ; ATL::_AtlWinModule
  00008	e8 00 00 00 00	 call	 ??1CAtlWinModule@ATL@@QAE@XZ ; ATL::CAtlWinModule::~CAtlWinModule
  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??__F_AtlWinModule@ATL@@YAXXZ ENDP			; ATL::`dynamic atexit destructor for '_AtlWinModule''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atlbase.h
;	COMDAT ??__E_AtlWinModule@ATL@@YAXXZ
text$di	SEGMENT
??__E_AtlWinModule@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for '_AtlWinModule'', COMDAT

; 2815 : __declspec(selectany) CAtlWinModule _AtlWinModule;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET ?_AtlWinModule@ATL@@3VCAtlWinModule@1@A ; ATL::_AtlWinModule
  00008	e8 00 00 00 00	 call	 ??0CAtlWinModule@ATL@@QAE@XZ ; ATL::CAtlWinModule::CAtlWinModule
  0000d	68 00 00 00 00	 push	 OFFSET ??__F_AtlWinModule@ATL@@YAXXZ ; ATL::`dynamic atexit destructor for '_AtlWinModule''
  00012	e8 00 00 00 00	 call	 _atexit
  00017	83 c4 04	 add	 esp, 4
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??__E_AtlWinModule@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for '_AtlWinModule''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atlbase.h
;	COMDAT ?Term@CAtlWinModule@ATL@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Term@CAtlWinModule@ATL@@QAEXXZ PROC			; ATL::CAtlWinModule::Term, COMDAT
; _this$ = ecx

; 2799 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2800 : 		AtlWinModuleTerm(this, _AtlBaseModule.GetModuleInstance());

  00007	b9 00 00 00 00	 mov	 ecx, OFFSET ?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A ; ATL::_AtlBaseModule
  0000c	e8 00 00 00 00	 call	 ?GetModuleInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ ; ATL::CAtlBaseModule::GetModuleInstance
  00011	50		 push	 eax
  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	50		 push	 eax
  00016	e8 00 00 00 00	 call	 ?AtlWinModuleTerm@ATL@@YGJPAU_ATL_WIN_MODULE70@1@PAUHINSTANCE__@@@Z ; ATL::AtlWinModuleTerm

; 2801 : 	}

  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
?Term@CAtlWinModule@ATL@@QAEXXZ ENDP			; ATL::CAtlWinModule::Term
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atlbase.h
;	COMDAT ??1CAtlWinModule@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CAtlWinModule@ATL@@QAE@XZ PROC			; ATL::CAtlWinModule::~CAtlWinModule, COMDAT
; _this$ = ecx

; 2794 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CAtlWinModule@ATL@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 2795 : 		Term();

  00026	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	e8 00 00 00 00	 call	 ?Term@CAtlWinModule@ATL@@QAEXXZ ; ATL::CAtlWinModule::Term

; 2796 : 	}

  0002e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ??1_ATL_WIN_MODULE70@ATL@@QAE@XZ
  00036	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00039	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00040	59		 pop	 ecx
  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CAtlWinModule@ATL@@QAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CAtlWinModule@ATL@@QAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CAtlWinModule@ATL@@QAE@XZ ENDP			; ATL::CAtlWinModule::~CAtlWinModule
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atlbase.h
;	COMDAT ??0CAtlWinModule@ATL@@QAE@XZ
_TEXT	SEGMENT
_hr$ = -8						; size = 4
_this$ = -4						; size = 4
??0CAtlWinModule@ATL@@QAE@XZ PROC			; ATL::CAtlWinModule::CAtlWinModule, COMDAT
; _this$ = ecx

; 2780 : 	CAtlWinModule()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2781 : 	{

  00009	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	e8 00 00 00 00	 call	 ??0_ATL_WIN_MODULE70@ATL@@QAE@XZ

; 2782 : 		cbSize = sizeof(_ATL_WIN_MODULE);

  00011	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00014	c7 00 2c 00 00
	00		 mov	 DWORD PTR [eax], 44	; 0000002cH

; 2783 : 		HRESULT hr = AtlWinModuleInit(this);

  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	51		 push	 ecx
  0001e	e8 00 00 00 00	 call	 ?AtlWinModuleInit@ATL@@YGJPAU_ATL_WIN_MODULE70@1@@Z ; ATL::AtlWinModuleInit
  00023	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax

; 2784 : 		if (FAILED(hr))

  00026	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0002a	7d 10		 jge	 SHORT $LN1@CAtlWinMod

; 2785 : 		{
; 2786 : 			ATLASSERT(0);
; 2787 : 			CAtlBaseModule::m_bInitFailed = true;

  0002c	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?m_bInitFailed@CAtlBaseModule@ATL@@2_NA, 1 ; ATL::CAtlBaseModule::m_bInitFailed

; 2788 : 			cbSize = 0;

  00033	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00036	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], 0
$LN1@CAtlWinMod:

; 2789 : 			return;
; 2790 : 		}
; 2791 : 	}

  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c3		 ret	 0
??0CAtlWinModule@ATL@@QAE@XZ ENDP			; ATL::CAtlWinModule::CAtlWinModule
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F_AtlComModule@ATL@@YAXXZ
text$yd	SEGMENT
??__F_AtlComModule@ATL@@YAXXZ PROC			; ATL::`dynamic atexit destructor for '_AtlComModule'', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET ?_AtlComModule@ATL@@3VCAtlComModule@1@A ; ATL::_AtlComModule
  00008	e8 00 00 00 00	 call	 ??1CAtlComModule@ATL@@QAE@XZ ; ATL::CAtlComModule::~CAtlComModule
  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??__F_AtlComModule@ATL@@YAXXZ ENDP			; ATL::`dynamic atexit destructor for '_AtlComModule''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atlbase.h
;	COMDAT ??__E_AtlComModule@ATL@@YAXXZ
text$di	SEGMENT
??__E_AtlComModule@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for '_AtlComModule'', COMDAT

; 2559 : __declspec(selectany) CAtlComModule _AtlComModule;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET ?_AtlComModule@ATL@@3VCAtlComModule@1@A ; ATL::_AtlComModule
  00008	e8 00 00 00 00	 call	 ??0CAtlComModule@ATL@@QAE@XZ ; ATL::CAtlComModule::CAtlComModule
  0000d	68 00 00 00 00	 push	 OFFSET ??__F_AtlComModule@ATL@@YAXXZ ; ATL::`dynamic atexit destructor for '_AtlComModule''
  00012	e8 00 00 00 00	 call	 _atexit
  00017	83 c4 04	 add	 esp, 4
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??__E_AtlComModule@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for '_AtlComModule''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atlbase.h
;	COMDAT ?Term@CAtlComModule@ATL@@QAEXXZ
_TEXT	SEGMENT
_factory$1 = -16					; size = 4
_pCache$2 = -12						; size = 4
_this$ = -8						; size = 4
_ppEntry$3 = -4						; size = 4
?Term@CAtlComModule@ATL@@QAEXXZ PROC			; ATL::CAtlComModule::Term, COMDAT
; _this$ = ecx

; 2456 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 2457 : 		if (cbSize == 0)

  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	83 38 00	 cmp	 DWORD PTR [eax], 0
  0000f	75 02		 jne	 SHORT $LN5@Term

; 2458 : 			return;

  00011	eb 76		 jmp	 SHORT $LN1@Term
$LN5@Term:

; 2459 : 
; 2460 : 		for (_ATL_OBJMAP_ENTRY_EX** ppEntry = m_ppAutoObjMapFirst; ppEntry < m_ppAutoObjMapLast; ppEntry++)

  00013	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00019	89 55 fc	 mov	 DWORD PTR _ppEntry$3[ebp], edx
  0001c	eb 09		 jmp	 SHORT $LN4@Term
$LN2@Term:
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _ppEntry$3[ebp]
  00021	83 c0 04	 add	 eax, 4
  00024	89 45 fc	 mov	 DWORD PTR _ppEntry$3[ebp], eax
$LN4@Term:
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	8b 55 fc	 mov	 edx, DWORD PTR _ppEntry$3[ebp]
  0002d	3b 51 0c	 cmp	 edx, DWORD PTR [ecx+12]
  00030	73 43		 jae	 SHORT $LN3@Term

; 2461 : 		{
; 2462 : 			if (*ppEntry != NULL)

  00032	8b 45 fc	 mov	 eax, DWORD PTR _ppEntry$3[ebp]
  00035	83 38 00	 cmp	 DWORD PTR [eax], 0
  00038	74 39		 je	 SHORT $LN6@Term

; 2463 : 			{
; 2464 : 				_ATL_OBJMAP_CACHE* pCache = (**ppEntry).pCache;

  0003a	8b 4d fc	 mov	 ecx, DWORD PTR _ppEntry$3[ebp]
  0003d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0003f	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00042	89 45 f4	 mov	 DWORD PTR _pCache$2[ebp], eax

; 2465 : 				
; 2466 : 				if (pCache->pCF != NULL)

  00045	8b 4d f4	 mov	 ecx, DWORD PTR _pCache$2[ebp]
  00048	83 39 00	 cmp	 DWORD PTR [ecx], 0
  0004b	74 26		 je	 SHORT $LN6@Term

; 2467 : 				{
; 2468 : 					// Decode factory pointer if it's not null
; 2469 : 					IUnknown *factory = reinterpret_cast<IUnknown*>(::DecodePointer(pCache->pCF));

  0004d	8b 55 f4	 mov	 edx, DWORD PTR _pCache$2[ebp]
  00050	8b 02		 mov	 eax, DWORD PTR [edx]
  00052	50		 push	 eax
  00053	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DecodePointer@4
  00059	89 45 f0	 mov	 DWORD PTR _factory$1[ebp], eax

; 2470 : 					_Analysis_assume_(factory != nullptr);
; 2471 : 					factory->Release();					

  0005c	8b 4d f0	 mov	 ecx, DWORD PTR _factory$1[ebp]
  0005f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00061	8b 45 f0	 mov	 eax, DWORD PTR _factory$1[ebp]
  00064	50		 push	 eax
  00065	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  00068	ff d1		 call	 ecx

; 2472 : 					pCache->pCF = NULL;

  0006a	8b 55 f4	 mov	 edx, DWORD PTR _pCache$2[ebp]
  0006d	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], 0
$LN6@Term:

; 2473 : 				}				
; 2474 : 			}
; 2475 : 		}

  00073	eb a9		 jmp	 SHORT $LN2@Term
$LN3@Term:

; 2476 : 		m_csObjMap.Term();

  00075	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00078	83 c1 10	 add	 ecx, 16			; 00000010H
  0007b	e8 00 00 00 00	 call	 ?Term@CComCriticalSection@ATL@@QAEJXZ ; ATL::CComCriticalSection::Term

; 2477 : 		// Set to 0 to indicate that this function has been called
; 2478 : 		// At this point no one should be concerned about cbsize
; 2479 : 		// having the correct value
; 2480 : 		cbSize = 0;

  00080	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00083	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$LN1@Term:

; 2481 : 	}

  00089	8b e5		 mov	 esp, ebp
  0008b	5d		 pop	 ebp
  0008c	c3		 ret	 0
?Term@CAtlComModule@ATL@@QAEXXZ ENDP			; ATL::CAtlComModule::Term
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atlbase.h
;	COMDAT ??1CAtlComModule@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CAtlComModule@ATL@@QAE@XZ PROC			; ATL::CAtlComModule::~CAtlComModule, COMDAT
; _this$ = ecx

; 2450 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CAtlComModule@ATL@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 2451 : 		Term();

  00026	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	e8 00 00 00 00	 call	 ?Term@CAtlComModule@ATL@@QAEXXZ ; ATL::CAtlComModule::Term

; 2452 : 	}

  0002e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ??1_ATL_COM_MODULE70@ATL@@QAE@XZ
  00036	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00039	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00040	59		 pop	 ecx
  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CAtlComModule@ATL@@QAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CAtlComModule@ATL@@QAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CAtlComModule@ATL@@QAE@XZ ENDP			; ATL::CAtlComModule::~CAtlComModule
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atlbase.h
;	COMDAT ??0CAtlComModule@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CAtlComModule@ATL@@QAE@XZ PROC			; ATL::CAtlComModule::CAtlComModule, COMDAT
; _this$ = ecx

; 2429 : 	CAtlComModule() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2430 : 	{

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0_ATL_COM_MODULE70@ATL@@QAE@XZ

; 2431 : 		cbSize = 0;

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 2432 : 
; 2433 : 		m_hInstTypeLib = reinterpret_cast<HINSTANCE>(&__ImageBase);

  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ___ImageBase

; 2434 : 
; 2435 : 		m_ppAutoObjMapFirst = &__pobjMapEntryFirst + 1;

  00022	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00025	c7 42 08 04 00
	00 00		 mov	 DWORD PTR [edx+8], OFFSET ___pobjMapEntryFirst+4

; 2436 : 		m_ppAutoObjMapLast = &__pobjMapEntryLast;

  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], OFFSET ___pobjMapEntryLast

; 2437 : 
; 2438 : 		if (FAILED(m_csObjMap.Init()))

  00036	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00039	83 c1 10	 add	 ecx, 16			; 00000010H
  0003c	e8 00 00 00 00	 call	 ?Init@CComCriticalSection@ATL@@QAEJXZ ; ATL::CComCriticalSection::Init
  00041	85 c0		 test	 eax, eax
  00043	7d 09		 jge	 SHORT $LN2@CAtlComMod

; 2439 : 		{
; 2440 : 			ATLTRACE(atlTraceCOM, 0, _T("ERROR : Unable to initialize critical section in CAtlComModule\n"));
; 2441 : 			ATLASSERT(0);
; 2442 : 			CAtlBaseModule::m_bInitFailed = true;

  00045	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?m_bInitFailed@CAtlBaseModule@ATL@@2_NA, 1 ; ATL::CAtlBaseModule::m_bInitFailed

; 2443 : 			return;

  0004c	eb 09		 jmp	 SHORT $LN1@CAtlComMod
$LN2@CAtlComMod:

; 2444 : 		}
; 2445 : 		// Set cbSize on success.
; 2446 : 		cbSize = sizeof(_ATL_COM_MODULE);

  0004e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	c7 01 28 00 00
	00		 mov	 DWORD PTR [ecx], 40	; 00000028H
$LN1@CAtlComMod:

; 2447 : 	}

  00057	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c3		 ret	 0
??0CAtlComModule@ATL@@QAE@XZ ENDP			; ATL::CAtlComModule::CAtlComModule
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atlbase.h
;	COMDAT ?AtlWinModuleTerm@ATL@@YGJPAU_ATL_WIN_MODULE70@1@PAUHINSTANCE__@@@Z
_TEXT	SEGMENT
_i$1 = -4						; size = 4
_pWinModule$ = 8					; size = 4
_hInst$ = 12						; size = 4
?AtlWinModuleTerm@ATL@@YGJPAU_ATL_WIN_MODULE70@1@PAUHINSTANCE__@@@Z PROC ; ATL::AtlWinModuleTerm, COMDAT

; 7649 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 7650 : 	if (pWinModule == NULL)

  00004	83 7d 08 00	 cmp	 DWORD PTR _pWinModule$[ebp], 0
  00008	75 07		 jne	 SHORT $LN5@AtlWinModu

; 7651 : 		return E_INVALIDARG;

  0000a	b8 57 00 07 80	 mov	 eax, -2147024809	; 80070057H
  0000f	eb 7d		 jmp	 SHORT $LN1@AtlWinModu
$LN5@AtlWinModu:

; 7652 : 	if (pWinModule->cbSize == 0)

  00011	8b 45 08	 mov	 eax, DWORD PTR _pWinModule$[ebp]
  00014	83 38 00	 cmp	 DWORD PTR [eax], 0
  00017	75 04		 jne	 SHORT $LN6@AtlWinModu

; 7653 : 		return S_OK;

  00019	33 c0		 xor	 eax, eax
  0001b	eb 71		 jmp	 SHORT $LN1@AtlWinModu
$LN6@AtlWinModu:

; 7654 : 	if (pWinModule->cbSize != sizeof(_ATL_WIN_MODULE))

  0001d	8b 4d 08	 mov	 ecx, DWORD PTR _pWinModule$[ebp]
  00020	83 39 2c	 cmp	 DWORD PTR [ecx], 44	; 0000002cH
  00023	74 07		 je	 SHORT $LN7@AtlWinModu

; 7655 : 		return E_INVALIDARG;

  00025	b8 57 00 07 80	 mov	 eax, -2147024809	; 80070057H
  0002a	eb 62		 jmp	 SHORT $LN1@AtlWinModu
$LN7@AtlWinModu:

; 7656 : 
; 7657 : 	for (int i = 0; i < pWinModule->m_rgWindowClassAtoms.GetSize(); i++)

  0002c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  00033	eb 09		 jmp	 SHORT $LN4@AtlWinModu
$LN2@AtlWinModu:
  00035	8b 55 fc	 mov	 edx, DWORD PTR _i$1[ebp]
  00038	83 c2 01	 add	 edx, 1
  0003b	89 55 fc	 mov	 DWORD PTR _i$1[ebp], edx
$LN4@AtlWinModu:
  0003e	8b 4d 08	 mov	 ecx, DWORD PTR _pWinModule$[ebp]
  00041	83 c1 20	 add	 ecx, 32			; 00000020H
  00044	e8 00 00 00 00	 call	 ?GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QBEHXZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::GetSize
  00049	39 45 fc	 cmp	 DWORD PTR _i$1[ebp], eax
  0004c	7d 1f		 jge	 SHORT $LN3@AtlWinModu

; 7658 : 		UnregisterClass((LPCTSTR)pWinModule->m_rgWindowClassAtoms[i], hInst);

  0004e	8b 45 0c	 mov	 eax, DWORD PTR _hInst$[ebp]
  00051	50		 push	 eax
  00052	8b 4d fc	 mov	 ecx, DWORD PTR _i$1[ebp]
  00055	51		 push	 ecx
  00056	8b 4d 08	 mov	 ecx, DWORD PTR _pWinModule$[ebp]
  00059	83 c1 20	 add	 ecx, 32			; 00000020H
  0005c	e8 00 00 00 00	 call	 ??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEAAGH@Z ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::operator[]
  00061	0f b7 10	 movzx	 edx, WORD PTR [eax]
  00064	52		 push	 edx
  00065	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__UnregisterClassW@8
  0006b	eb c8		 jmp	 SHORT $LN2@AtlWinModu
$LN3@AtlWinModu:

; 7659 : 	pWinModule->m_rgWindowClassAtoms.RemoveAll();

  0006d	8b 4d 08	 mov	 ecx, DWORD PTR _pWinModule$[ebp]
  00070	83 c1 20	 add	 ecx, 32			; 00000020H
  00073	e8 00 00 00 00	 call	 ?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXXZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::RemoveAll

; 7660 : 	pWinModule->m_csWindowCreate.Term();

  00078	8b 4d 08	 mov	 ecx, DWORD PTR _pWinModule$[ebp]
  0007b	83 c1 04	 add	 ecx, 4
  0007e	e8 00 00 00 00	 call	 ?Term@CComCriticalSection@ATL@@QAEJXZ ; ATL::CComCriticalSection::Term

; 7661 : 	pWinModule->cbSize = 0;

  00083	8b 45 08	 mov	 eax, DWORD PTR _pWinModule$[ebp]
  00086	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 7662 : 	return S_OK;

  0008c	33 c0		 xor	 eax, eax
$LN1@AtlWinModu:

; 7663 : }

  0008e	8b e5		 mov	 esp, ebp
  00090	5d		 pop	 ebp
  00091	c2 08 00	 ret	 8
?AtlWinModuleTerm@ATL@@YGJPAU_ATL_WIN_MODULE70@1@PAUHINSTANCE__@@@Z ENDP ; ATL::AtlWinModuleTerm
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atlbase.h
;	COMDAT ?AtlWinModuleInit@ATL@@YGJPAU_ATL_WIN_MODULE70@1@@Z
_TEXT	SEGMENT
_hr$ = -4						; size = 4
_pWinModule$ = 8					; size = 4
?AtlWinModuleInit@ATL@@YGJPAU_ATL_WIN_MODULE70@1@@Z PROC ; ATL::AtlWinModuleInit, COMDAT

; 8393 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 8394 : 	if (pWinModule == NULL)

  00004	83 7d 08 00	 cmp	 DWORD PTR _pWinModule$[ebp], 0
  00008	75 07		 jne	 SHORT $LN2@AtlWinModu

; 8395 : 		return E_INVALIDARG;

  0000a	b8 57 00 07 80	 mov	 eax, -2147024809	; 80070057H
  0000f	eb 2a		 jmp	 SHORT $LN1@AtlWinModu
$LN2@AtlWinModu:

; 8396 : 
; 8397 : 	// check only in the DLL
; 8398 : 	if (pWinModule->cbSize != sizeof(_ATL_WIN_MODULE))

  00011	8b 45 08	 mov	 eax, DWORD PTR _pWinModule$[ebp]
  00014	83 38 2c	 cmp	 DWORD PTR [eax], 44	; 0000002cH
  00017	74 07		 je	 SHORT $LN3@AtlWinModu

; 8399 : 		return E_INVALIDARG;

  00019	b8 57 00 07 80	 mov	 eax, -2147024809	; 80070057H
  0001e	eb 1b		 jmp	 SHORT $LN1@AtlWinModu
$LN3@AtlWinModu:

; 8400 : 
; 8401 : 	pWinModule->m_pCreateWndList = NULL;

  00020	8b 4d 08	 mov	 ecx, DWORD PTR _pWinModule$[ebp]
  00023	c7 41 1c 00 00
	00 00		 mov	 DWORD PTR [ecx+28], 0

; 8402 : 
; 8403 : 	HRESULT hr = pWinModule->m_csWindowCreate.Init();

  0002a	8b 4d 08	 mov	 ecx, DWORD PTR _pWinModule$[ebp]
  0002d	83 c1 04	 add	 ecx, 4
  00030	e8 00 00 00 00	 call	 ?Init@CComCriticalSection@ATL@@QAEJXZ ; ATL::CComCriticalSection::Init
  00035	89 45 fc	 mov	 DWORD PTR _hr$[ebp], eax

; 8404 : 	if (FAILED(hr))
; 8405 : 	{
; 8406 : 		ATLTRACE(atlTraceWindowing, 0, _T("ERROR : Unable to initialize critical section in AtlWinModuleInit\n"));
; 8407 : 		ATLASSERT(0);
; 8408 : 	}
; 8409 : 	return hr;

  00038	8b 45 fc	 mov	 eax, DWORD PTR _hr$[ebp]
$LN1@AtlWinModu:

; 8410 : }

  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c2 04 00	 ret	 4
?AtlWinModuleInit@ATL@@YGJPAU_ATL_WIN_MODULE70@1@@Z ENDP ; ATL::AtlWinModuleInit
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_ATL_WIN_MODULE70@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_ATL_WIN_MODULE70@ATL@@QAE@XZ PROC			; ATL::_ATL_WIN_MODULE70::~_ATL_WIN_MODULE70, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	83 c1 20	 add	 ecx, 32			; 00000020H
  0000d	e8 00 00 00 00	 call	 ??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::~CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	83 c1 04	 add	 ecx, 4
  00018	e8 00 00 00 00	 call	 ??1CComCriticalSection@ATL@@QAE@XZ ; ATL::CComCriticalSection::~CComCriticalSection
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
??1_ATL_WIN_MODULE70@ATL@@QAE@XZ ENDP			; ATL::_ATL_WIN_MODULE70::~_ATL_WIN_MODULE70
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0_ATL_WIN_MODULE70@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0_ATL_WIN_MODULE70@ATL@@QAE@XZ PROC			; ATL::_ATL_WIN_MODULE70::_ATL_WIN_MODULE70, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0_ATL_WIN_MODULE70@ATL@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00026	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	83 c1 04	 add	 ecx, 4
  0002c	e8 00 00 00 00	 call	 ??0CComCriticalSection@ATL@@QAE@XZ ; ATL::CComCriticalSection::CComCriticalSection
  00031	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00038	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003b	83 c1 20	 add	 ecx, 32			; 00000020H
  0003e	e8 00 00 00 00	 call	 ??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
  00043	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0004a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0004d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00050	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00057	59		 pop	 ecx
  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0_ATL_WIN_MODULE70@ATL@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 04	 add	 ecx, 4
  00006	e9 00 00 00 00	 jmp	 ??1CComCriticalSection@ATL@@QAE@XZ ; ATL::CComCriticalSection::~CComCriticalSection
__ehhandler$??0_ATL_WIN_MODULE70@ATL@@QAE@XZ:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0_ATL_WIN_MODULE70@ATL@@QAE@XZ
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0_ATL_WIN_MODULE70@ATL@@QAE@XZ ENDP			; ATL::_ATL_WIN_MODULE70::_ATL_WIN_MODULE70
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atlsimpcoll.h
;	COMDAT ??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEAAGH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nIndex$ = 8						; size = 4
??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEAAGH@Z PROC ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::operator[], COMDAT
; _this$ = ecx

; 236  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 237  : 		ATLASSERT(nIndex >= 0 && nIndex < m_nSize);
; 238  : 		if(nIndex < 0 || nIndex >= m_nSize)

  00007	83 7d 08 00	 cmp	 DWORD PTR _nIndex$[ebp], 0
  0000b	7c 0b		 jl	 SHORT $LN3@operator
  0000d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00010	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  00013	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  00016	7c 0c		 jl	 SHORT $LN2@operator
$LN3@operator:

; 239  : 		{
; 240  : 			_AtlRaiseException((DWORD)EXCEPTION_ARRAY_BOUNDS_EXCEEDED);

  00018	6a 01		 push	 1
  0001a	68 8c 00 00 c0	 push	 -1073741684		; c000008cH
  0001f	e8 00 00 00 00	 call	 ?_AtlRaiseException@ATL@@YAXKK@Z ; ATL::_AtlRaiseException
$LN2@operator:

; 241  : 		}
; 242  : 		return m_aT[nIndex];

  00024	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00027	8b 02		 mov	 eax, DWORD PTR [edx]
  00029	8b 4d 08	 mov	 ecx, DWORD PTR _nIndex$[ebp]
  0002c	8d 04 48	 lea	 eax, DWORD PTR [eax+ecx*2]
$LN4@operator:

; 243  : 	}

  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c2 04 00	 ret	 4
??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEAAGH@Z ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atlsimpcoll.h
;	COMDAT ?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT
_i$1 = -8						; size = 4
_this$ = -4						; size = 4
?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXXZ PROC ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::RemoveAll, COMDAT
; _this$ = ecx

; 215  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 216  : 		if(m_aT != NULL)

  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	83 38 00	 cmp	 DWORD PTR [eax], 0
  0000f	74 37		 je	 SHORT $LN5@RemoveAll

; 217  : 		{
; 218  : 			for(int i = 0; i < m_nSize; i++)

  00011	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  00018	eb 09		 jmp	 SHORT $LN4@RemoveAll
$LN2@RemoveAll:
  0001a	8b 4d f8	 mov	 ecx, DWORD PTR _i$1[ebp]
  0001d	83 c1 01	 add	 ecx, 1
  00020	89 4d f8	 mov	 DWORD PTR _i$1[ebp], ecx
$LN4@RemoveAll:
  00023	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00026	8b 45 f8	 mov	 eax, DWORD PTR _i$1[ebp]
  00029	3b 42 04	 cmp	 eax, DWORD PTR [edx+4]
  0002c	7d 02		 jge	 SHORT $LN3@RemoveAll

; 219  : 				m_aT[i].~T();

  0002e	eb ea		 jmp	 SHORT $LN2@RemoveAll
$LN3@RemoveAll:

; 220  : 			free(m_aT);

  00030	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	8b 11		 mov	 edx, DWORD PTR [ecx]
  00035	52		 push	 edx
  00036	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__free
  0003c	83 c4 04	 add	 esp, 4

; 221  : 			m_aT = NULL;

  0003f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00042	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$LN5@RemoveAll:

; 222  : 		}
; 223  : 		m_nSize = 0;

  00048	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0

; 224  : 		m_nAllocSize = 0;

  00052	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00055	c7 42 08 00 00
	00 00		 mov	 DWORD PTR [edx+8], 0

; 225  :     }

  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXXZ ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::RemoveAll
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atlsimpcoll.h
;	COMDAT ?GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QBEHXZ PROC ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::GetSize, COMDAT
; _this$ = ecx

; 160  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 161  : 		return m_nSize;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 40 04	 mov	 eax, DWORD PTR [eax+4]

; 162  : 	}

  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QBEHXZ ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::GetSize
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atlsimpcoll.h
;	COMDAT ??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ PROC ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::~CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >, COMDAT
; _this$ = ecx

; 310  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 311  : 	RemoveAll();

  00026	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	e8 00 00 00 00	 call	 ?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXXZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::RemoveAll

; 312  : }

  0002e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00031	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00038	59		 pop	 ecx
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::~CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atlsimpcoll.h
;	COMDAT ??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ PROC ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >, COMDAT
; _this$ = ecx

; 120  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 119  : 		m_aT(NULL), m_nSize(0), m_nAllocSize(0)

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
  0001a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001d	c7 42 08 00 00
	00 00		 mov	 DWORD PTR [edx+8], 0

; 121  : 	}

  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_ATL_COM_MODULE70@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_ATL_COM_MODULE70@ATL@@QAE@XZ PROC			; ATL::_ATL_COM_MODULE70::~_ATL_COM_MODULE70, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	83 c1 10	 add	 ecx, 16			; 00000010H
  0000d	e8 00 00 00 00	 call	 ??1CComCriticalSection@ATL@@QAE@XZ ; ATL::CComCriticalSection::~CComCriticalSection
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??1_ATL_COM_MODULE70@ATL@@QAE@XZ ENDP			; ATL::_ATL_COM_MODULE70::~_ATL_COM_MODULE70
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0_ATL_COM_MODULE70@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_ATL_COM_MODULE70@ATL@@QAE@XZ PROC			; ATL::_ATL_COM_MODULE70::_ATL_COM_MODULE70, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	83 c1 10	 add	 ecx, 16			; 00000010H
  0000d	e8 00 00 00 00	 call	 ??0CComCriticalSection@ATL@@QAE@XZ ; ATL::CComCriticalSection::CComCriticalSection
  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	8b e5		 mov	 esp, ebp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??0_ATL_COM_MODULE70@ATL@@QAE@XZ ENDP			; ATL::_ATL_COM_MODULE70::_ATL_COM_MODULE70
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\afx.inl
;	COMDAT ?_AfxInitManaged@@YAHXZ
_TEXT	SEGMENT
?_AfxInitManaged@@YAHXZ PROC				; _AfxInitManaged, COMDAT

; 76   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 77   : 	return 0;

  00003	33 c0		 xor	 eax, eax

; 78   : }

  00005	5d		 pop	 ebp
  00006	c3		 ret	 0
?_AfxInitManaged@@YAHXZ ENDP				; _AfxInitManaged
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atlsimpstr.h
;	COMDAT ?SetManager@CNilStringData@ATL@@QAEXPAUIAtlStringMgr@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pMgr$ = 8						; size = 4
?SetManager@CNilStringData@ATL@@QAEXPAUIAtlStringMgr@2@@Z PROC ; ATL::CNilStringData::SetManager, COMDAT
; _this$ = ecx

; 123  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 124  : 		ATLASSERT( pStringMgr == NULL );
; 125  : 		pStringMgr = pMgr;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _pMgr$[ebp]
  0000d	89 08		 mov	 DWORD PTR [eax], ecx

; 126  : 	}

  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c2 04 00	 ret	 4
?SetManager@CNilStringData@ATL@@QAEXPAUIAtlStringMgr@2@@Z ENDP ; ATL::CNilStringData::SetManager
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atlsimpstr.h
;	COMDAT ??0CNilStringData@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CNilStringData@ATL@@QAE@XZ PROC			; ATL::CNilStringData::CNilStringData, COMDAT
; _this$ = ecx

; 112  : 	CNilStringData() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 113  : 	{
; 114  : 		pStringMgr = NULL;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 115  : 		nRefs = 2;  // Never gets freed by IAtlStringMgr

  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	c7 41 0c 02 00
	00 00		 mov	 DWORD PTR [ecx+12], 2

; 116  : 		nDataLength = 0;

  0001a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001d	c7 42 04 00 00
	00 00		 mov	 DWORD PTR [edx+4], 0

; 117  : 		nAllocLength = 0;

  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 118  : 		achNil[0] = 0;

  0002e	b9 02 00 00 00	 mov	 ecx, 2
  00033	6b d1 00	 imul	 edx, ecx, 0
  00036	33 c0		 xor	 eax, eax
  00038	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003b	66 89 44 11 10	 mov	 WORD PTR [ecx+edx+16], ax

; 119  : 		achNil[1] = 0;

  00040	ba 02 00 00 00	 mov	 edx, 2
  00045	c1 e2 00	 shl	 edx, 0
  00048	33 c0		 xor	 eax, eax
  0004a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	66 89 44 11 10	 mov	 WORD PTR [ecx+edx+16], ax

; 120  : 	}

  00052	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00055	8b e5		 mov	 esp, ebp
  00057	5d		 pop	 ebp
  00058	c3		 ret	 0
??0CNilStringData@ATL@@QAE@XZ ENDP			; ATL::CNilStringData::CNilStringData
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atlsimpstr.h
;	COMDAT ?AddRef@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?AddRef@CStringData@ATL@@QAEXXZ PROC			; ATL::CStringData::AddRef, COMDAT
; _this$ = ecx

; 63   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 64   : 		ATLASSERT(nRefs > 0);
; 65   : 		_InterlockedIncrement(&nRefs);

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 c0 0c	 add	 eax, 12			; 0000000cH
  0000d	f0 ff 00	 lock	  inc	 DWORD PTR [eax]

; 66   : 	}

  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
?AddRef@CStringData@ATL@@QAEXXZ ENDP			; ATL::CStringData::AddRef
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atlalloc.h
;	COMDAT ??$AtlAdd@H@ATL@@YAJPAHHH@Z
_TEXT	SEGMENT
_ptResult$ = 8						; size = 4
_tLeft$ = 12						; size = 4
_tRight$ = 16						; size = 4
??$AtlAdd@H@ATL@@YAJPAHHH@Z PROC			; ATL::AtlAdd<int>, COMDAT

; 99   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 100  : 	if(::ATL::AtlLimits<T>::_Max-tLeft < tRight)

  00003	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  00008	2b 45 0c	 sub	 eax, DWORD PTR _tLeft$[ebp]
  0000b	3b 45 10	 cmp	 eax, DWORD PTR _tRight$[ebp]
  0000e	7d 0f		 jge	 SHORT $LN2@AtlAdd

; 101  : 	{
; 102  : 		return HRESULT_FROM_WIN32(ERROR_ARITHMETIC_OVERFLOW);

  00010	68 16 02 00 00	 push	 534			; 00000216H
  00015	e8 00 00 00 00	 call	 _HRESULT_FROM_WIN32
  0001a	83 c4 04	 add	 esp, 4
  0001d	eb 0d		 jmp	 SHORT $LN1@AtlAdd
$LN2@AtlAdd:

; 103  : 	}
; 104  : 	*ptResult= tLeft + tRight;

  0001f	8b 4d 0c	 mov	 ecx, DWORD PTR _tLeft$[ebp]
  00022	03 4d 10	 add	 ecx, DWORD PTR _tRight$[ebp]
  00025	8b 55 08	 mov	 edx, DWORD PTR _ptResult$[ebp]
  00028	89 0a		 mov	 DWORD PTR [edx], ecx

; 105  : 	return S_OK;

  0002a	33 c0		 xor	 eax, eax
$LN1@AtlAdd:

; 106  : }

  0002c	5d		 pop	 ebp
  0002d	c3		 ret	 0
??$AtlAdd@H@ATL@@YAJPAHHH@Z ENDP			; ATL::AtlAdd<int>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atlalloc.h
;	COMDAT ??$AtlAdd@I@ATL@@YAJPAIII@Z
_TEXT	SEGMENT
_ptResult$ = 8						; size = 4
_tLeft$ = 12						; size = 4
_tRight$ = 16						; size = 4
??$AtlAdd@I@ATL@@YAJPAIII@Z PROC			; ATL::AtlAdd<unsigned int>, COMDAT

; 99   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 100  : 	if(::ATL::AtlLimits<T>::_Max-tLeft < tRight)

  00003	83 c8 ff	 or	 eax, -1
  00006	2b 45 0c	 sub	 eax, DWORD PTR _tLeft$[ebp]
  00009	3b 45 10	 cmp	 eax, DWORD PTR _tRight$[ebp]
  0000c	73 0f		 jae	 SHORT $LN2@AtlAdd

; 101  : 	{
; 102  : 		return HRESULT_FROM_WIN32(ERROR_ARITHMETIC_OVERFLOW);

  0000e	68 16 02 00 00	 push	 534			; 00000216H
  00013	e8 00 00 00 00	 call	 _HRESULT_FROM_WIN32
  00018	83 c4 04	 add	 esp, 4
  0001b	eb 0d		 jmp	 SHORT $LN1@AtlAdd
$LN2@AtlAdd:

; 103  : 	}
; 104  : 	*ptResult= tLeft + tRight;

  0001d	8b 4d 0c	 mov	 ecx, DWORD PTR _tLeft$[ebp]
  00020	03 4d 10	 add	 ecx, DWORD PTR _tRight$[ebp]
  00023	8b 55 08	 mov	 edx, DWORD PTR _ptResult$[ebp]
  00026	89 0a		 mov	 DWORD PTR [edx], ecx

; 105  : 	return S_OK;

  00028	33 c0		 xor	 eax, eax
$LN1@AtlAdd:

; 106  : }

  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
??$AtlAdd@I@ATL@@YAJPAIII@Z ENDP			; ATL::AtlAdd<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GCWin32Heap@ATL@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCWin32Heap@ATL@@UAEPAXI@Z PROC			; ATL::CWin32Heap::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CWin32Heap@ATL@@UAE@XZ ; ATL::CWin32Heap::~CWin32Heap
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	74 0e		 je	 SHORT $LN2@scalar
  00017	6a 0c		 push	 12			; 0000000cH
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00022	83 c4 08	 add	 esp, 8
$LN2@scalar:
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_GCWin32Heap@ATL@@UAEPAXI@Z ENDP			; ATL::CWin32Heap::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atlmem.h
;	COMDAT ?GetSize@CWin32Heap@ATL@@UAEIPAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_p$ = 8							; size = 4
?GetSize@CWin32Heap@ATL@@UAEIPAX@Z PROC			; ATL::CWin32Heap::GetSize, COMDAT
; _this$ = ecx

; 175  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 176  : 		return( ::HeapSize( m_hHeap, 0, p ) );

  00007	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  0000a	50		 push	 eax
  0000b	6a 00		 push	 0
  0000d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00013	52		 push	 edx
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__HeapSize@12

; 177  : 	}

  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?GetSize@CWin32Heap@ATL@@UAEIPAX@Z ENDP			; ATL::CWin32Heap::GetSize
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atlmem.h
;	COMDAT ?Reallocate@CWin32Heap@ATL@@UAEPAXPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_p$ = 8							; size = 4
_nBytes$ = 12						; size = 4
?Reallocate@CWin32Heap@ATL@@UAEPAXPAXI@Z PROC		; ATL::CWin32Heap::Reallocate, COMDAT
; _this$ = ecx

; 160  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 161  : 		if( p == NULL )

  00007	83 7d 08 00	 cmp	 DWORD PTR _p$[ebp], 0
  0000b	75 12		 jne	 SHORT $LN2@Reallocate

; 162  : 		{
; 163  : 			return( Allocate( nBytes ) );

  0000d	8b 45 0c	 mov	 eax, DWORD PTR _nBytes$[ebp]
  00010	50		 push	 eax
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	8b 11		 mov	 edx, DWORD PTR [ecx]
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	8b 02		 mov	 eax, DWORD PTR [edx]
  0001b	ff d0		 call	 eax
  0001d	eb 32		 jmp	 SHORT $LN1@Reallocate
$LN2@Reallocate:

; 164  : 		}
; 165  : 
; 166  : 		if (nBytes==0)

  0001f	83 7d 0c 00	 cmp	 DWORD PTR _nBytes$[ebp], 0
  00023	75 15		 jne	 SHORT $LN3@Reallocate

; 167  : 		{
; 168  : 			  Free(p);

  00025	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00028	51		 push	 ecx
  00029	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002c	8b 02		 mov	 eax, DWORD PTR [edx]
  0002e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00034	ff d2		 call	 edx

; 169  : 			  return NULL;

  00036	33 c0		 xor	 eax, eax
  00038	eb 17		 jmp	 SHORT $LN1@Reallocate
$LN3@Reallocate:

; 170  : 		}
; 171  : 
; 172  : 		return( ::HeapReAlloc( m_hHeap, 0, p, nBytes ) );

  0003a	8b 45 0c	 mov	 eax, DWORD PTR _nBytes$[ebp]
  0003d	50		 push	 eax
  0003e	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00041	51		 push	 ecx
  00042	6a 00		 push	 0
  00044	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00047	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0004a	50		 push	 eax
  0004b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__HeapReAlloc@16
$LN1@Reallocate:

; 173  : 	}

  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 08 00	 ret	 8
?Reallocate@CWin32Heap@ATL@@UAEPAXPAXI@Z ENDP		; ATL::CWin32Heap::Reallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atlmem.h
;	COMDAT ?Free@CWin32Heap@ATL@@UAEXPAX@Z
_TEXT	SEGMENT
_bSuccess$1 = -8					; size = 4
_this$ = -4						; size = 4
_p$ = 8							; size = 4
?Free@CWin32Heap@ATL@@UAEXPAX@Z PROC			; ATL::CWin32Heap::Free, COMDAT
; _this$ = ecx

; 148  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 149  : 		if( p != NULL )

  00009	83 7d 08 00	 cmp	 DWORD PTR _p$[ebp], 0
  0000d	74 16		 je	 SHORT $LN1@Free

; 150  : 		{
; 151  : 			BOOL bSuccess;
; 152  : 
; 153  : 			bSuccess = ::HeapFree( m_hHeap, 0, p );

  0000f	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00012	50		 push	 eax
  00013	6a 00		 push	 0
  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0001b	52		 push	 edx
  0001c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__HeapFree@12
  00022	89 45 f8	 mov	 DWORD PTR _bSuccess$1[ebp], eax
$LN1@Free:

; 154  : 			ATLASSERT( bSuccess );
; 155  : 		}
; 156  : 	}

  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
?Free@CWin32Heap@ATL@@UAEXPAX@Z ENDP			; ATL::CWin32Heap::Free
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atlmem.h
;	COMDAT ?Allocate@CWin32Heap@ATL@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nBytes$ = 8						; size = 4
?Allocate@CWin32Heap@ATL@@UAEPAXI@Z PROC		; ATL::CWin32Heap::Allocate, COMDAT
; _this$ = ecx

; 144  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 145  : 		return( ::HeapAlloc( m_hHeap, 0, nBytes ) );

  00007	8b 45 08	 mov	 eax, DWORD PTR _nBytes$[ebp]
  0000a	50		 push	 eax
  0000b	6a 00		 push	 0
  0000d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00013	52		 push	 edx
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__HeapAlloc@12

; 146  : 	}

  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?Allocate@CWin32Heap@ATL@@UAEPAXI@Z ENDP		; ATL::CWin32Heap::Allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atlmem.h
;	COMDAT ??1CWin32Heap@ATL@@UAE@XZ
_TEXT	SEGMENT
_bSuccess$1 = -8					; size = 4
_this$ = -4						; size = 4
??1CWin32Heap@ATL@@UAE@XZ PROC				; ATL::CWin32Heap::~CWin32Heap, COMDAT
; _this$ = ecx

; 109  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CWin32Heap@ATL@@6B@

; 110  : #ifdef _ATL_USE_WINAPI_FAMILY_DESKTOP_APP
; 111  : 		if( m_bOwnHeap && (m_hHeap != NULL) )

  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	0f b6 51 08	 movzx	 edx, BYTE PTR [ecx+8]
  00019	85 d2		 test	 edx, edx
  0001b	74 19		 je	 SHORT $LN1@CWin32Heap
  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00024	74 10		 je	 SHORT $LN1@CWin32Heap

; 112  : 		{
; 113  : 			BOOL bSuccess;
; 114  : 
; 115  : 			bSuccess = ::HeapDestroy( m_hHeap );

  00026	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0002c	52		 push	 edx
  0002d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__HeapDestroy@4
  00033	89 45 f8	 mov	 DWORD PTR _bSuccess$1[ebp], eax
$LN1@CWin32Heap:

; 116  : 			ATLASSERT( bSuccess );
; 117  : 		}
; 118  : #endif
; 119  : 	}

  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c3		 ret	 0
??1CWin32Heap@ATL@@UAE@XZ ENDP				; ATL::CWin32Heap::~CWin32Heap
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atlmem.h
;	COMDAT ??0CWin32Heap@ATL@@QAE@PAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_hHeap$ = 8						; size = 4
??0CWin32Heap@ATL@@QAE@PAX@Z PROC			; ATL::CWin32Heap::CWin32Heap, COMDAT
; _this$ = ecx

; 89   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CWin32Heap@ATL@@6B@

; 87   : 		m_hHeap( hHeap ),

  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	8b 55 08	 mov	 edx, DWORD PTR _hHeap$[ebp]
  00016	89 51 04	 mov	 DWORD PTR [ecx+4], edx

; 88   : 		m_bOwnHeap( false )

  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	c6 40 08 00	 mov	 BYTE PTR [eax+8], 0

; 90   : 		ATLASSERT( hHeap != NULL );
; 91   : 	}

  00020	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
??0CWin32Heap@ATL@@QAE@PAX@Z ENDP			; ATL::CWin32Heap::CWin32Heap
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atlcore.h
;	COMDAT ?GetModuleInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetModuleInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ PROC ; ATL::CAtlBaseModule::GetModuleInstance, COMDAT
; _this$ = ecx

; 274  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 275  : 		return m_hInst;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 40 04	 mov	 eax, DWORD PTR [eax+4]

; 276  : 	}

  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?GetModuleInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ ENDP ; ATL::CAtlBaseModule::GetModuleInstance
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atlcore.h
;	COMDAT ?Term@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Term@CComCriticalSection@ATL@@QAEJXZ PROC		; ATL::CComCriticalSection::Term, COMDAT
; _this$ = ecx

; 139  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 140  : 		DeleteCriticalSection(&m_sec);

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	50		 push	 eax
  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeleteCriticalSection@4

; 141  : 		return S_OK;

  00011	33 c0		 xor	 eax, eax

; 142  : 	}

  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
?Term@CComCriticalSection@ATL@@QAEJXZ ENDP		; ATL::CComCriticalSection::Term
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atlcore.h
;	COMDAT ?Init@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
_hRes$ = -4						; size = 4
?Init@CComCriticalSection@ATL@@QAEJXZ PROC		; ATL::CComCriticalSection::Init, COMDAT
; _this$ = ecx

; 128  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 129  : 		HRESULT hRes = S_OK;

  00009	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _hRes$[ebp], 0

; 130  : 		if (!_AtlInitializeCriticalSectionEx(&m_sec, 0, 0))

  00010	6a 00		 push	 0
  00012	6a 00		 push	 0
  00014	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00017	50		 push	 eax
  00018	e8 00 00 00 00	 call	 ?_AtlInitializeCriticalSectionEx@ATL@@YAHPAU_RTL_CRITICAL_SECTION@@KK@Z ; ATL::_AtlInitializeCriticalSectionEx
  0001d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00020	85 c0		 test	 eax, eax
  00022	75 12		 jne	 SHORT $LN2@Init

; 131  : 		{
; 132  : 			hRes = HRESULT_FROM_WIN32(GetLastError());

  00024	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  0002a	50		 push	 eax
  0002b	e8 00 00 00 00	 call	 _HRESULT_FROM_WIN32
  00030	83 c4 04	 add	 esp, 4
  00033	89 45 fc	 mov	 DWORD PTR _hRes$[ebp], eax
$LN2@Init:

; 133  : 		}
; 134  : 
; 135  : 		return hRes;

  00036	8b 45 fc	 mov	 eax, DWORD PTR _hRes$[ebp]

; 136  : 	}

  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c3		 ret	 0
?Init@CComCriticalSection@ATL@@QAEJXZ ENDP		; ATL::CComCriticalSection::Init
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atlcore.h
;	COMDAT ??1CComCriticalSection@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CComCriticalSection@ATL@@QAE@XZ PROC			; ATL::CComCriticalSection::~CComCriticalSection, COMDAT
; _this$ = ecx

; 114  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 115  : 	}

  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
??1CComCriticalSection@ATL@@QAE@XZ ENDP			; ATL::CComCriticalSection::~CComCriticalSection
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atlcore.h
;	COMDAT ??0CComCriticalSection@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CComCriticalSection@ATL@@QAE@XZ PROC			; ATL::CComCriticalSection::CComCriticalSection, COMDAT
; _this$ = ecx

; 108  : 	CComCriticalSection() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 109  : 	{
; 110  : 		memset(&m_sec, 0, sizeof(CRITICAL_SECTION));

  00007	6a 18		 push	 24			; 00000018H
  00009	6a 00		 push	 0
  0000b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 _memset
  00014	83 c4 0c	 add	 esp, 12			; 0000000cH

; 111  : 	}

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??0CComCriticalSection@ATL@@QAE@XZ ENDP			; ATL::CComCriticalSection::CComCriticalSection
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atlwinverapi.h
;	COMDAT ?_AtlInitializeCriticalSectionEx@ATL@@YAHPAU_RTL_CRITICAL_SECTION@@KK@Z
_TEXT	SEGMENT
_lpCriticalSection$ = 8					; size = 4
_dwSpinCount$ = 12					; size = 4
_Flags$ = 16						; size = 4
?_AtlInitializeCriticalSectionEx@ATL@@YAHPAU_RTL_CRITICAL_SECTION@@KK@Z PROC ; ATL::_AtlInitializeCriticalSectionEx, COMDAT

; 727  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 728  : #if (NTDDI_VERSION >= NTDDI_VISTA) && !defined(_USING_V110_SDK71_) && !defined(_ATL_XP_TARGETING)
; 729  : 	// InitializeCriticalSectionEx is available in Vista or later, desktop or store apps
; 730  : 	return ::InitializeCriticalSectionEx(lpCriticalSection, dwSpinCount, Flags);
; 731  : #else
; 732  : 	UNREFERENCED_PARAMETER(Flags);
; 733  : 
; 734  : 	// ...otherwise fall back to using InitializeCriticalSectionAndSpinCount.
; 735  : 	return ::InitializeCriticalSectionAndSpinCount(lpCriticalSection, dwSpinCount);

  00003	8b 45 0c	 mov	 eax, DWORD PTR _dwSpinCount$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 08	 mov	 ecx, DWORD PTR _lpCriticalSection$[ebp]
  0000a	51		 push	 ecx
  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InitializeCriticalSectionAndSpinCount@8

; 736  : #endif
; 737  : }

  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
?_AtlInitializeCriticalSectionEx@ATL@@YAHPAU_RTL_CRITICAL_SECTION@@KK@Z ENDP ; ATL::_AtlInitializeCriticalSectionEx
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atlexcept.h
;	COMDAT ?_AtlRaiseException@ATL@@YAXKK@Z
_TEXT	SEGMENT
_dwExceptionCode$ = 8					; size = 4
_dwExceptionFlags$ = 12					; size = 4
?_AtlRaiseException@ATL@@YAXKK@Z PROC			; ATL::_AtlRaiseException, COMDAT

; 30   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 31   : 	RaiseException( dwExceptionCode, dwExceptionFlags, 0, NULL );

  00003	6a 00		 push	 0
  00005	6a 00		 push	 0
  00007	8b 45 0c	 mov	 eax, DWORD PTR _dwExceptionFlags$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR _dwExceptionCode$[ebp]
  0000e	51		 push	 ecx
  0000f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RaiseException@16

; 32   : }

  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
?_AtlRaiseException@ATL@@YAXKK@Z ENDP			; ATL::_AtlRaiseException
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceISAPI@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceISAPI@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceISAPI'', COMDAT

; 119  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceISAPI> atlTraceISAPI(_T("atlTraceISAPI"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	68 00 00 00 00	 push	 OFFSET $SG60888
  00008	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceISAPI@ATL@@3V?$CTraceCategoryEx@$0EAAAAA@$0A@@1@A ; ATL::atlTraceISAPI
  0000d	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0EAAAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<4194304,0>::CTraceCategoryEx<4194304,0>
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
??__EatlTraceISAPI@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceISAPI''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0EAAAAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0EAAAAA@$0A@@ATL@@QAE@PB_W@Z PROC ; ATL::CTraceCategoryEx<4194304,0>::CTraceCategoryEx<4194304,0>, COMDAT
; _this$ = ecx

; 495  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 496  : 	(void)pszCategoryName;
; 497  : }

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0EAAAAA@$0A@@ATL@@QAE@PB_W@Z ENDP ; ATL::CTraceCategoryEx<4194304,0>::CTraceCategoryEx<4194304,0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceSync@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceSync@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceSync'', COMDAT

; 118  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceSync> atlTraceSync(_T("atlTraceSync"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	68 00 00 00 00	 push	 OFFSET $SG60841
  00008	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceSync@ATL@@3V?$CTraceCategoryEx@$0CAAAAA@$0A@@1@A ; ATL::atlTraceSync
  0000d	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0CAAAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<2097152,0>::CTraceCategoryEx<2097152,0>
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
??__EatlTraceSync@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceSync''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0CAAAAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0CAAAAA@$0A@@ATL@@QAE@PB_W@Z PROC ; ATL::CTraceCategoryEx<2097152,0>::CTraceCategoryEx<2097152,0>, COMDAT
; _this$ = ecx

; 495  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 496  : 	(void)pszCategoryName;
; 497  : }

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0CAAAAA@$0A@@ATL@@QAE@PB_W@Z ENDP ; ATL::CTraceCategoryEx<2097152,0>::CTraceCategoryEx<2097152,0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceSecurity@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceSecurity@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceSecurity'', COMDAT

; 117  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceSecurity> atlTraceSecurity(_T("atlTraceSecurity"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	68 00 00 00 00	 push	 OFFSET $SG60794
  00008	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceSecurity@ATL@@3V?$CTraceCategoryEx@$0BAAAAA@$0A@@1@A ; ATL::atlTraceSecurity
  0000d	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0BAAAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<1048576,0>::CTraceCategoryEx<1048576,0>
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
??__EatlTraceSecurity@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceSecurity''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0BAAAAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0BAAAAA@$0A@@ATL@@QAE@PB_W@Z PROC ; ATL::CTraceCategoryEx<1048576,0>::CTraceCategoryEx<1048576,0>, COMDAT
; _this$ = ecx

; 495  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 496  : 	(void)pszCategoryName;
; 497  : }

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0BAAAAA@$0A@@ATL@@QAE@PB_W@Z ENDP ; ATL::CTraceCategoryEx<1048576,0>::CTraceCategoryEx<1048576,0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceUtil@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceUtil@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceUtil'', COMDAT

; 116  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceUtil> atlTraceUtil(_T("atlTraceUtil"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	68 00 00 00 00	 push	 OFFSET $SG60747
  00008	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceUtil@ATL@@3V?$CTraceCategoryEx@$0IAAAA@$0A@@1@A ; ATL::atlTraceUtil
  0000d	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0IAAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<524288,0>::CTraceCategoryEx<524288,0>
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
??__EatlTraceUtil@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceUtil''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceMap@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceMap@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceMap'', COMDAT

; 115  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceMap> atlTraceMap(_T("atlTraceMap"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	68 00 00 00 00	 push	 OFFSET $SG60742
  00008	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceMap@ATL@@3V?$CTraceCategoryEx@$0EAAAA@$0A@@1@A ; ATL::atlTraceMap
  0000d	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0EAAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<262144,0>::CTraceCategoryEx<262144,0>
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
??__EatlTraceMap@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceMap''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0EAAAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0EAAAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<262144,0>::CTraceCategoryEx<262144,0>, COMDAT
; _this$ = ecx

; 495  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 496  : 	(void)pszCategoryName;
; 497  : }

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0EAAAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<262144,0>::CTraceCategoryEx<262144,0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceString@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceString@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceString'', COMDAT

; 114  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceString> atlTraceString(_T("atlTraceString"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	68 00 00 00 00	 push	 OFFSET $SG60695
  00008	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceString@ATL@@3V?$CTraceCategoryEx@$0CAAAA@$0A@@1@A ; ATL::atlTraceString
  0000d	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<131072,0>::CTraceCategoryEx<131072,0>
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
??__EatlTraceString@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceString''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<131072,0>::CTraceCategoryEx<131072,0>, COMDAT
; _this$ = ecx

; 495  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 496  : 	(void)pszCategoryName;
; 497  : }

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<131072,0>::CTraceCategoryEx<131072,0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceStencil@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceStencil@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceStencil'', COMDAT

; 113  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceStencil> atlTraceStencil(_T("atlTraceStencil"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	68 00 00 00 00	 push	 OFFSET $SG60648
  00008	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceStencil@ATL@@3V?$CTraceCategoryEx@$0BAAAA@$0A@@1@A ; ATL::atlTraceStencil
  0000d	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0BAAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<65536,0>::CTraceCategoryEx<65536,0>
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
??__EatlTraceStencil@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceStencil''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0BAAAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0BAAAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<65536,0>::CTraceCategoryEx<65536,0>, COMDAT
; _this$ = ecx

; 495  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 496  : 	(void)pszCategoryName;
; 497  : }

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0BAAAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<65536,0>::CTraceCategoryEx<65536,0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceCache@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceCache@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceCache'', COMDAT

; 112  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceCache> atlTraceCache(_T("atlTraceCache"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	68 00 00 00 00	 push	 OFFSET $SG60601
  00008	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceCache@ATL@@3V?$CTraceCategoryEx@$0IAAA@$0A@@1@A ; ATL::atlTraceCache
  0000d	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0IAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<32768,0>::CTraceCategoryEx<32768,0>
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
??__EatlTraceCache@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceCache''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0IAAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0IAAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<32768,0>::CTraceCategoryEx<32768,0>, COMDAT
; _this$ = ecx

; 495  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 496  : 	(void)pszCategoryName;
; 497  : }

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0IAAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<32768,0>::CTraceCategoryEx<32768,0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceTime@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceTime@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceTime'', COMDAT

; 111  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceTime> atlTraceTime(_T("atlTraceTime"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	68 00 00 00 00	 push	 OFFSET $SG60554
  00008	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceTime@ATL@@3V?$CTraceCategoryEx@$0EAAA@$0A@@1@A ; ATL::atlTraceTime
  0000d	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0EAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<16384,0>::CTraceCategoryEx<16384,0>
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
??__EatlTraceTime@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceTime''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0EAAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0EAAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<16384,0>::CTraceCategoryEx<16384,0>, COMDAT
; _this$ = ecx

; 495  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 496  : 	(void)pszCategoryName;
; 497  : }

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0EAAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<16384,0>::CTraceCategoryEx<16384,0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceException@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceException@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceException'', COMDAT

; 110  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceException> atlTraceException(_T("atlTraceException"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	68 00 00 00 00	 push	 OFFSET $SG60507
  00008	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A ; ATL::atlTraceException
  0000d	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
??__EatlTraceException@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceException''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>, COMDAT
; _this$ = ecx

; 495  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 496  : 	(void)pszCategoryName;
; 497  : }

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceAllocation@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceAllocation@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceAllocation'', COMDAT

; 109  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceAllocation> atlTraceAllocation(_T("atlTraceAllocation"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	68 00 00 00 00	 push	 OFFSET $SG60460
  00008	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceAllocation@ATL@@3V?$CTraceCategoryEx@$0BAAA@$0A@@1@A ; ATL::atlTraceAllocation
  0000d	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0BAAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<4096,0>::CTraceCategoryEx<4096,0>
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
??__EatlTraceAllocation@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceAllocation''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0BAAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0BAAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<4096,0>::CTraceCategoryEx<4096,0>, COMDAT
; _this$ = ecx

; 495  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 496  : 	(void)pszCategoryName;
; 497  : }

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0BAAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<4096,0>::CTraceCategoryEx<4096,0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceNotImpl@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceNotImpl@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceNotImpl'', COMDAT

; 108  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceNotImpl> atlTraceNotImpl(_T("atlTraceNotImpl"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	68 00 00 00 00	 push	 OFFSET $SG60413
  00008	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceNotImpl@ATL@@3V?$CTraceCategoryEx@$0IAA@$0A@@1@A ; ATL::atlTraceNotImpl
  0000d	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<2048,0>::CTraceCategoryEx<2048,0>
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
??__EatlTraceNotImpl@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceNotImpl''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<2048,0>::CTraceCategoryEx<2048,0>, COMDAT
; _this$ = ecx

; 495  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 496  : 	(void)pszCategoryName;
; 497  : }

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<2048,0>::CTraceCategoryEx<2048,0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceSnapin@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceSnapin@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceSnapin'', COMDAT

; 107  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceSnapin> atlTraceSnapin(_T("atlTraceSnapin"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	68 00 00 00 00	 push	 OFFSET $SG60366
  00008	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceSnapin@ATL@@3V?$CTraceCategoryEx@$0EAA@$0A@@1@A ; ATL::atlTraceSnapin
  0000d	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0EAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<1024,0>::CTraceCategoryEx<1024,0>
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
??__EatlTraceSnapin@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceSnapin''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0EAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0EAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<1024,0>::CTraceCategoryEx<1024,0>, COMDAT
; _this$ = ecx

; 495  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 496  : 	(void)pszCategoryName;
; 497  : }

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0EAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<1024,0>::CTraceCategoryEx<1024,0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceDBProvider@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceDBProvider@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceDBProvider'', COMDAT

; 106  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceDBProvider> atlTraceDBProvider(_T("atlTraceDBProvider"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	68 00 00 00 00	 push	 OFFSET $SG60319
  00008	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceDBProvider@ATL@@3V?$CTraceCategoryEx@$0CAA@$0A@@1@A ; ATL::atlTraceDBProvider
  0000d	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0CAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<512,0>::CTraceCategoryEx<512,0>
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
??__EatlTraceDBProvider@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceDBProvider''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0CAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0CAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<512,0>::CTraceCategoryEx<512,0>, COMDAT
; _this$ = ecx

; 495  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 496  : 	(void)pszCategoryName;
; 497  : }

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0CAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<512,0>::CTraceCategoryEx<512,0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceDBClient@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceDBClient@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceDBClient'', COMDAT

; 105  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceDBClient> atlTraceDBClient(_T("atlTraceDBClient"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	68 00 00 00 00	 push	 OFFSET $SG60272
  00008	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceDBClient@ATL@@3V?$CTraceCategoryEx@$0BAA@$0A@@1@A ; ATL::atlTraceDBClient
  0000d	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0BAA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<256,0>::CTraceCategoryEx<256,0>
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
??__EatlTraceDBClient@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceDBClient''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0BAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0BAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<256,0>::CTraceCategoryEx<256,0>, COMDAT
; _this$ = ecx

; 495  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 496  : 	(void)pszCategoryName;
; 497  : }

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0BAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<256,0>::CTraceCategoryEx<256,0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceHosting@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceHosting@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceHosting'', COMDAT

; 104  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceHosting> atlTraceHosting(_T("atlTraceHosting"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	68 00 00 00 00	 push	 OFFSET $SG60225
  00008	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceHosting@ATL@@3V?$CTraceCategoryEx@$0IA@$0A@@1@A ; ATL::atlTraceHosting
  0000d	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0IA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<128,0>::CTraceCategoryEx<128,0>
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
??__EatlTraceHosting@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceHosting''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0IA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0IA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<128,0>::CTraceCategoryEx<128,0>, COMDAT
; _this$ = ecx

; 495  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 496  : 	(void)pszCategoryName;
; 497  : }

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0IA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<128,0>::CTraceCategoryEx<128,0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceControls@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceControls@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceControls'', COMDAT

; 103  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceControls> atlTraceControls(_T("atlTraceControls"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	68 00 00 00 00	 push	 OFFSET $SG60178
  00008	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
  0000d	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<64,0>::CTraceCategoryEx<64,0>
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
??__EatlTraceControls@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceControls''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<64,0>::CTraceCategoryEx<64,0>, COMDAT
; _this$ = ecx

; 495  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 496  : 	(void)pszCategoryName;
; 497  : }

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<64,0>::CTraceCategoryEx<64,0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceWindowing@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceWindowing@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceWindowing'', COMDAT

; 102  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceWindowing> atlTraceWindowing(_T("atlTraceWindowing"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	68 00 00 00 00	 push	 OFFSET $SG60131
  00008	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceWindowing@ATL@@3V?$CTraceCategoryEx@$0CA@$0A@@1@A ; ATL::atlTraceWindowing
  0000d	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0CA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<32,0>::CTraceCategoryEx<32,0>
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
??__EatlTraceWindowing@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceWindowing''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0CA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0CA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<32,0>::CTraceCategoryEx<32,0>, COMDAT
; _this$ = ecx

; 495  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 496  : 	(void)pszCategoryName;
; 497  : }

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0CA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<32,0>::CTraceCategoryEx<32,0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceRefcount@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceRefcount@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceRefcount'', COMDAT

; 101  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceRefcount> atlTraceRefcount(_T("atlTraceRefcount"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	68 00 00 00 00	 push	 OFFSET $SG60084
  00008	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceRefcount@ATL@@3V?$CTraceCategoryEx@$0BA@$0A@@1@A ; ATL::atlTraceRefcount
  0000d	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0BA@$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<16,0>::CTraceCategoryEx<16,0>
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
??__EatlTraceRefcount@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceRefcount''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0BA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0BA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<16,0>::CTraceCategoryEx<16,0>, COMDAT
; _this$ = ecx

; 495  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 496  : 	(void)pszCategoryName;
; 497  : }

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0BA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<16,0>::CTraceCategoryEx<16,0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceRegistrar@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceRegistrar@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceRegistrar'', COMDAT

; 100  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceRegistrar> atlTraceRegistrar(_T("atlTraceRegistrar"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	68 00 00 00 00	 push	 OFFSET $SG60037
  00008	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceRegistrar@ATL@@3V?$CTraceCategoryEx@$07$0A@@1@A ; ATL::atlTraceRegistrar
  0000d	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$07$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<8,0>::CTraceCategoryEx<8,0>
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
??__EatlTraceRegistrar@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceRegistrar''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$07$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$07$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<8,0>::CTraceCategoryEx<8,0>, COMDAT
; _this$ = ecx

; 495  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 496  : 	(void)pszCategoryName;
; 497  : }

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$07$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<8,0>::CTraceCategoryEx<8,0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceQI@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceQI@ATL@@YAXXZ PROC				; ATL::`dynamic initializer for 'atlTraceQI'', COMDAT

; 99   : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceQI> atlTraceQI(_T("atlTraceQI"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	68 00 00 00 00	 push	 OFFSET $SG59990
  00008	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceQI@ATL@@3V?$CTraceCategoryEx@$03$0A@@1@A ; ATL::atlTraceQI
  0000d	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$03$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<4,0>::CTraceCategoryEx<4,0>
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
??__EatlTraceQI@ATL@@YAXXZ ENDP				; ATL::`dynamic initializer for 'atlTraceQI''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$03$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$03$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<4,0>::CTraceCategoryEx<4,0>, COMDAT
; _this$ = ecx

; 495  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 496  : 	(void)pszCategoryName;
; 497  : }

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$03$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<4,0>::CTraceCategoryEx<4,0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceCOM@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceCOM@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceCOM'', COMDAT

; 98   : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceCom> atlTraceCOM(_T("atlTraceCOM"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	68 00 00 00 00	 push	 OFFSET $SG59943
  00008	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A ; ATL::atlTraceCOM
  0000d	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$01$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<2,0>::CTraceCategoryEx<2,0>
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
??__EatlTraceCOM@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceCOM''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$01$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$01$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<2,0>::CTraceCategoryEx<2,0>, COMDAT
; _this$ = ecx

; 495  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 496  : 	(void)pszCategoryName;
; 497  : }

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$01$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<2,0>::CTraceCategoryEx<2,0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceGeneral@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceGeneral@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceGeneral'', COMDAT

; 97   : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceGeneral> atlTraceGeneral(_T("atlTraceGeneral"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	68 00 00 00 00	 push	 OFFSET $SG59872
  00008	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceGeneral@ATL@@3V?$CTraceCategoryEx@$00$0A@@1@A ; ATL::atlTraceGeneral
  0000d	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$00$0A@@ATL@@QAE@PB_W@Z ; ATL::CTraceCategoryEx<1,0>::CTraceCategoryEx<1,0>
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
??__EatlTraceGeneral@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceGeneral''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$00$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$00$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<1,0>::CTraceCategoryEx<1,0>, COMDAT
; _this$ = ecx

; 495  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 496  : 	(void)pszCategoryName;
; 497  : }

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$00$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<1,0>::CTraceCategoryEx<1,0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0IAAAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0IAAAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<524288,0>::CTraceCategoryEx<524288,0>, COMDAT
; _this$ = ecx

; 495  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 496  : 	(void)pszCategoryName;
; 497  : }

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0IAAAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<524288,0>::CTraceCategoryEx<524288,0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atlalloc.h
;	COMDAT ??$AtlAdd@K@ATL@@YAJPAKKK@Z
_TEXT	SEGMENT
_ptResult$ = 8						; size = 4
_tLeft$ = 12						; size = 4
_tRight$ = 16						; size = 4
??$AtlAdd@K@ATL@@YAJPAKKK@Z PROC			; ATL::AtlAdd<unsigned long>, COMDAT

; 99   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 100  : 	if(::ATL::AtlLimits<T>::_Max-tLeft < tRight)

  00003	83 c8 ff	 or	 eax, -1
  00006	2b 45 0c	 sub	 eax, DWORD PTR _tLeft$[ebp]
  00009	3b 45 10	 cmp	 eax, DWORD PTR _tRight$[ebp]
  0000c	73 0f		 jae	 SHORT $LN2@AtlAdd

; 101  : 	{
; 102  : 		return HRESULT_FROM_WIN32(ERROR_ARITHMETIC_OVERFLOW);

  0000e	68 16 02 00 00	 push	 534			; 00000216H
  00013	e8 00 00 00 00	 call	 _HRESULT_FROM_WIN32
  00018	83 c4 04	 add	 esp, 4
  0001b	eb 0d		 jmp	 SHORT $LN1@AtlAdd
$LN2@AtlAdd:

; 103  : 	}
; 104  : 	*ptResult= tLeft + tRight;

  0001d	8b 4d 0c	 mov	 ecx, DWORD PTR _tLeft$[ebp]
  00020	03 4d 10	 add	 ecx, DWORD PTR _tRight$[ebp]
  00023	8b 55 08	 mov	 edx, DWORD PTR _ptResult$[ebp]
  00026	89 0a		 mov	 DWORD PTR [edx], ecx

; 105  : 	return S_OK;

  00028	33 c0		 xor	 eax, eax
$LN1@AtlAdd:

; 106  : }

  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
??$AtlAdd@K@ATL@@YAJPAKKK@Z ENDP			; ATL::AtlAdd<unsigned long>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atlalloc.h
;	COMDAT ??$AtlMultiply@K@ATL@@YAJPAKKK@Z
_TEXT	SEGMENT
_i64Result$ = -8					; size = 8
_piResult$ = 8						; size = 4
_iLeft$ = 12						; size = 4
_iRight$ = 16						; size = 4
??$AtlMultiply@K@ATL@@YAJPAKKK@Z PROC			; ATL::AtlMultiply<unsigned long>, COMDAT

; 180  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 181  : 	unsigned __int64 i64Result=static_cast<unsigned __int64>(iLeft) * static_cast<unsigned __int64>(iRight);

  00006	8b 45 0c	 mov	 eax, DWORD PTR _iLeft$[ebp]
  00009	f7 65 10	 mul	 DWORD PTR _iRight$[ebp]
  0000c	89 45 f8	 mov	 DWORD PTR _i64Result$[ebp], eax
  0000f	89 55 fc	 mov	 DWORD PTR _i64Result$[ebp+4], edx

; 182  : 	if(i64Result>ULONG_MAX)

  00012	83 7d fc 00	 cmp	 DWORD PTR _i64Result$[ebp+4], 0
  00016	77 06		 ja	 SHORT $LN4@AtlMultipl
  00018	83 7d f8 ff	 cmp	 DWORD PTR _i64Result$[ebp], -1
  0001c	76 0f		 jbe	 SHORT $LN2@AtlMultipl
$LN4@AtlMultipl:

; 183  : 	{
; 184  : 		return HRESULT_FROM_WIN32(ERROR_ARITHMETIC_OVERFLOW);

  0001e	68 16 02 00 00	 push	 534			; 00000216H
  00023	e8 00 00 00 00	 call	 _HRESULT_FROM_WIN32
  00028	83 c4 04	 add	 esp, 4
  0002b	eb 0a		 jmp	 SHORT $LN1@AtlMultipl
$LN2@AtlMultipl:

; 185  : 	}
; 186  : 	*piResult=static_cast<unsigned long _ATL_W64>(i64Result);

  0002d	8b 45 f8	 mov	 eax, DWORD PTR _i64Result$[ebp]
  00030	8b 4d 08	 mov	 ecx, DWORD PTR _piResult$[ebp]
  00033	89 01		 mov	 DWORD PTR [ecx], eax

; 187  : 	return S_OK;

  00035	33 c0		 xor	 eax, eax
$LN1@AtlMultipl:

; 188  : }

  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
??$AtlMultiply@K@ATL@@YAJPAKKK@Z ENDP			; ATL::AtlMultiply<unsigned long>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\atlmfc\include\atlalloc.h
;	COMDAT ??$AtlMultiply@I@ATL@@YAJPAIII@Z
_TEXT	SEGMENT
_i64Result$ = -8					; size = 8
_piResult$ = 8						; size = 4
_iLeft$ = 12						; size = 4
_iRight$ = 16						; size = 4
??$AtlMultiply@I@ATL@@YAJPAIII@Z PROC			; ATL::AtlMultiply<unsigned int>, COMDAT

; 150  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 151  : 	unsigned __int64 i64Result=static_cast<unsigned __int64>(iLeft) * static_cast<unsigned __int64>(iRight);

  00006	8b 45 0c	 mov	 eax, DWORD PTR _iLeft$[ebp]
  00009	f7 65 10	 mul	 DWORD PTR _iRight$[ebp]
  0000c	89 45 f8	 mov	 DWORD PTR _i64Result$[ebp], eax
  0000f	89 55 fc	 mov	 DWORD PTR _i64Result$[ebp+4], edx

; 152  : 	if(i64Result>UINT_MAX)

  00012	83 7d fc 00	 cmp	 DWORD PTR _i64Result$[ebp+4], 0
  00016	77 06		 ja	 SHORT $LN4@AtlMultipl
  00018	83 7d f8 ff	 cmp	 DWORD PTR _i64Result$[ebp], -1
  0001c	76 0f		 jbe	 SHORT $LN2@AtlMultipl
$LN4@AtlMultipl:

; 153  : 	{
; 154  : 		return HRESULT_FROM_WIN32(ERROR_ARITHMETIC_OVERFLOW);

  0001e	68 16 02 00 00	 push	 534			; 00000216H
  00023	e8 00 00 00 00	 call	 _HRESULT_FROM_WIN32
  00028	83 c4 04	 add	 esp, 4
  0002b	eb 0a		 jmp	 SHORT $LN1@AtlMultipl
$LN2@AtlMultipl:

; 155  : 	}
; 156  : 	*piResult=static_cast<unsigned int _ATL_W64>(i64Result);

  0002d	8b 45 f8	 mov	 eax, DWORD PTR _i64Result$[ebp]
  00030	8b 4d 08	 mov	 ecx, DWORD PTR _piResult$[ebp]
  00033	89 01		 mov	 DWORD PTR [ecx], eax

; 157  : 	return S_OK;

  00035	33 c0		 xor	 eax, eax
$LN1@AtlMultipl:

; 158  : }

  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
??$AtlMultiply@I@ATL@@YAJPAIII@Z ENDP			; ATL::AtlMultiply<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\windows kits\8.1\include\shared\winerror.h
;	COMDAT _HRESULT_FROM_WIN32
_TEXT	SEGMENT
tv68 = -4						; size = 4
_x$ = 8							; size = 4
_HRESULT_FROM_WIN32 PROC				; COMDAT

; 26297: FORCEINLINE HRESULT HRESULT_FROM_WIN32(unsigned long x) { return (HRESULT)(x) <= 0 ? (HRESULT)(x) : (HRESULT) (((x) & 0x0000FFFF) | (FACILITY_WIN32 << 16) | 0x80000000);}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	83 7d 08 00	 cmp	 DWORD PTR _x$[ebp], 0
  00008	7f 08		 jg	 SHORT $LN3@HRESULT_FR
  0000a	8b 45 08	 mov	 eax, DWORD PTR _x$[ebp]
  0000d	89 45 fc	 mov	 DWORD PTR tv68[ebp], eax
  00010	eb 18		 jmp	 SHORT $LN4@HRESULT_FR
$LN3@HRESULT_FR:
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _x$[ebp]
  00015	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  0001b	81 c9 00 00 07
	00		 or	 ecx, 458752		; 00070000H
  00021	81 c9 00 00 00
	80		 or	 ecx, -2147483648	; 80000000H
  00027	89 4d fc	 mov	 DWORD PTR tv68[ebp], ecx
$LN4@HRESULT_FR:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR tv68[ebp]
  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c3		 ret	 0
_HRESULT_FROM_WIN32 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\qijianban\laok\服务端\游戏组件\老k子游戏\红中麻将\服务器组件\stdafx.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\qijianban\laok\服务端\游戏组件\老k子游戏\红中麻将\服务器组件\stdafx.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
tv66 = -4						; size = 4
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
$LN2@vector:
  00004	8b 45 10	 mov	 eax, DWORD PTR ___n$[ebp]
  00007	89 45 fc	 mov	 DWORD PTR tv66[ebp], eax
  0000a	8b 4d 10	 mov	 ecx, DWORD PTR ___n$[ebp]
  0000d	83 e9 01	 sub	 ecx, 1
  00010	89 4d 10	 mov	 DWORD PTR ___n$[ebp], ecx
  00013	83 7d fc 00	 cmp	 DWORD PTR tv66[ebp], 0
  00017	76 11		 jbe	 SHORT $LN1@vector
  00019	8b 4d 08	 mov	 ecx, DWORD PTR ___t$[ebp]
  0001c	ff 55 14	 call	 DWORD PTR ___f$[ebp]
  0001f	8b 55 08	 mov	 edx, DWORD PTR ___t$[ebp]
  00022	03 55 0c	 add	 edx, DWORD PTR ___s$[ebp]
  00025	89 55 08	 mov	 DWORD PTR ___t$[ebp], edx
  00028	eb da		 jmp	 SHORT $LN2@vector
$LN1@vector:
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
